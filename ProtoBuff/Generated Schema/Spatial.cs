// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: s2clientprotocol/spatial.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SC2APIProtocol {

  /// <summary>Holder for reflection information generated from s2clientprotocol/spatial.proto</summary>
  public static partial class SpatialReflection {

    #region Descriptor
    /// <summary>File descriptor for s2clientprotocol/spatial.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpatialReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5zMmNsaWVudHByb3RvY29sL3NwYXRpYWwucHJvdG8SDlNDMkFQSVByb3Rv",
            "Y29sGh1zMmNsaWVudHByb3RvY29sL2NvbW1vbi5wcm90byKIAQoXT2JzZXJ2",
            "YXRpb25GZWF0dXJlTGF5ZXISLgoHcmVuZGVycxgBIAEoCzIdLlNDMkFQSVBy",
            "b3RvY29sLkZlYXR1cmVMYXllcnMSPQoPbWluaW1hcF9yZW5kZXJzGAIgASgL",
            "MiQuU0MyQVBJUHJvdG9jb2wuRmVhdHVyZUxheWVyc01pbmltYXAinAoKDUZl",
            "YXR1cmVMYXllcnMSLQoKaGVpZ2h0X21hcBgBIAEoCzIZLlNDMkFQSVByb3Rv",
            "Y29sLkltYWdlRGF0YRIxCg52aXNpYmlsaXR5X21hcBgCIAEoCzIZLlNDMkFQ",
            "SVByb3RvY29sLkltYWdlRGF0YRIoCgVjcmVlcBgDIAEoCzIZLlNDMkFQSVBy",
            "b3RvY29sLkltYWdlRGF0YRIoCgVwb3dlchgEIAEoCzIZLlNDMkFQSVByb3Rv",
            "Y29sLkltYWdlRGF0YRIsCglwbGF5ZXJfaWQYBSABKAsyGS5TQzJBUElQcm90",
            "b2NvbC5JbWFnZURhdGESLAoJdW5pdF90eXBlGAYgASgLMhkuU0MyQVBJUHJv",
            "dG9jb2wuSW1hZ2VEYXRhEisKCHNlbGVjdGVkGAcgASgLMhkuU0MyQVBJUHJv",
            "dG9jb2wuSW1hZ2VEYXRhEjIKD3VuaXRfaGl0X3BvaW50cxgIIAEoCzIZLlND",
            "MkFQSVByb3RvY29sLkltYWdlRGF0YRI4ChV1bml0X2hpdF9wb2ludHNfcmF0",
            "aW8YESABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESLgoLdW5pdF9l",
            "bmVyZ3kYCSABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESNAoRdW5p",
            "dF9lbmVyZ3lfcmF0aW8YEiABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURh",
            "dGESLwoMdW5pdF9zaGllbGRzGAogASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1h",
            "Z2VEYXRhEjUKEnVuaXRfc2hpZWxkc19yYXRpbxgTIAEoCzIZLlNDMkFQSVBy",
            "b3RvY29sLkltYWdlRGF0YRIyCg9wbGF5ZXJfcmVsYXRpdmUYCyABKAsyGS5T",
            "QzJBUElQcm90b2NvbC5JbWFnZURhdGESMgoPdW5pdF9kZW5zaXR5X2FhGA4g",
            "ASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRhEi8KDHVuaXRfZGVuc2l0",
            "eRgPIAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIqCgdlZmZlY3Rz",
            "GBQgASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRhEjEKDmhhbGx1Y2lu",
            "YXRpb25zGBUgASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRhEioKB2Ns",
            "b2FrZWQYFiABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESJwoEYmxp",
            "cBgXIAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIoCgVidWZmcxgY",
            "IAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIwCg1idWZmX2R1cmF0",
            "aW9uGBogASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRhEikKBmFjdGl2",
            "ZRgZIAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIxCg5idWlsZF9w",
            "cm9ncmVzcxgbIAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIsCgli",
            "dWlsZGFibGUYHCABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESKwoI",
            "cGF0aGFibGUYHSABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESLgoL",
            "cGxhY2Vob2xkZXIYHiABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGEi",
            "kAQKFEZlYXR1cmVMYXllcnNNaW5pbWFwEi0KCmhlaWdodF9tYXAYASABKAsy",
            "GS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESMQoOdmlzaWJpbGl0eV9tYXAY",
            "AiABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESKAoFY3JlZXAYAyAB",
            "KAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESKQoGY2FtZXJhGAQgASgL",
            "MhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRhEiwKCXBsYXllcl9pZBgFIAEo",
            "CzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIyCg9wbGF5ZXJfcmVsYXRp",
            "dmUYBiABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESKwoIc2VsZWN0",
            "ZWQYByABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGESKQoGYWxlcnRz",
            "GAkgASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRhEiwKCWJ1aWxkYWJs",
            "ZRgKIAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIrCghwYXRoYWJs",
            "ZRgLIAEoCzIZLlNDMkFQSVByb3RvY29sLkltYWdlRGF0YRIsCgl1bml0X3R5",
            "cGUYCCABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFnZURhdGEiZwoRT2JzZXJ2",
            "YXRpb25SZW5kZXISJgoDbWFwGAEgASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1h",
            "Z2VEYXRhEioKB21pbmltYXAYAiABKAsyGS5TQzJBUElQcm90b2NvbC5JbWFn",
            "ZURhdGEiuwIKDUFjdGlvblNwYXRpYWwSQAoMdW5pdF9jb21tYW5kGAEgASgL",
            "MiguU0MyQVBJUHJvdG9jb2wuQWN0aW9uU3BhdGlhbFVuaXRDb21tYW5kSAAS",
            "PgoLY2FtZXJhX21vdmUYAiABKAsyJy5TQzJBUElQcm90b2NvbC5BY3Rpb25T",
            "cGF0aWFsQ2FtZXJhTW92ZUgAEk8KFHVuaXRfc2VsZWN0aW9uX3BvaW50GAMg",
            "ASgLMi8uU0MyQVBJUHJvdG9jb2wuQWN0aW9uU3BhdGlhbFVuaXRTZWxlY3Rp",
            "b25Qb2ludEgAEk0KE3VuaXRfc2VsZWN0aW9uX3JlY3QYBCABKAsyLi5TQzJB",
            "UElQcm90b2NvbC5BY3Rpb25TcGF0aWFsVW5pdFNlbGVjdGlvblJlY3RIAEII",
            "CgZhY3Rpb24ivgEKGEFjdGlvblNwYXRpYWxVbml0Q29tbWFuZBISCgphYmls",
            "aXR5X2lkGAEgASgFEjUKE3RhcmdldF9zY3JlZW5fY29vcmQYAiABKAsyFi5T",
            "QzJBUElQcm90b2NvbC5Qb2ludElIABI2ChR0YXJnZXRfbWluaW1hcF9jb29y",
            "ZBgDIAEoCzIWLlNDMkFQSVByb3RvY29sLlBvaW50SUgAEhUKDXF1ZXVlX2Nv",
            "bW1hbmQYBCABKAhCCAoGdGFyZ2V0IkkKF0FjdGlvblNwYXRpYWxDYW1lcmFN",
            "b3ZlEi4KDmNlbnRlcl9taW5pbWFwGAEgASgLMhYuU0MyQVBJUHJvdG9jb2wu",
            "UG9pbnRJItoBCh9BY3Rpb25TcGF0aWFsVW5pdFNlbGVjdGlvblBvaW50EjYK",
            "FnNlbGVjdGlvbl9zY3JlZW5fY29vcmQYASABKAsyFi5TQzJBUElQcm90b2Nv",
            "bC5Qb2ludEkSQgoEdHlwZRgCIAEoDjI0LlNDMkFQSVByb3RvY29sLkFjdGlv",
            "blNwYXRpYWxVbml0U2VsZWN0aW9uUG9pbnQuVHlwZSI7CgRUeXBlEgoKBlNl",
            "bGVjdBABEgoKBlRvZ2dsZRACEgsKB0FsbFR5cGUQAxIOCgpBZGRBbGxUeXBl",
            "EAQicwoeQWN0aW9uU3BhdGlhbFVuaXRTZWxlY3Rpb25SZWN0EjoKFnNlbGVj",
            "dGlvbl9zY3JlZW5fY29vcmQYASADKAsyGi5TQzJBUElQcm90b2NvbC5SZWN0",
            "YW5nbGVJEhUKDXNlbGVjdGlvbl9hZGQYAiABKAg="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SC2APIProtocol.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ObservationFeatureLayer), global::SC2APIProtocol.ObservationFeatureLayer.Parser, new[]{ "Renders", "MinimapRenders" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.FeatureLayers), global::SC2APIProtocol.FeatureLayers.Parser, new[]{ "HeightMap", "VisibilityMap", "Creep", "Power", "PlayerId", "UnitType", "Selected", "UnitHitPoints", "UnitHitPointsRatio", "UnitEnergy", "UnitEnergyRatio", "UnitShields", "UnitShieldsRatio", "PlayerRelative", "UnitDensityAa", "UnitDensity", "Effects", "Hallucinations", "Cloaked", "Blip", "Buffs", "BuffDuration", "Active", "BuildProgress", "Buildable", "Pathable", "Placeholder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.FeatureLayersMinimap), global::SC2APIProtocol.FeatureLayersMinimap.Parser, new[]{ "HeightMap", "VisibilityMap", "Creep", "Camera", "PlayerId", "PlayerRelative", "Selected", "Alerts", "Buildable", "Pathable", "UnitType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ObservationRender), global::SC2APIProtocol.ObservationRender.Parser, new[]{ "Map", "Minimap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionSpatial), global::SC2APIProtocol.ActionSpatial.Parser, new[]{ "UnitCommand", "CameraMove", "UnitSelectionPoint", "UnitSelectionRect" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionSpatialUnitCommand), global::SC2APIProtocol.ActionSpatialUnitCommand.Parser, new[]{ "AbilityId", "TargetScreenCoord", "TargetMinimapCoord", "QueueCommand" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionSpatialCameraMove), global::SC2APIProtocol.ActionSpatialCameraMove.Parser, new[]{ "CenterMinimap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionSpatialUnitSelectionPoint), global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Parser, new[]{ "SelectionScreenCoord", "Type" }, null, new[]{ typeof(global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionSpatialUnitSelectionRect), global::SC2APIProtocol.ActionSpatialUnitSelectionRect.Parser, new[]{ "SelectionScreenCoord", "SelectionAdd" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ObservationFeatureLayer : pb::IMessage<ObservationFeatureLayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObservationFeatureLayer> _parser = new pb::MessageParser<ObservationFeatureLayer>(() => new ObservationFeatureLayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObservationFeatureLayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationFeatureLayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationFeatureLayer(ObservationFeatureLayer other) : this() {
      renders_ = other.renders_ != null ? other.renders_.Clone() : null;
      minimapRenders_ = other.minimapRenders_ != null ? other.minimapRenders_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationFeatureLayer Clone() {
      return new ObservationFeatureLayer(this);
    }

    /// <summary>Field number for the "renders" field.</summary>
    public const int RendersFieldNumber = 1;
    private global::SC2APIProtocol.FeatureLayers renders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.FeatureLayers Renders {
      get { return renders_; }
      set {
        renders_ = value;
      }
    }

    /// <summary>Field number for the "minimap_renders" field.</summary>
    public const int MinimapRendersFieldNumber = 2;
    private global::SC2APIProtocol.FeatureLayersMinimap minimapRenders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.FeatureLayersMinimap MinimapRenders {
      get { return minimapRenders_; }
      set {
        minimapRenders_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObservationFeatureLayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObservationFeatureLayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Renders, other.Renders)) return false;
      if (!object.Equals(MinimapRenders, other.MinimapRenders)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (renders_ != null) hash ^= Renders.GetHashCode();
      if (minimapRenders_ != null) hash ^= MinimapRenders.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (renders_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Renders);
      }
      if (minimapRenders_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MinimapRenders);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (renders_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Renders);
      }
      if (minimapRenders_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MinimapRenders);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (renders_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Renders);
      }
      if (minimapRenders_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinimapRenders);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObservationFeatureLayer other) {
      if (other == null) {
        return;
      }
      if (other.renders_ != null) {
        if (renders_ == null) {
          Renders = new global::SC2APIProtocol.FeatureLayers();
        }
        Renders.MergeFrom(other.Renders);
      }
      if (other.minimapRenders_ != null) {
        if (minimapRenders_ == null) {
          MinimapRenders = new global::SC2APIProtocol.FeatureLayersMinimap();
        }
        MinimapRenders.MergeFrom(other.MinimapRenders);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (renders_ == null) {
              Renders = new global::SC2APIProtocol.FeatureLayers();
            }
            input.ReadMessage(Renders);
            break;
          }
          case 18: {
            if (minimapRenders_ == null) {
              MinimapRenders = new global::SC2APIProtocol.FeatureLayersMinimap();
            }
            input.ReadMessage(MinimapRenders);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (renders_ == null) {
              Renders = new global::SC2APIProtocol.FeatureLayers();
            }
            input.ReadMessage(Renders);
            break;
          }
          case 18: {
            if (minimapRenders_ == null) {
              MinimapRenders = new global::SC2APIProtocol.FeatureLayersMinimap();
            }
            input.ReadMessage(MinimapRenders);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeatureLayers : pb::IMessage<FeatureLayers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureLayers> _parser = new pb::MessageParser<FeatureLayers>(() => new FeatureLayers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeatureLayers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureLayers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureLayers(FeatureLayers other) : this() {
      heightMap_ = other.heightMap_ != null ? other.heightMap_.Clone() : null;
      visibilityMap_ = other.visibilityMap_ != null ? other.visibilityMap_.Clone() : null;
      creep_ = other.creep_ != null ? other.creep_.Clone() : null;
      power_ = other.power_ != null ? other.power_.Clone() : null;
      playerId_ = other.playerId_ != null ? other.playerId_.Clone() : null;
      unitType_ = other.unitType_ != null ? other.unitType_.Clone() : null;
      selected_ = other.selected_ != null ? other.selected_.Clone() : null;
      unitHitPoints_ = other.unitHitPoints_ != null ? other.unitHitPoints_.Clone() : null;
      unitHitPointsRatio_ = other.unitHitPointsRatio_ != null ? other.unitHitPointsRatio_.Clone() : null;
      unitEnergy_ = other.unitEnergy_ != null ? other.unitEnergy_.Clone() : null;
      unitEnergyRatio_ = other.unitEnergyRatio_ != null ? other.unitEnergyRatio_.Clone() : null;
      unitShields_ = other.unitShields_ != null ? other.unitShields_.Clone() : null;
      unitShieldsRatio_ = other.unitShieldsRatio_ != null ? other.unitShieldsRatio_.Clone() : null;
      playerRelative_ = other.playerRelative_ != null ? other.playerRelative_.Clone() : null;
      unitDensityAa_ = other.unitDensityAa_ != null ? other.unitDensityAa_.Clone() : null;
      unitDensity_ = other.unitDensity_ != null ? other.unitDensity_.Clone() : null;
      effects_ = other.effects_ != null ? other.effects_.Clone() : null;
      hallucinations_ = other.hallucinations_ != null ? other.hallucinations_.Clone() : null;
      cloaked_ = other.cloaked_ != null ? other.cloaked_.Clone() : null;
      blip_ = other.blip_ != null ? other.blip_.Clone() : null;
      buffs_ = other.buffs_ != null ? other.buffs_.Clone() : null;
      buffDuration_ = other.buffDuration_ != null ? other.buffDuration_.Clone() : null;
      active_ = other.active_ != null ? other.active_.Clone() : null;
      buildProgress_ = other.buildProgress_ != null ? other.buildProgress_.Clone() : null;
      buildable_ = other.buildable_ != null ? other.buildable_.Clone() : null;
      pathable_ = other.pathable_ != null ? other.pathable_.Clone() : null;
      placeholder_ = other.placeholder_ != null ? other.placeholder_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureLayers Clone() {
      return new FeatureLayers(this);
    }

    /// <summary>Field number for the "height_map" field.</summary>
    public const int HeightMapFieldNumber = 1;
    private global::SC2APIProtocol.ImageData heightMap_;
    /// <summary>
    /// uint8. Terrain height. World space units of [-200, 200] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData HeightMap {
      get { return heightMap_; }
      set {
        heightMap_ = value;
      }
    }

    /// <summary>Field number for the "visibility_map" field.</summary>
    public const int VisibilityMapFieldNumber = 2;
    private global::SC2APIProtocol.ImageData visibilityMap_;
    /// <summary>
    /// uint8. 0=Hidden, 1=Fogged, 2=Visible, 3=FullHidden
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData VisibilityMap {
      get { return visibilityMap_; }
      set {
        visibilityMap_ = value;
      }
    }

    /// <summary>Field number for the "creep" field.</summary>
    public const int CreepFieldNumber = 3;
    private global::SC2APIProtocol.ImageData creep_;
    /// <summary>
    /// 1-bit. Zerg creep.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Creep {
      get { return creep_; }
      set {
        creep_ = value;
      }
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 4;
    private global::SC2APIProtocol.ImageData power_;
    /// <summary>
    /// 1-bit. Protoss power.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 5;
    private global::SC2APIProtocol.ImageData playerId_;
    /// <summary>
    /// uint8. Participants: [1, 15] Neutral: 16
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "unit_type" field.</summary>
    public const int UnitTypeFieldNumber = 6;
    private global::SC2APIProtocol.ImageData unitType_;
    /// <summary>
    /// int32. Unique identifier for type of unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitType {
      get { return unitType_; }
      set {
        unitType_ = value;
      }
    }

    /// <summary>Field number for the "selected" field.</summary>
    public const int SelectedFieldNumber = 7;
    private global::SC2APIProtocol.ImageData selected_;
    /// <summary>
    /// 1-bit. Selected units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Selected {
      get { return selected_; }
      set {
        selected_ = value;
      }
    }

    /// <summary>Field number for the "unit_hit_points" field.</summary>
    public const int UnitHitPointsFieldNumber = 8;
    private global::SC2APIProtocol.ImageData unitHitPoints_;
    /// <summary>
    /// int32.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitHitPoints {
      get { return unitHitPoints_; }
      set {
        unitHitPoints_ = value;
      }
    }

    /// <summary>Field number for the "unit_hit_points_ratio" field.</summary>
    public const int UnitHitPointsRatioFieldNumber = 17;
    private global::SC2APIProtocol.ImageData unitHitPointsRatio_;
    /// <summary>
    /// uint8. Ratio of current health to max health. [0%, 100%] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitHitPointsRatio {
      get { return unitHitPointsRatio_; }
      set {
        unitHitPointsRatio_ = value;
      }
    }

    /// <summary>Field number for the "unit_energy" field.</summary>
    public const int UnitEnergyFieldNumber = 9;
    private global::SC2APIProtocol.ImageData unitEnergy_;
    /// <summary>
    /// int32.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitEnergy {
      get { return unitEnergy_; }
      set {
        unitEnergy_ = value;
      }
    }

    /// <summary>Field number for the "unit_energy_ratio" field.</summary>
    public const int UnitEnergyRatioFieldNumber = 18;
    private global::SC2APIProtocol.ImageData unitEnergyRatio_;
    /// <summary>
    /// uint8. Ratio of current energy to max energy. [0%, 100%] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitEnergyRatio {
      get { return unitEnergyRatio_; }
      set {
        unitEnergyRatio_ = value;
      }
    }

    /// <summary>Field number for the "unit_shields" field.</summary>
    public const int UnitShieldsFieldNumber = 10;
    private global::SC2APIProtocol.ImageData unitShields_;
    /// <summary>
    /// int32.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitShields {
      get { return unitShields_; }
      set {
        unitShields_ = value;
      }
    }

    /// <summary>Field number for the "unit_shields_ratio" field.</summary>
    public const int UnitShieldsRatioFieldNumber = 19;
    private global::SC2APIProtocol.ImageData unitShieldsRatio_;
    /// <summary>
    /// uint8. Ratio of current shields to max shields. [0%, 100%] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitShieldsRatio {
      get { return unitShieldsRatio_; }
      set {
        unitShieldsRatio_ = value;
      }
    }

    /// <summary>Field number for the "player_relative" field.</summary>
    public const int PlayerRelativeFieldNumber = 11;
    private global::SC2APIProtocol.ImageData playerRelative_;
    /// <summary>
    /// uint8. See "Alliance" enum in raw.proto. Range: [1, 4] 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData PlayerRelative {
      get { return playerRelative_; }
      set {
        playerRelative_ = value;
      }
    }

    /// <summary>Field number for the "unit_density_aa" field.</summary>
    public const int UnitDensityAaFieldNumber = 14;
    private global::SC2APIProtocol.ImageData unitDensityAa_;
    /// <summary>
    /// uint8. Density of units overlapping a pixel, anti-aliased. [0.0, 16.0f] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitDensityAa {
      get { return unitDensityAa_; }
      set {
        unitDensityAa_ = value;
      }
    }

    /// <summary>Field number for the "unit_density" field.</summary>
    public const int UnitDensityFieldNumber = 15;
    private global::SC2APIProtocol.ImageData unitDensity_;
    /// <summary>
    /// uint8. Count of units overlapping a pixel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitDensity {
      get { return unitDensity_; }
      set {
        unitDensity_ = value;
      }
    }

    /// <summary>Field number for the "effects" field.</summary>
    public const int EffectsFieldNumber = 20;
    private global::SC2APIProtocol.ImageData effects_;
    /// <summary>
    /// uint8. Visuals of persistent abilities. (eg. Psistorm)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Effects {
      get { return effects_; }
      set {
        effects_ = value;
      }
    }

    /// <summary>Field number for the "hallucinations" field.</summary>
    public const int HallucinationsFieldNumber = 21;
    private global::SC2APIProtocol.ImageData hallucinations_;
    /// <summary>
    /// 1-bit. Whether the unit here is a hallucination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Hallucinations {
      get { return hallucinations_; }
      set {
        hallucinations_ = value;
      }
    }

    /// <summary>Field number for the "cloaked" field.</summary>
    public const int CloakedFieldNumber = 22;
    private global::SC2APIProtocol.ImageData cloaked_;
    /// <summary>
    /// 1-bit. Whether the unit here is cloaked. Hidden units will show up too, but with less details in other layers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Cloaked {
      get { return cloaked_; }
      set {
        cloaked_ = value;
      }
    }

    /// <summary>Field number for the "blip" field.</summary>
    public const int BlipFieldNumber = 23;
    private global::SC2APIProtocol.ImageData blip_;
    /// <summary>
    /// 1-bit. Whether the unit here is a blip.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Blip {
      get { return blip_; }
      set {
        blip_ = value;
      }
    }

    /// <summary>Field number for the "buffs" field.</summary>
    public const int BuffsFieldNumber = 24;
    private global::SC2APIProtocol.ImageData buffs_;
    /// <summary>
    /// int32. One of the buffs applied to this unit. Extras are ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Buffs {
      get { return buffs_; }
      set {
        buffs_ = value;
      }
    }

    /// <summary>Field number for the "buff_duration" field.</summary>
    public const int BuffDurationFieldNumber = 26;
    private global::SC2APIProtocol.ImageData buffDuration_;
    /// <summary>
    /// uint8. Ratio of buff remaining. [0%, 100%] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData BuffDuration {
      get { return buffDuration_; }
      set {
        buffDuration_ = value;
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 25;
    private global::SC2APIProtocol.ImageData active_;
    /// <summary>
    /// 1-bit. Whether the unit here is active.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "build_progress" field.</summary>
    public const int BuildProgressFieldNumber = 27;
    private global::SC2APIProtocol.ImageData buildProgress_;
    /// <summary>
    /// uint8. How far along the building is building something. [0%, 100%] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData BuildProgress {
      get { return buildProgress_; }
      set {
        buildProgress_ = value;
      }
    }

    /// <summary>Field number for the "buildable" field.</summary>
    public const int BuildableFieldNumber = 28;
    private global::SC2APIProtocol.ImageData buildable_;
    /// <summary>
    /// 1-bit. Whether a building can be built here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Buildable {
      get { return buildable_; }
      set {
        buildable_ = value;
      }
    }

    /// <summary>Field number for the "pathable" field.</summary>
    public const int PathableFieldNumber = 29;
    private global::SC2APIProtocol.ImageData pathable_;
    /// <summary>
    /// 1-bit. Whether a unit can walk here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Pathable {
      get { return pathable_; }
      set {
        pathable_ = value;
      }
    }

    /// <summary>Field number for the "placeholder" field.</summary>
    public const int PlaceholderFieldNumber = 30;
    private global::SC2APIProtocol.ImageData placeholder_;
    /// <summary>
    /// 1-bit. Whether the unit here is a placeholder building to be constructed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Placeholder {
      get { return placeholder_; }
      set {
        placeholder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeatureLayers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeatureLayers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HeightMap, other.HeightMap)) return false;
      if (!object.Equals(VisibilityMap, other.VisibilityMap)) return false;
      if (!object.Equals(Creep, other.Creep)) return false;
      if (!object.Equals(Power, other.Power)) return false;
      if (!object.Equals(PlayerId, other.PlayerId)) return false;
      if (!object.Equals(UnitType, other.UnitType)) return false;
      if (!object.Equals(Selected, other.Selected)) return false;
      if (!object.Equals(UnitHitPoints, other.UnitHitPoints)) return false;
      if (!object.Equals(UnitHitPointsRatio, other.UnitHitPointsRatio)) return false;
      if (!object.Equals(UnitEnergy, other.UnitEnergy)) return false;
      if (!object.Equals(UnitEnergyRatio, other.UnitEnergyRatio)) return false;
      if (!object.Equals(UnitShields, other.UnitShields)) return false;
      if (!object.Equals(UnitShieldsRatio, other.UnitShieldsRatio)) return false;
      if (!object.Equals(PlayerRelative, other.PlayerRelative)) return false;
      if (!object.Equals(UnitDensityAa, other.UnitDensityAa)) return false;
      if (!object.Equals(UnitDensity, other.UnitDensity)) return false;
      if (!object.Equals(Effects, other.Effects)) return false;
      if (!object.Equals(Hallucinations, other.Hallucinations)) return false;
      if (!object.Equals(Cloaked, other.Cloaked)) return false;
      if (!object.Equals(Blip, other.Blip)) return false;
      if (!object.Equals(Buffs, other.Buffs)) return false;
      if (!object.Equals(BuffDuration, other.BuffDuration)) return false;
      if (!object.Equals(Active, other.Active)) return false;
      if (!object.Equals(BuildProgress, other.BuildProgress)) return false;
      if (!object.Equals(Buildable, other.Buildable)) return false;
      if (!object.Equals(Pathable, other.Pathable)) return false;
      if (!object.Equals(Placeholder, other.Placeholder)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (heightMap_ != null) hash ^= HeightMap.GetHashCode();
      if (visibilityMap_ != null) hash ^= VisibilityMap.GetHashCode();
      if (creep_ != null) hash ^= Creep.GetHashCode();
      if (power_ != null) hash ^= Power.GetHashCode();
      if (playerId_ != null) hash ^= PlayerId.GetHashCode();
      if (unitType_ != null) hash ^= UnitType.GetHashCode();
      if (selected_ != null) hash ^= Selected.GetHashCode();
      if (unitHitPoints_ != null) hash ^= UnitHitPoints.GetHashCode();
      if (unitHitPointsRatio_ != null) hash ^= UnitHitPointsRatio.GetHashCode();
      if (unitEnergy_ != null) hash ^= UnitEnergy.GetHashCode();
      if (unitEnergyRatio_ != null) hash ^= UnitEnergyRatio.GetHashCode();
      if (unitShields_ != null) hash ^= UnitShields.GetHashCode();
      if (unitShieldsRatio_ != null) hash ^= UnitShieldsRatio.GetHashCode();
      if (playerRelative_ != null) hash ^= PlayerRelative.GetHashCode();
      if (unitDensityAa_ != null) hash ^= UnitDensityAa.GetHashCode();
      if (unitDensity_ != null) hash ^= UnitDensity.GetHashCode();
      if (effects_ != null) hash ^= Effects.GetHashCode();
      if (hallucinations_ != null) hash ^= Hallucinations.GetHashCode();
      if (cloaked_ != null) hash ^= Cloaked.GetHashCode();
      if (blip_ != null) hash ^= Blip.GetHashCode();
      if (buffs_ != null) hash ^= Buffs.GetHashCode();
      if (buffDuration_ != null) hash ^= BuffDuration.GetHashCode();
      if (active_ != null) hash ^= Active.GetHashCode();
      if (buildProgress_ != null) hash ^= BuildProgress.GetHashCode();
      if (buildable_ != null) hash ^= Buildable.GetHashCode();
      if (pathable_ != null) hash ^= Pathable.GetHashCode();
      if (placeholder_ != null) hash ^= Placeholder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (heightMap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeightMap);
      }
      if (visibilityMap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VisibilityMap);
      }
      if (creep_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Creep);
      }
      if (power_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Power);
      }
      if (playerId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerId);
      }
      if (unitType_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UnitType);
      }
      if (selected_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Selected);
      }
      if (unitHitPoints_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UnitHitPoints);
      }
      if (unitEnergy_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UnitEnergy);
      }
      if (unitShields_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UnitShields);
      }
      if (playerRelative_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlayerRelative);
      }
      if (unitDensityAa_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(UnitDensityAa);
      }
      if (unitDensity_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(UnitDensity);
      }
      if (unitHitPointsRatio_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(UnitHitPointsRatio);
      }
      if (unitEnergyRatio_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UnitEnergyRatio);
      }
      if (unitShieldsRatio_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(UnitShieldsRatio);
      }
      if (effects_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Effects);
      }
      if (hallucinations_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Hallucinations);
      }
      if (cloaked_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Cloaked);
      }
      if (blip_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Blip);
      }
      if (buffs_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Buffs);
      }
      if (active_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Active);
      }
      if (buffDuration_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(BuffDuration);
      }
      if (buildProgress_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(BuildProgress);
      }
      if (buildable_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Buildable);
      }
      if (pathable_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Pathable);
      }
      if (placeholder_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Placeholder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (heightMap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeightMap);
      }
      if (visibilityMap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VisibilityMap);
      }
      if (creep_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Creep);
      }
      if (power_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Power);
      }
      if (playerId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerId);
      }
      if (unitType_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UnitType);
      }
      if (selected_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Selected);
      }
      if (unitHitPoints_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UnitHitPoints);
      }
      if (unitEnergy_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(UnitEnergy);
      }
      if (unitShields_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UnitShields);
      }
      if (playerRelative_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlayerRelative);
      }
      if (unitDensityAa_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(UnitDensityAa);
      }
      if (unitDensity_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(UnitDensity);
      }
      if (unitHitPointsRatio_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(UnitHitPointsRatio);
      }
      if (unitEnergyRatio_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UnitEnergyRatio);
      }
      if (unitShieldsRatio_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(UnitShieldsRatio);
      }
      if (effects_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Effects);
      }
      if (hallucinations_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Hallucinations);
      }
      if (cloaked_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Cloaked);
      }
      if (blip_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(Blip);
      }
      if (buffs_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Buffs);
      }
      if (active_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Active);
      }
      if (buffDuration_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(BuffDuration);
      }
      if (buildProgress_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(BuildProgress);
      }
      if (buildable_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Buildable);
      }
      if (pathable_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Pathable);
      }
      if (placeholder_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Placeholder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (heightMap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeightMap);
      }
      if (visibilityMap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibilityMap);
      }
      if (creep_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creep);
      }
      if (power_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Power);
      }
      if (playerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerId);
      }
      if (unitType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitType);
      }
      if (selected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Selected);
      }
      if (unitHitPoints_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitHitPoints);
      }
      if (unitHitPointsRatio_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitHitPointsRatio);
      }
      if (unitEnergy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitEnergy);
      }
      if (unitEnergyRatio_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitEnergyRatio);
      }
      if (unitShields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitShields);
      }
      if (unitShieldsRatio_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitShieldsRatio);
      }
      if (playerRelative_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerRelative);
      }
      if (unitDensityAa_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitDensityAa);
      }
      if (unitDensity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitDensity);
      }
      if (effects_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Effects);
      }
      if (hallucinations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Hallucinations);
      }
      if (cloaked_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Cloaked);
      }
      if (blip_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Blip);
      }
      if (buffs_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Buffs);
      }
      if (buffDuration_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BuffDuration);
      }
      if (active_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Active);
      }
      if (buildProgress_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BuildProgress);
      }
      if (buildable_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Buildable);
      }
      if (pathable_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Pathable);
      }
      if (placeholder_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Placeholder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeatureLayers other) {
      if (other == null) {
        return;
      }
      if (other.heightMap_ != null) {
        if (heightMap_ == null) {
          HeightMap = new global::SC2APIProtocol.ImageData();
        }
        HeightMap.MergeFrom(other.HeightMap);
      }
      if (other.visibilityMap_ != null) {
        if (visibilityMap_ == null) {
          VisibilityMap = new global::SC2APIProtocol.ImageData();
        }
        VisibilityMap.MergeFrom(other.VisibilityMap);
      }
      if (other.creep_ != null) {
        if (creep_ == null) {
          Creep = new global::SC2APIProtocol.ImageData();
        }
        Creep.MergeFrom(other.Creep);
      }
      if (other.power_ != null) {
        if (power_ == null) {
          Power = new global::SC2APIProtocol.ImageData();
        }
        Power.MergeFrom(other.Power);
      }
      if (other.playerId_ != null) {
        if (playerId_ == null) {
          PlayerId = new global::SC2APIProtocol.ImageData();
        }
        PlayerId.MergeFrom(other.PlayerId);
      }
      if (other.unitType_ != null) {
        if (unitType_ == null) {
          UnitType = new global::SC2APIProtocol.ImageData();
        }
        UnitType.MergeFrom(other.UnitType);
      }
      if (other.selected_ != null) {
        if (selected_ == null) {
          Selected = new global::SC2APIProtocol.ImageData();
        }
        Selected.MergeFrom(other.Selected);
      }
      if (other.unitHitPoints_ != null) {
        if (unitHitPoints_ == null) {
          UnitHitPoints = new global::SC2APIProtocol.ImageData();
        }
        UnitHitPoints.MergeFrom(other.UnitHitPoints);
      }
      if (other.unitHitPointsRatio_ != null) {
        if (unitHitPointsRatio_ == null) {
          UnitHitPointsRatio = new global::SC2APIProtocol.ImageData();
        }
        UnitHitPointsRatio.MergeFrom(other.UnitHitPointsRatio);
      }
      if (other.unitEnergy_ != null) {
        if (unitEnergy_ == null) {
          UnitEnergy = new global::SC2APIProtocol.ImageData();
        }
        UnitEnergy.MergeFrom(other.UnitEnergy);
      }
      if (other.unitEnergyRatio_ != null) {
        if (unitEnergyRatio_ == null) {
          UnitEnergyRatio = new global::SC2APIProtocol.ImageData();
        }
        UnitEnergyRatio.MergeFrom(other.UnitEnergyRatio);
      }
      if (other.unitShields_ != null) {
        if (unitShields_ == null) {
          UnitShields = new global::SC2APIProtocol.ImageData();
        }
        UnitShields.MergeFrom(other.UnitShields);
      }
      if (other.unitShieldsRatio_ != null) {
        if (unitShieldsRatio_ == null) {
          UnitShieldsRatio = new global::SC2APIProtocol.ImageData();
        }
        UnitShieldsRatio.MergeFrom(other.UnitShieldsRatio);
      }
      if (other.playerRelative_ != null) {
        if (playerRelative_ == null) {
          PlayerRelative = new global::SC2APIProtocol.ImageData();
        }
        PlayerRelative.MergeFrom(other.PlayerRelative);
      }
      if (other.unitDensityAa_ != null) {
        if (unitDensityAa_ == null) {
          UnitDensityAa = new global::SC2APIProtocol.ImageData();
        }
        UnitDensityAa.MergeFrom(other.UnitDensityAa);
      }
      if (other.unitDensity_ != null) {
        if (unitDensity_ == null) {
          UnitDensity = new global::SC2APIProtocol.ImageData();
        }
        UnitDensity.MergeFrom(other.UnitDensity);
      }
      if (other.effects_ != null) {
        if (effects_ == null) {
          Effects = new global::SC2APIProtocol.ImageData();
        }
        Effects.MergeFrom(other.Effects);
      }
      if (other.hallucinations_ != null) {
        if (hallucinations_ == null) {
          Hallucinations = new global::SC2APIProtocol.ImageData();
        }
        Hallucinations.MergeFrom(other.Hallucinations);
      }
      if (other.cloaked_ != null) {
        if (cloaked_ == null) {
          Cloaked = new global::SC2APIProtocol.ImageData();
        }
        Cloaked.MergeFrom(other.Cloaked);
      }
      if (other.blip_ != null) {
        if (blip_ == null) {
          Blip = new global::SC2APIProtocol.ImageData();
        }
        Blip.MergeFrom(other.Blip);
      }
      if (other.buffs_ != null) {
        if (buffs_ == null) {
          Buffs = new global::SC2APIProtocol.ImageData();
        }
        Buffs.MergeFrom(other.Buffs);
      }
      if (other.buffDuration_ != null) {
        if (buffDuration_ == null) {
          BuffDuration = new global::SC2APIProtocol.ImageData();
        }
        BuffDuration.MergeFrom(other.BuffDuration);
      }
      if (other.active_ != null) {
        if (active_ == null) {
          Active = new global::SC2APIProtocol.ImageData();
        }
        Active.MergeFrom(other.Active);
      }
      if (other.buildProgress_ != null) {
        if (buildProgress_ == null) {
          BuildProgress = new global::SC2APIProtocol.ImageData();
        }
        BuildProgress.MergeFrom(other.BuildProgress);
      }
      if (other.buildable_ != null) {
        if (buildable_ == null) {
          Buildable = new global::SC2APIProtocol.ImageData();
        }
        Buildable.MergeFrom(other.Buildable);
      }
      if (other.pathable_ != null) {
        if (pathable_ == null) {
          Pathable = new global::SC2APIProtocol.ImageData();
        }
        Pathable.MergeFrom(other.Pathable);
      }
      if (other.placeholder_ != null) {
        if (placeholder_ == null) {
          Placeholder = new global::SC2APIProtocol.ImageData();
        }
        Placeholder.MergeFrom(other.Placeholder);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (heightMap_ == null) {
              HeightMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(HeightMap);
            break;
          }
          case 18: {
            if (visibilityMap_ == null) {
              VisibilityMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(VisibilityMap);
            break;
          }
          case 26: {
            if (creep_ == null) {
              Creep = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Creep);
            break;
          }
          case 34: {
            if (power_ == null) {
              Power = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Power);
            break;
          }
          case 42: {
            if (playerId_ == null) {
              PlayerId = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerId);
            break;
          }
          case 50: {
            if (unitType_ == null) {
              UnitType = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitType);
            break;
          }
          case 58: {
            if (selected_ == null) {
              Selected = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Selected);
            break;
          }
          case 66: {
            if (unitHitPoints_ == null) {
              UnitHitPoints = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitHitPoints);
            break;
          }
          case 74: {
            if (unitEnergy_ == null) {
              UnitEnergy = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitEnergy);
            break;
          }
          case 82: {
            if (unitShields_ == null) {
              UnitShields = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitShields);
            break;
          }
          case 90: {
            if (playerRelative_ == null) {
              PlayerRelative = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerRelative);
            break;
          }
          case 114: {
            if (unitDensityAa_ == null) {
              UnitDensityAa = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitDensityAa);
            break;
          }
          case 122: {
            if (unitDensity_ == null) {
              UnitDensity = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitDensity);
            break;
          }
          case 138: {
            if (unitHitPointsRatio_ == null) {
              UnitHitPointsRatio = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitHitPointsRatio);
            break;
          }
          case 146: {
            if (unitEnergyRatio_ == null) {
              UnitEnergyRatio = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitEnergyRatio);
            break;
          }
          case 154: {
            if (unitShieldsRatio_ == null) {
              UnitShieldsRatio = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitShieldsRatio);
            break;
          }
          case 162: {
            if (effects_ == null) {
              Effects = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Effects);
            break;
          }
          case 170: {
            if (hallucinations_ == null) {
              Hallucinations = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Hallucinations);
            break;
          }
          case 178: {
            if (cloaked_ == null) {
              Cloaked = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Cloaked);
            break;
          }
          case 186: {
            if (blip_ == null) {
              Blip = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Blip);
            break;
          }
          case 194: {
            if (buffs_ == null) {
              Buffs = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Buffs);
            break;
          }
          case 202: {
            if (active_ == null) {
              Active = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Active);
            break;
          }
          case 210: {
            if (buffDuration_ == null) {
              BuffDuration = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(BuffDuration);
            break;
          }
          case 218: {
            if (buildProgress_ == null) {
              BuildProgress = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(BuildProgress);
            break;
          }
          case 226: {
            if (buildable_ == null) {
              Buildable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Buildable);
            break;
          }
          case 234: {
            if (pathable_ == null) {
              Pathable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Pathable);
            break;
          }
          case 242: {
            if (placeholder_ == null) {
              Placeholder = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Placeholder);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (heightMap_ == null) {
              HeightMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(HeightMap);
            break;
          }
          case 18: {
            if (visibilityMap_ == null) {
              VisibilityMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(VisibilityMap);
            break;
          }
          case 26: {
            if (creep_ == null) {
              Creep = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Creep);
            break;
          }
          case 34: {
            if (power_ == null) {
              Power = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Power);
            break;
          }
          case 42: {
            if (playerId_ == null) {
              PlayerId = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerId);
            break;
          }
          case 50: {
            if (unitType_ == null) {
              UnitType = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitType);
            break;
          }
          case 58: {
            if (selected_ == null) {
              Selected = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Selected);
            break;
          }
          case 66: {
            if (unitHitPoints_ == null) {
              UnitHitPoints = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitHitPoints);
            break;
          }
          case 74: {
            if (unitEnergy_ == null) {
              UnitEnergy = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitEnergy);
            break;
          }
          case 82: {
            if (unitShields_ == null) {
              UnitShields = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitShields);
            break;
          }
          case 90: {
            if (playerRelative_ == null) {
              PlayerRelative = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerRelative);
            break;
          }
          case 114: {
            if (unitDensityAa_ == null) {
              UnitDensityAa = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitDensityAa);
            break;
          }
          case 122: {
            if (unitDensity_ == null) {
              UnitDensity = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitDensity);
            break;
          }
          case 138: {
            if (unitHitPointsRatio_ == null) {
              UnitHitPointsRatio = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitHitPointsRatio);
            break;
          }
          case 146: {
            if (unitEnergyRatio_ == null) {
              UnitEnergyRatio = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitEnergyRatio);
            break;
          }
          case 154: {
            if (unitShieldsRatio_ == null) {
              UnitShieldsRatio = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitShieldsRatio);
            break;
          }
          case 162: {
            if (effects_ == null) {
              Effects = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Effects);
            break;
          }
          case 170: {
            if (hallucinations_ == null) {
              Hallucinations = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Hallucinations);
            break;
          }
          case 178: {
            if (cloaked_ == null) {
              Cloaked = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Cloaked);
            break;
          }
          case 186: {
            if (blip_ == null) {
              Blip = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Blip);
            break;
          }
          case 194: {
            if (buffs_ == null) {
              Buffs = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Buffs);
            break;
          }
          case 202: {
            if (active_ == null) {
              Active = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Active);
            break;
          }
          case 210: {
            if (buffDuration_ == null) {
              BuffDuration = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(BuffDuration);
            break;
          }
          case 218: {
            if (buildProgress_ == null) {
              BuildProgress = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(BuildProgress);
            break;
          }
          case 226: {
            if (buildable_ == null) {
              Buildable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Buildable);
            break;
          }
          case 234: {
            if (pathable_ == null) {
              Pathable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Pathable);
            break;
          }
          case 242: {
            if (placeholder_ == null) {
              Placeholder = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Placeholder);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeatureLayersMinimap : pb::IMessage<FeatureLayersMinimap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureLayersMinimap> _parser = new pb::MessageParser<FeatureLayersMinimap>(() => new FeatureLayersMinimap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FeatureLayersMinimap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureLayersMinimap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureLayersMinimap(FeatureLayersMinimap other) : this() {
      heightMap_ = other.heightMap_ != null ? other.heightMap_.Clone() : null;
      visibilityMap_ = other.visibilityMap_ != null ? other.visibilityMap_.Clone() : null;
      creep_ = other.creep_ != null ? other.creep_.Clone() : null;
      camera_ = other.camera_ != null ? other.camera_.Clone() : null;
      playerId_ = other.playerId_ != null ? other.playerId_.Clone() : null;
      playerRelative_ = other.playerRelative_ != null ? other.playerRelative_.Clone() : null;
      selected_ = other.selected_ != null ? other.selected_.Clone() : null;
      alerts_ = other.alerts_ != null ? other.alerts_.Clone() : null;
      buildable_ = other.buildable_ != null ? other.buildable_.Clone() : null;
      pathable_ = other.pathable_ != null ? other.pathable_.Clone() : null;
      unitType_ = other.unitType_ != null ? other.unitType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FeatureLayersMinimap Clone() {
      return new FeatureLayersMinimap(this);
    }

    /// <summary>Field number for the "height_map" field.</summary>
    public const int HeightMapFieldNumber = 1;
    private global::SC2APIProtocol.ImageData heightMap_;
    /// <summary>
    /// uint8. Terrain height. World space units of [-200, 200] encoded into [0, 255].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData HeightMap {
      get { return heightMap_; }
      set {
        heightMap_ = value;
      }
    }

    /// <summary>Field number for the "visibility_map" field.</summary>
    public const int VisibilityMapFieldNumber = 2;
    private global::SC2APIProtocol.ImageData visibilityMap_;
    /// <summary>
    /// uint8. 0=Hidden, 1=Fogged, 2=Visible, 3=FullHidden
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData VisibilityMap {
      get { return visibilityMap_; }
      set {
        visibilityMap_ = value;
      }
    }

    /// <summary>Field number for the "creep" field.</summary>
    public const int CreepFieldNumber = 3;
    private global::SC2APIProtocol.ImageData creep_;
    /// <summary>
    /// 1-bit. Zerg creep.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Creep {
      get { return creep_; }
      set {
        creep_ = value;
      }
    }

    /// <summary>Field number for the "camera" field.</summary>
    public const int CameraFieldNumber = 4;
    private global::SC2APIProtocol.ImageData camera_;
    /// <summary>
    /// 1-bit. Area covered by the camera.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Camera {
      get { return camera_; }
      set {
        camera_ = value;
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 5;
    private global::SC2APIProtocol.ImageData playerId_;
    /// <summary>
    /// uint8. Participants: [1, 15] Neutral: 16
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "player_relative" field.</summary>
    public const int PlayerRelativeFieldNumber = 6;
    private global::SC2APIProtocol.ImageData playerRelative_;
    /// <summary>
    /// uint8. See "Alliance" enum in raw.proto. Range: [1, 4] 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData PlayerRelative {
      get { return playerRelative_; }
      set {
        playerRelative_ = value;
      }
    }

    /// <summary>Field number for the "selected" field.</summary>
    public const int SelectedFieldNumber = 7;
    private global::SC2APIProtocol.ImageData selected_;
    /// <summary>
    /// 1-bit. Selected units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Selected {
      get { return selected_; }
      set {
        selected_ = value;
      }
    }

    /// <summary>Field number for the "alerts" field.</summary>
    public const int AlertsFieldNumber = 9;
    private global::SC2APIProtocol.ImageData alerts_;
    /// <summary>
    /// 1-bit. Shows 'UnitAttacked' alert location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Alerts {
      get { return alerts_; }
      set {
        alerts_ = value;
      }
    }

    /// <summary>Field number for the "buildable" field.</summary>
    public const int BuildableFieldNumber = 10;
    private global::SC2APIProtocol.ImageData buildable_;
    /// <summary>
    /// 1-bit. Whether a building can be built here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Buildable {
      get { return buildable_; }
      set {
        buildable_ = value;
      }
    }

    /// <summary>Field number for the "pathable" field.</summary>
    public const int PathableFieldNumber = 11;
    private global::SC2APIProtocol.ImageData pathable_;
    /// <summary>
    /// 1-bit. Whether a unit can walk here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Pathable {
      get { return pathable_; }
      set {
        pathable_ = value;
      }
    }

    /// <summary>Field number for the "unit_type" field.</summary>
    public const int UnitTypeFieldNumber = 8;
    private global::SC2APIProtocol.ImageData unitType_;
    /// <summary>
    /// Cheat layers, enable with SpatialCameraSetup.allow_cheating_layers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData UnitType {
      get { return unitType_; }
      set {
        unitType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FeatureLayersMinimap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FeatureLayersMinimap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HeightMap, other.HeightMap)) return false;
      if (!object.Equals(VisibilityMap, other.VisibilityMap)) return false;
      if (!object.Equals(Creep, other.Creep)) return false;
      if (!object.Equals(Camera, other.Camera)) return false;
      if (!object.Equals(PlayerId, other.PlayerId)) return false;
      if (!object.Equals(PlayerRelative, other.PlayerRelative)) return false;
      if (!object.Equals(Selected, other.Selected)) return false;
      if (!object.Equals(Alerts, other.Alerts)) return false;
      if (!object.Equals(Buildable, other.Buildable)) return false;
      if (!object.Equals(Pathable, other.Pathable)) return false;
      if (!object.Equals(UnitType, other.UnitType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (heightMap_ != null) hash ^= HeightMap.GetHashCode();
      if (visibilityMap_ != null) hash ^= VisibilityMap.GetHashCode();
      if (creep_ != null) hash ^= Creep.GetHashCode();
      if (camera_ != null) hash ^= Camera.GetHashCode();
      if (playerId_ != null) hash ^= PlayerId.GetHashCode();
      if (playerRelative_ != null) hash ^= PlayerRelative.GetHashCode();
      if (selected_ != null) hash ^= Selected.GetHashCode();
      if (alerts_ != null) hash ^= Alerts.GetHashCode();
      if (buildable_ != null) hash ^= Buildable.GetHashCode();
      if (pathable_ != null) hash ^= Pathable.GetHashCode();
      if (unitType_ != null) hash ^= UnitType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (heightMap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeightMap);
      }
      if (visibilityMap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VisibilityMap);
      }
      if (creep_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Creep);
      }
      if (camera_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Camera);
      }
      if (playerId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerId);
      }
      if (playerRelative_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerRelative);
      }
      if (selected_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Selected);
      }
      if (unitType_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UnitType);
      }
      if (alerts_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Alerts);
      }
      if (buildable_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Buildable);
      }
      if (pathable_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Pathable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (heightMap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HeightMap);
      }
      if (visibilityMap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VisibilityMap);
      }
      if (creep_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Creep);
      }
      if (camera_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Camera);
      }
      if (playerId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerId);
      }
      if (playerRelative_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerRelative);
      }
      if (selected_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Selected);
      }
      if (unitType_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UnitType);
      }
      if (alerts_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Alerts);
      }
      if (buildable_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Buildable);
      }
      if (pathable_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Pathable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (heightMap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeightMap);
      }
      if (visibilityMap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibilityMap);
      }
      if (creep_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creep);
      }
      if (camera_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
      }
      if (playerId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerId);
      }
      if (playerRelative_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerRelative);
      }
      if (selected_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Selected);
      }
      if (alerts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Alerts);
      }
      if (buildable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Buildable);
      }
      if (pathable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pathable);
      }
      if (unitType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FeatureLayersMinimap other) {
      if (other == null) {
        return;
      }
      if (other.heightMap_ != null) {
        if (heightMap_ == null) {
          HeightMap = new global::SC2APIProtocol.ImageData();
        }
        HeightMap.MergeFrom(other.HeightMap);
      }
      if (other.visibilityMap_ != null) {
        if (visibilityMap_ == null) {
          VisibilityMap = new global::SC2APIProtocol.ImageData();
        }
        VisibilityMap.MergeFrom(other.VisibilityMap);
      }
      if (other.creep_ != null) {
        if (creep_ == null) {
          Creep = new global::SC2APIProtocol.ImageData();
        }
        Creep.MergeFrom(other.Creep);
      }
      if (other.camera_ != null) {
        if (camera_ == null) {
          Camera = new global::SC2APIProtocol.ImageData();
        }
        Camera.MergeFrom(other.Camera);
      }
      if (other.playerId_ != null) {
        if (playerId_ == null) {
          PlayerId = new global::SC2APIProtocol.ImageData();
        }
        PlayerId.MergeFrom(other.PlayerId);
      }
      if (other.playerRelative_ != null) {
        if (playerRelative_ == null) {
          PlayerRelative = new global::SC2APIProtocol.ImageData();
        }
        PlayerRelative.MergeFrom(other.PlayerRelative);
      }
      if (other.selected_ != null) {
        if (selected_ == null) {
          Selected = new global::SC2APIProtocol.ImageData();
        }
        Selected.MergeFrom(other.Selected);
      }
      if (other.alerts_ != null) {
        if (alerts_ == null) {
          Alerts = new global::SC2APIProtocol.ImageData();
        }
        Alerts.MergeFrom(other.Alerts);
      }
      if (other.buildable_ != null) {
        if (buildable_ == null) {
          Buildable = new global::SC2APIProtocol.ImageData();
        }
        Buildable.MergeFrom(other.Buildable);
      }
      if (other.pathable_ != null) {
        if (pathable_ == null) {
          Pathable = new global::SC2APIProtocol.ImageData();
        }
        Pathable.MergeFrom(other.Pathable);
      }
      if (other.unitType_ != null) {
        if (unitType_ == null) {
          UnitType = new global::SC2APIProtocol.ImageData();
        }
        UnitType.MergeFrom(other.UnitType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (heightMap_ == null) {
              HeightMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(HeightMap);
            break;
          }
          case 18: {
            if (visibilityMap_ == null) {
              VisibilityMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(VisibilityMap);
            break;
          }
          case 26: {
            if (creep_ == null) {
              Creep = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Creep);
            break;
          }
          case 34: {
            if (camera_ == null) {
              Camera = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Camera);
            break;
          }
          case 42: {
            if (playerId_ == null) {
              PlayerId = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerId);
            break;
          }
          case 50: {
            if (playerRelative_ == null) {
              PlayerRelative = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerRelative);
            break;
          }
          case 58: {
            if (selected_ == null) {
              Selected = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Selected);
            break;
          }
          case 66: {
            if (unitType_ == null) {
              UnitType = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitType);
            break;
          }
          case 74: {
            if (alerts_ == null) {
              Alerts = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Alerts);
            break;
          }
          case 82: {
            if (buildable_ == null) {
              Buildable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Buildable);
            break;
          }
          case 90: {
            if (pathable_ == null) {
              Pathable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Pathable);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (heightMap_ == null) {
              HeightMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(HeightMap);
            break;
          }
          case 18: {
            if (visibilityMap_ == null) {
              VisibilityMap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(VisibilityMap);
            break;
          }
          case 26: {
            if (creep_ == null) {
              Creep = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Creep);
            break;
          }
          case 34: {
            if (camera_ == null) {
              Camera = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Camera);
            break;
          }
          case 42: {
            if (playerId_ == null) {
              PlayerId = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerId);
            break;
          }
          case 50: {
            if (playerRelative_ == null) {
              PlayerRelative = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlayerRelative);
            break;
          }
          case 58: {
            if (selected_ == null) {
              Selected = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Selected);
            break;
          }
          case 66: {
            if (unitType_ == null) {
              UnitType = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(UnitType);
            break;
          }
          case 74: {
            if (alerts_ == null) {
              Alerts = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Alerts);
            break;
          }
          case 82: {
            if (buildable_ == null) {
              Buildable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Buildable);
            break;
          }
          case 90: {
            if (pathable_ == null) {
              Pathable = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Pathable);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObservationRender : pb::IMessage<ObservationRender>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObservationRender> _parser = new pb::MessageParser<ObservationRender>(() => new ObservationRender());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObservationRender> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationRender() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationRender(ObservationRender other) : this() {
      map_ = other.map_ != null ? other.map_.Clone() : null;
      minimap_ = other.minimap_ != null ? other.minimap_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationRender Clone() {
      return new ObservationRender(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private global::SC2APIProtocol.ImageData map_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    /// <summary>Field number for the "minimap" field.</summary>
    public const int MinimapFieldNumber = 2;
    private global::SC2APIProtocol.ImageData minimap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Minimap {
      get { return minimap_; }
      set {
        minimap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObservationRender);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObservationRender other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Map, other.Map)) return false;
      if (!object.Equals(Minimap, other.Minimap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (map_ != null) hash ^= Map.GetHashCode();
      if (minimap_ != null) hash ^= Minimap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (map_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Map);
      }
      if (minimap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Minimap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (map_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Map);
      }
      if (minimap_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Minimap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (map_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      if (minimap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Minimap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObservationRender other) {
      if (other == null) {
        return;
      }
      if (other.map_ != null) {
        if (map_ == null) {
          Map = new global::SC2APIProtocol.ImageData();
        }
        Map.MergeFrom(other.Map);
      }
      if (other.minimap_ != null) {
        if (minimap_ == null) {
          Minimap = new global::SC2APIProtocol.ImageData();
        }
        Minimap.MergeFrom(other.Minimap);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (map_ == null) {
              Map = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Map);
            break;
          }
          case 18: {
            if (minimap_ == null) {
              Minimap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Minimap);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (map_ == null) {
              Map = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Map);
            break;
          }
          case 18: {
            if (minimap_ == null) {
              Minimap = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Minimap);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionSpatial : pb::IMessage<ActionSpatial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionSpatial> _parser = new pb::MessageParser<ActionSpatial>(() => new ActionSpatial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionSpatial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatial(ActionSpatial other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.UnitCommand:
          UnitCommand = other.UnitCommand.Clone();
          break;
        case ActionOneofCase.CameraMove:
          CameraMove = other.CameraMove.Clone();
          break;
        case ActionOneofCase.UnitSelectionPoint:
          UnitSelectionPoint = other.UnitSelectionPoint.Clone();
          break;
        case ActionOneofCase.UnitSelectionRect:
          UnitSelectionRect = other.UnitSelectionRect.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatial Clone() {
      return new ActionSpatial(this);
    }

    /// <summary>Field number for the "unit_command" field.</summary>
    public const int UnitCommandFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionSpatialUnitCommand UnitCommand {
      get { return actionCase_ == ActionOneofCase.UnitCommand ? (global::SC2APIProtocol.ActionSpatialUnitCommand) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.UnitCommand;
      }
    }

    /// <summary>Field number for the "camera_move" field.</summary>
    public const int CameraMoveFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionSpatialCameraMove CameraMove {
      get { return actionCase_ == ActionOneofCase.CameraMove ? (global::SC2APIProtocol.ActionSpatialCameraMove) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.CameraMove;
      }
    }

    /// <summary>Field number for the "unit_selection_point" field.</summary>
    public const int UnitSelectionPointFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionSpatialUnitSelectionPoint UnitSelectionPoint {
      get { return actionCase_ == ActionOneofCase.UnitSelectionPoint ? (global::SC2APIProtocol.ActionSpatialUnitSelectionPoint) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.UnitSelectionPoint;
      }
    }

    /// <summary>Field number for the "unit_selection_rect" field.</summary>
    public const int UnitSelectionRectFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionSpatialUnitSelectionRect UnitSelectionRect {
      get { return actionCase_ == ActionOneofCase.UnitSelectionRect ? (global::SC2APIProtocol.ActionSpatialUnitSelectionRect) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.UnitSelectionRect;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      UnitCommand = 1,
      CameraMove = 2,
      UnitSelectionPoint = 3,
      UnitSelectionRect = 4,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionSpatial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionSpatial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UnitCommand, other.UnitCommand)) return false;
      if (!object.Equals(CameraMove, other.CameraMove)) return false;
      if (!object.Equals(UnitSelectionPoint, other.UnitSelectionPoint)) return false;
      if (!object.Equals(UnitSelectionRect, other.UnitSelectionRect)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.UnitCommand) hash ^= UnitCommand.GetHashCode();
      if (actionCase_ == ActionOneofCase.CameraMove) hash ^= CameraMove.GetHashCode();
      if (actionCase_ == ActionOneofCase.UnitSelectionPoint) hash ^= UnitSelectionPoint.GetHashCode();
      if (actionCase_ == ActionOneofCase.UnitSelectionRect) hash ^= UnitSelectionRect.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.UnitCommand) {
        output.WriteRawTag(10);
        output.WriteMessage(UnitCommand);
      }
      if (actionCase_ == ActionOneofCase.CameraMove) {
        output.WriteRawTag(18);
        output.WriteMessage(CameraMove);
      }
      if (actionCase_ == ActionOneofCase.UnitSelectionPoint) {
        output.WriteRawTag(26);
        output.WriteMessage(UnitSelectionPoint);
      }
      if (actionCase_ == ActionOneofCase.UnitSelectionRect) {
        output.WriteRawTag(34);
        output.WriteMessage(UnitSelectionRect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.UnitCommand) {
        output.WriteRawTag(10);
        output.WriteMessage(UnitCommand);
      }
      if (actionCase_ == ActionOneofCase.CameraMove) {
        output.WriteRawTag(18);
        output.WriteMessage(CameraMove);
      }
      if (actionCase_ == ActionOneofCase.UnitSelectionPoint) {
        output.WriteRawTag(26);
        output.WriteMessage(UnitSelectionPoint);
      }
      if (actionCase_ == ActionOneofCase.UnitSelectionRect) {
        output.WriteRawTag(34);
        output.WriteMessage(UnitSelectionRect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.UnitCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitCommand);
      }
      if (actionCase_ == ActionOneofCase.CameraMove) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CameraMove);
      }
      if (actionCase_ == ActionOneofCase.UnitSelectionPoint) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitSelectionPoint);
      }
      if (actionCase_ == ActionOneofCase.UnitSelectionRect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitSelectionRect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionSpatial other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.UnitCommand:
          if (UnitCommand == null) {
            UnitCommand = new global::SC2APIProtocol.ActionSpatialUnitCommand();
          }
          UnitCommand.MergeFrom(other.UnitCommand);
          break;
        case ActionOneofCase.CameraMove:
          if (CameraMove == null) {
            CameraMove = new global::SC2APIProtocol.ActionSpatialCameraMove();
          }
          CameraMove.MergeFrom(other.CameraMove);
          break;
        case ActionOneofCase.UnitSelectionPoint:
          if (UnitSelectionPoint == null) {
            UnitSelectionPoint = new global::SC2APIProtocol.ActionSpatialUnitSelectionPoint();
          }
          UnitSelectionPoint.MergeFrom(other.UnitSelectionPoint);
          break;
        case ActionOneofCase.UnitSelectionRect:
          if (UnitSelectionRect == null) {
            UnitSelectionRect = new global::SC2APIProtocol.ActionSpatialUnitSelectionRect();
          }
          UnitSelectionRect.MergeFrom(other.UnitSelectionRect);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SC2APIProtocol.ActionSpatialUnitCommand subBuilder = new global::SC2APIProtocol.ActionSpatialUnitCommand();
            if (actionCase_ == ActionOneofCase.UnitCommand) {
              subBuilder.MergeFrom(UnitCommand);
            }
            input.ReadMessage(subBuilder);
            UnitCommand = subBuilder;
            break;
          }
          case 18: {
            global::SC2APIProtocol.ActionSpatialCameraMove subBuilder = new global::SC2APIProtocol.ActionSpatialCameraMove();
            if (actionCase_ == ActionOneofCase.CameraMove) {
              subBuilder.MergeFrom(CameraMove);
            }
            input.ReadMessage(subBuilder);
            CameraMove = subBuilder;
            break;
          }
          case 26: {
            global::SC2APIProtocol.ActionSpatialUnitSelectionPoint subBuilder = new global::SC2APIProtocol.ActionSpatialUnitSelectionPoint();
            if (actionCase_ == ActionOneofCase.UnitSelectionPoint) {
              subBuilder.MergeFrom(UnitSelectionPoint);
            }
            input.ReadMessage(subBuilder);
            UnitSelectionPoint = subBuilder;
            break;
          }
          case 34: {
            global::SC2APIProtocol.ActionSpatialUnitSelectionRect subBuilder = new global::SC2APIProtocol.ActionSpatialUnitSelectionRect();
            if (actionCase_ == ActionOneofCase.UnitSelectionRect) {
              subBuilder.MergeFrom(UnitSelectionRect);
            }
            input.ReadMessage(subBuilder);
            UnitSelectionRect = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SC2APIProtocol.ActionSpatialUnitCommand subBuilder = new global::SC2APIProtocol.ActionSpatialUnitCommand();
            if (actionCase_ == ActionOneofCase.UnitCommand) {
              subBuilder.MergeFrom(UnitCommand);
            }
            input.ReadMessage(subBuilder);
            UnitCommand = subBuilder;
            break;
          }
          case 18: {
            global::SC2APIProtocol.ActionSpatialCameraMove subBuilder = new global::SC2APIProtocol.ActionSpatialCameraMove();
            if (actionCase_ == ActionOneofCase.CameraMove) {
              subBuilder.MergeFrom(CameraMove);
            }
            input.ReadMessage(subBuilder);
            CameraMove = subBuilder;
            break;
          }
          case 26: {
            global::SC2APIProtocol.ActionSpatialUnitSelectionPoint subBuilder = new global::SC2APIProtocol.ActionSpatialUnitSelectionPoint();
            if (actionCase_ == ActionOneofCase.UnitSelectionPoint) {
              subBuilder.MergeFrom(UnitSelectionPoint);
            }
            input.ReadMessage(subBuilder);
            UnitSelectionPoint = subBuilder;
            break;
          }
          case 34: {
            global::SC2APIProtocol.ActionSpatialUnitSelectionRect subBuilder = new global::SC2APIProtocol.ActionSpatialUnitSelectionRect();
            if (actionCase_ == ActionOneofCase.UnitSelectionRect) {
              subBuilder.MergeFrom(UnitSelectionRect);
            }
            input.ReadMessage(subBuilder);
            UnitSelectionRect = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionSpatialUnitCommand : pb::IMessage<ActionSpatialUnitCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionSpatialUnitCommand> _parser = new pb::MessageParser<ActionSpatialUnitCommand>(() => new ActionSpatialUnitCommand());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionSpatialUnitCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitCommand(ActionSpatialUnitCommand other) : this() {
      _hasBits0 = other._hasBits0;
      abilityId_ = other.abilityId_;
      queueCommand_ = other.queueCommand_;
      switch (other.TargetCase) {
        case TargetOneofCase.TargetScreenCoord:
          TargetScreenCoord = other.TargetScreenCoord.Clone();
          break;
        case TargetOneofCase.TargetMinimapCoord:
          TargetMinimapCoord = other.TargetMinimapCoord.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitCommand Clone() {
      return new ActionSpatialUnitCommand(this);
    }

    /// <summary>Field number for the "ability_id" field.</summary>
    public const int AbilityIdFieldNumber = 1;
    private readonly static int AbilityIdDefaultValue = 0;

    private int abilityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AbilityId {
      get { if ((_hasBits0 & 1) != 0) { return abilityId_; } else { return AbilityIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        abilityId_ = value;
      }
    }
    /// <summary>Gets whether the "ability_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAbilityId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ability_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAbilityId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_screen_coord" field.</summary>
    public const int TargetScreenCoordFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.PointI TargetScreenCoord {
      get { return targetCase_ == TargetOneofCase.TargetScreenCoord ? (global::SC2APIProtocol.PointI) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.TargetScreenCoord;
      }
    }

    /// <summary>Field number for the "target_minimap_coord" field.</summary>
    public const int TargetMinimapCoordFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.PointI TargetMinimapCoord {
      get { return targetCase_ == TargetOneofCase.TargetMinimapCoord ? (global::SC2APIProtocol.PointI) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.TargetMinimapCoord;
      }
    }

    /// <summary>Field number for the "queue_command" field.</summary>
    public const int QueueCommandFieldNumber = 4;
    private readonly static bool QueueCommandDefaultValue = false;

    private bool queueCommand_;
    /// <summary>
    /// Equivalent to shift+command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool QueueCommand {
      get { if ((_hasBits0 & 2) != 0) { return queueCommand_; } else { return QueueCommandDefaultValue; } }
      set {
        _hasBits0 |= 2;
        queueCommand_ = value;
      }
    }
    /// <summary>Gets whether the "queue_command" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQueueCommand {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "queue_command" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQueueCommand() {
      _hasBits0 &= ~2;
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      TargetScreenCoord = 2,
      TargetMinimapCoord = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionSpatialUnitCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionSpatialUnitCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityId != other.AbilityId) return false;
      if (!object.Equals(TargetScreenCoord, other.TargetScreenCoord)) return false;
      if (!object.Equals(TargetMinimapCoord, other.TargetMinimapCoord)) return false;
      if (QueueCommand != other.QueueCommand) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAbilityId) hash ^= AbilityId.GetHashCode();
      if (targetCase_ == TargetOneofCase.TargetScreenCoord) hash ^= TargetScreenCoord.GetHashCode();
      if (targetCase_ == TargetOneofCase.TargetMinimapCoord) hash ^= TargetMinimapCoord.GetHashCode();
      if (HasQueueCommand) hash ^= QueueCommand.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteInt32(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetScreenCoord) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetScreenCoord);
      }
      if (targetCase_ == TargetOneofCase.TargetMinimapCoord) {
        output.WriteRawTag(26);
        output.WriteMessage(TargetMinimapCoord);
      }
      if (HasQueueCommand) {
        output.WriteRawTag(32);
        output.WriteBool(QueueCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteInt32(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetScreenCoord) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetScreenCoord);
      }
      if (targetCase_ == TargetOneofCase.TargetMinimapCoord) {
        output.WriteRawTag(26);
        output.WriteMessage(TargetMinimapCoord);
      }
      if (HasQueueCommand) {
        output.WriteRawTag(32);
        output.WriteBool(QueueCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAbilityId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetScreenCoord) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetScreenCoord);
      }
      if (targetCase_ == TargetOneofCase.TargetMinimapCoord) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetMinimapCoord);
      }
      if (HasQueueCommand) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionSpatialUnitCommand other) {
      if (other == null) {
        return;
      }
      if (other.HasAbilityId) {
        AbilityId = other.AbilityId;
      }
      if (other.HasQueueCommand) {
        QueueCommand = other.QueueCommand;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.TargetScreenCoord:
          if (TargetScreenCoord == null) {
            TargetScreenCoord = new global::SC2APIProtocol.PointI();
          }
          TargetScreenCoord.MergeFrom(other.TargetScreenCoord);
          break;
        case TargetOneofCase.TargetMinimapCoord:
          if (TargetMinimapCoord == null) {
            TargetMinimapCoord = new global::SC2APIProtocol.PointI();
          }
          TargetMinimapCoord.MergeFrom(other.TargetMinimapCoord);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AbilityId = input.ReadInt32();
            break;
          }
          case 18: {
            global::SC2APIProtocol.PointI subBuilder = new global::SC2APIProtocol.PointI();
            if (targetCase_ == TargetOneofCase.TargetScreenCoord) {
              subBuilder.MergeFrom(TargetScreenCoord);
            }
            input.ReadMessage(subBuilder);
            TargetScreenCoord = subBuilder;
            break;
          }
          case 26: {
            global::SC2APIProtocol.PointI subBuilder = new global::SC2APIProtocol.PointI();
            if (targetCase_ == TargetOneofCase.TargetMinimapCoord) {
              subBuilder.MergeFrom(TargetMinimapCoord);
            }
            input.ReadMessage(subBuilder);
            TargetMinimapCoord = subBuilder;
            break;
          }
          case 32: {
            QueueCommand = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AbilityId = input.ReadInt32();
            break;
          }
          case 18: {
            global::SC2APIProtocol.PointI subBuilder = new global::SC2APIProtocol.PointI();
            if (targetCase_ == TargetOneofCase.TargetScreenCoord) {
              subBuilder.MergeFrom(TargetScreenCoord);
            }
            input.ReadMessage(subBuilder);
            TargetScreenCoord = subBuilder;
            break;
          }
          case 26: {
            global::SC2APIProtocol.PointI subBuilder = new global::SC2APIProtocol.PointI();
            if (targetCase_ == TargetOneofCase.TargetMinimapCoord) {
              subBuilder.MergeFrom(TargetMinimapCoord);
            }
            input.ReadMessage(subBuilder);
            TargetMinimapCoord = subBuilder;
            break;
          }
          case 32: {
            QueueCommand = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionSpatialCameraMove : pb::IMessage<ActionSpatialCameraMove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionSpatialCameraMove> _parser = new pb::MessageParser<ActionSpatialCameraMove>(() => new ActionSpatialCameraMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionSpatialCameraMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialCameraMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialCameraMove(ActionSpatialCameraMove other) : this() {
      centerMinimap_ = other.centerMinimap_ != null ? other.centerMinimap_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialCameraMove Clone() {
      return new ActionSpatialCameraMove(this);
    }

    /// <summary>Field number for the "center_minimap" field.</summary>
    public const int CenterMinimapFieldNumber = 1;
    private global::SC2APIProtocol.PointI centerMinimap_;
    /// <summary>
    /// Simulates a click on the minimap to move the camera.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.PointI CenterMinimap {
      get { return centerMinimap_; }
      set {
        centerMinimap_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionSpatialCameraMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionSpatialCameraMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CenterMinimap, other.CenterMinimap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (centerMinimap_ != null) hash ^= CenterMinimap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (centerMinimap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CenterMinimap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (centerMinimap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CenterMinimap);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (centerMinimap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CenterMinimap);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionSpatialCameraMove other) {
      if (other == null) {
        return;
      }
      if (other.centerMinimap_ != null) {
        if (centerMinimap_ == null) {
          CenterMinimap = new global::SC2APIProtocol.PointI();
        }
        CenterMinimap.MergeFrom(other.CenterMinimap);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (centerMinimap_ == null) {
              CenterMinimap = new global::SC2APIProtocol.PointI();
            }
            input.ReadMessage(CenterMinimap);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (centerMinimap_ == null) {
              CenterMinimap = new global::SC2APIProtocol.PointI();
            }
            input.ReadMessage(CenterMinimap);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionSpatialUnitSelectionPoint : pb::IMessage<ActionSpatialUnitSelectionPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionSpatialUnitSelectionPoint> _parser = new pb::MessageParser<ActionSpatialUnitSelectionPoint>(() => new ActionSpatialUnitSelectionPoint());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionSpatialUnitSelectionPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitSelectionPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitSelectionPoint(ActionSpatialUnitSelectionPoint other) : this() {
      _hasBits0 = other._hasBits0;
      selectionScreenCoord_ = other.selectionScreenCoord_ != null ? other.selectionScreenCoord_.Clone() : null;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitSelectionPoint Clone() {
      return new ActionSpatialUnitSelectionPoint(this);
    }

    /// <summary>Field number for the "selection_screen_coord" field.</summary>
    public const int SelectionScreenCoordFieldNumber = 1;
    private global::SC2APIProtocol.PointI selectionScreenCoord_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.PointI SelectionScreenCoord {
      get { return selectionScreenCoord_; }
      set {
        selectionScreenCoord_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type TypeDefaultValue = global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type.Select;

    private global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionSpatialUnitSelectionPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionSpatialUnitSelectionPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SelectionScreenCoord, other.SelectionScreenCoord)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (selectionScreenCoord_ != null) hash ^= SelectionScreenCoord.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (selectionScreenCoord_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SelectionScreenCoord);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (selectionScreenCoord_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SelectionScreenCoord);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (selectionScreenCoord_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectionScreenCoord);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionSpatialUnitSelectionPoint other) {
      if (other == null) {
        return;
      }
      if (other.selectionScreenCoord_ != null) {
        if (selectionScreenCoord_ == null) {
          SelectionScreenCoord = new global::SC2APIProtocol.PointI();
        }
        SelectionScreenCoord.MergeFrom(other.SelectionScreenCoord);
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (selectionScreenCoord_ == null) {
              SelectionScreenCoord = new global::SC2APIProtocol.PointI();
            }
            input.ReadMessage(SelectionScreenCoord);
            break;
          }
          case 16: {
            Type = (global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (selectionScreenCoord_ == null) {
              SelectionScreenCoord = new global::SC2APIProtocol.PointI();
            }
            input.ReadMessage(SelectionScreenCoord);
            break;
          }
          case 16: {
            Type = (global::SC2APIProtocol.ActionSpatialUnitSelectionPoint.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ActionSpatialUnitSelectionPoint message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Type {
        /// <summary>
        /// Equivalent to normal click. Changes selection to unit.
        /// </summary>
        [pbr::OriginalName("Select")] Select = 1,
        /// <summary>
        /// Equivalent to shift+click. Toggle selection of unit.
        /// </summary>
        [pbr::OriginalName("Toggle")] Toggle = 2,
        /// <summary>
        /// Equivalent to control+click. Selects all units of a given type.
        /// </summary>
        [pbr::OriginalName("AllType")] AllType = 3,
        /// <summary>
        /// Equivalent to shift+control+click. Selects all units of a given type.
        /// </summary>
        [pbr::OriginalName("AddAllType")] AddAllType = 4,
      }

    }
    #endregion

  }

  public sealed partial class ActionSpatialUnitSelectionRect : pb::IMessage<ActionSpatialUnitSelectionRect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionSpatialUnitSelectionRect> _parser = new pb::MessageParser<ActionSpatialUnitSelectionRect>(() => new ActionSpatialUnitSelectionRect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionSpatialUnitSelectionRect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.SpatialReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitSelectionRect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitSelectionRect(ActionSpatialUnitSelectionRect other) : this() {
      _hasBits0 = other._hasBits0;
      selectionScreenCoord_ = other.selectionScreenCoord_.Clone();
      selectionAdd_ = other.selectionAdd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionSpatialUnitSelectionRect Clone() {
      return new ActionSpatialUnitSelectionRect(this);
    }

    /// <summary>Field number for the "selection_screen_coord" field.</summary>
    public const int SelectionScreenCoordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.RectangleI> _repeated_selectionScreenCoord_codec
        = pb::FieldCodec.ForMessage(10, global::SC2APIProtocol.RectangleI.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.RectangleI> selectionScreenCoord_ = new pbc::RepeatedField<global::SC2APIProtocol.RectangleI>();
    /// <summary>
    /// Eventually this should not be an array, but a single field (multiple would be cheating).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.RectangleI> SelectionScreenCoord {
      get { return selectionScreenCoord_; }
    }

    /// <summary>Field number for the "selection_add" field.</summary>
    public const int SelectionAddFieldNumber = 2;
    private readonly static bool SelectionAddDefaultValue = false;

    private bool selectionAdd_;
    /// <summary>
    /// Equivalent to shift+drag. Adds units to selection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SelectionAdd {
      get { if ((_hasBits0 & 1) != 0) { return selectionAdd_; } else { return SelectionAddDefaultValue; } }
      set {
        _hasBits0 |= 1;
        selectionAdd_ = value;
      }
    }
    /// <summary>Gets whether the "selection_add" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectionAdd {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "selection_add" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectionAdd() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionSpatialUnitSelectionRect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionSpatialUnitSelectionRect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!selectionScreenCoord_.Equals(other.selectionScreenCoord_)) return false;
      if (SelectionAdd != other.SelectionAdd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= selectionScreenCoord_.GetHashCode();
      if (HasSelectionAdd) hash ^= SelectionAdd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      selectionScreenCoord_.WriteTo(output, _repeated_selectionScreenCoord_codec);
      if (HasSelectionAdd) {
        output.WriteRawTag(16);
        output.WriteBool(SelectionAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      selectionScreenCoord_.WriteTo(ref output, _repeated_selectionScreenCoord_codec);
      if (HasSelectionAdd) {
        output.WriteRawTag(16);
        output.WriteBool(SelectionAdd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += selectionScreenCoord_.CalculateSize(_repeated_selectionScreenCoord_codec);
      if (HasSelectionAdd) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionSpatialUnitSelectionRect other) {
      if (other == null) {
        return;
      }
      selectionScreenCoord_.Add(other.selectionScreenCoord_);
      if (other.HasSelectionAdd) {
        SelectionAdd = other.SelectionAdd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            selectionScreenCoord_.AddEntriesFrom(input, _repeated_selectionScreenCoord_codec);
            break;
          }
          case 16: {
            SelectionAdd = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            selectionScreenCoord_.AddEntriesFrom(ref input, _repeated_selectionScreenCoord_codec);
            break;
          }
          case 16: {
            SelectionAdd = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
