// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: s2clientprotocol/score.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SC2APIProtocol {

  /// <summary>Holder for reflection information generated from s2clientprotocol/score.proto</summary>
  public static partial class ScoreReflection {

    #region Descriptor
    /// <summary>File descriptor for s2clientprotocol/score.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxzMmNsaWVudHByb3RvY29sL3Njb3JlLnByb3RvEg5TQzJBUElQcm90b2Nv",
            "bCKoAQoFU2NvcmUSMwoKc2NvcmVfdHlwZRgGIAEoDjIfLlNDMkFQSVByb3Rv",
            "Y29sLlNjb3JlLlNjb3JlVHlwZRINCgVzY29yZRgHIAEoBRIzCg1zY29yZV9k",
            "ZXRhaWxzGAggASgLMhwuU0MyQVBJUHJvdG9jb2wuU2NvcmVEZXRhaWxzIiYK",
            "CVNjb3JlVHlwZRIOCgpDdXJyaWN1bHVtEAESCQoFTWVsZWUQAiJoChRDYXRl",
            "Z29yeVNjb3JlRGV0YWlscxIMCgRub25lGAEgASgCEgwKBGFybXkYAiABKAIS",
            "DwoHZWNvbm9teRgDIAEoAhISCgp0ZWNobm9sb2d5GAQgASgCEg8KB3VwZ3Jh",
            "ZGUYBSABKAIiQgoRVml0YWxTY29yZURldGFpbHMSDAoEbGlmZRgBIAEoAhIP",
            "CgdzaGllbGRzGAIgASgCEg4KBmVuZXJneRgDIAEoAiKKCgoMU2NvcmVEZXRh",
            "aWxzEhwKFGlkbGVfcHJvZHVjdGlvbl90aW1lGAEgASgCEhgKEGlkbGVfd29y",
            "a2VyX3RpbWUYAiABKAISGQoRdG90YWxfdmFsdWVfdW5pdHMYAyABKAISHgoW",
            "dG90YWxfdmFsdWVfc3RydWN0dXJlcxgEIAEoAhIaChJraWxsZWRfdmFsdWVf",
            "dW5pdHMYBSABKAISHwoXa2lsbGVkX3ZhbHVlX3N0cnVjdHVyZXMYBiABKAIS",
            "GgoSY29sbGVjdGVkX21pbmVyYWxzGAcgASgCEhkKEWNvbGxlY3RlZF92ZXNw",
            "ZW5lGAggASgCEiAKGGNvbGxlY3Rpb25fcmF0ZV9taW5lcmFscxgJIAEoAhIf",
            "Chdjb2xsZWN0aW9uX3JhdGVfdmVzcGVuZRgKIAEoAhIWCg5zcGVudF9taW5l",
            "cmFscxgLIAEoAhIVCg1zcGVudF92ZXNwZW5lGAwgASgCEjcKCWZvb2RfdXNl",
            "ZBgNIAEoCzIkLlNDMkFQSVByb3RvY29sLkNhdGVnb3J5U2NvcmVEZXRhaWxz",
            "Ej0KD2tpbGxlZF9taW5lcmFscxgOIAEoCzIkLlNDMkFQSVByb3RvY29sLkNh",
            "dGVnb3J5U2NvcmVEZXRhaWxzEjwKDmtpbGxlZF92ZXNwZW5lGA8gASgLMiQu",
            "U0MyQVBJUHJvdG9jb2wuQ2F0ZWdvcnlTY29yZURldGFpbHMSOwoNbG9zdF9t",
            "aW5lcmFscxgQIAEoCzIkLlNDMkFQSVByb3RvY29sLkNhdGVnb3J5U2NvcmVE",
            "ZXRhaWxzEjoKDGxvc3RfdmVzcGVuZRgRIAEoCzIkLlNDMkFQSVByb3RvY29s",
            "LkNhdGVnb3J5U2NvcmVEZXRhaWxzEkQKFmZyaWVuZGx5X2ZpcmVfbWluZXJh",
            "bHMYEiABKAsyJC5TQzJBUElQcm90b2NvbC5DYXRlZ29yeVNjb3JlRGV0YWls",
            "cxJDChVmcmllbmRseV9maXJlX3Zlc3BlbmUYEyABKAsyJC5TQzJBUElQcm90",
            "b2NvbC5DYXRlZ29yeVNjb3JlRGV0YWlscxI7Cg11c2VkX21pbmVyYWxzGBQg",
            "ASgLMiQuU0MyQVBJUHJvdG9jb2wuQ2F0ZWdvcnlTY29yZURldGFpbHMSOgoM",
            "dXNlZF92ZXNwZW5lGBUgASgLMiQuU0MyQVBJUHJvdG9jb2wuQ2F0ZWdvcnlT",
            "Y29yZURldGFpbHMSQQoTdG90YWxfdXNlZF9taW5lcmFscxgWIAEoCzIkLlND",
            "MkFQSVByb3RvY29sLkNhdGVnb3J5U2NvcmVEZXRhaWxzEkAKEnRvdGFsX3Vz",
            "ZWRfdmVzcGVuZRgXIAEoCzIkLlNDMkFQSVByb3RvY29sLkNhdGVnb3J5U2Nv",
            "cmVEZXRhaWxzEj0KEnRvdGFsX2RhbWFnZV9kZWFsdBgYIAEoCzIhLlNDMkFQ",
            "SVByb3RvY29sLlZpdGFsU2NvcmVEZXRhaWxzEj0KEnRvdGFsX2RhbWFnZV90",
            "YWtlbhgZIAEoCzIhLlNDMkFQSVByb3RvY29sLlZpdGFsU2NvcmVEZXRhaWxz",
            "EjcKDHRvdGFsX2hlYWxlZBgaIAEoCzIhLlNDMkFQSVByb3RvY29sLlZpdGFs",
            "U2NvcmVEZXRhaWxzEhMKC2N1cnJlbnRfYXBtGBsgASgCEh0KFWN1cnJlbnRf",
            "ZWZmZWN0aXZlX2FwbRgcIAEoAg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.Score), global::SC2APIProtocol.Score.Parser, new[]{ "ScoreType", "Score_", "ScoreDetails" }, null, new[]{ typeof(global::SC2APIProtocol.Score.Types.ScoreType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.CategoryScoreDetails), global::SC2APIProtocol.CategoryScoreDetails.Parser, new[]{ "None", "Army", "Economy", "Technology", "Upgrade" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.VitalScoreDetails), global::SC2APIProtocol.VitalScoreDetails.Parser, new[]{ "Life", "Shields", "Energy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ScoreDetails), global::SC2APIProtocol.ScoreDetails.Parser, new[]{ "IdleProductionTime", "IdleWorkerTime", "TotalValueUnits", "TotalValueStructures", "KilledValueUnits", "KilledValueStructures", "CollectedMinerals", "CollectedVespene", "CollectionRateMinerals", "CollectionRateVespene", "SpentMinerals", "SpentVespene", "FoodUsed", "KilledMinerals", "KilledVespene", "LostMinerals", "LostVespene", "FriendlyFireMinerals", "FriendlyFireVespene", "UsedMinerals", "UsedVespene", "TotalUsedMinerals", "TotalUsedVespene", "TotalDamageDealt", "TotalDamageTaken", "TotalHealed", "CurrentApm", "CurrentEffectiveApm" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Score : pb::IMessage<Score>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Score> _parser = new pb::MessageParser<Score>(() => new Score());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Score> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.ScoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Score() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Score(Score other) : this() {
      _hasBits0 = other._hasBits0;
      scoreType_ = other.scoreType_;
      score_ = other.score_;
      scoreDetails_ = other.scoreDetails_ != null ? other.scoreDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Score Clone() {
      return new Score(this);
    }

    /// <summary>Field number for the "score_type" field.</summary>
    public const int ScoreTypeFieldNumber = 6;
    private readonly static global::SC2APIProtocol.Score.Types.ScoreType ScoreTypeDefaultValue = global::SC2APIProtocol.Score.Types.ScoreType.Curriculum;

    private global::SC2APIProtocol.Score.Types.ScoreType scoreType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Score.Types.ScoreType ScoreType {
      get { if ((_hasBits0 & 1) != 0) { return scoreType_; } else { return ScoreTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        scoreType_ = value;
      }
    }
    /// <summary>Gets whether the "score_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScoreType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "score_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScoreType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int Score_FieldNumber = 7;
    private readonly static int Score_DefaultValue = 0;

    private int score_;
    /// <summary>
    /// Note: check score_type to know whether this is a melee score or curriculum score
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score_ {
      get { if ((_hasBits0 & 2) != 0) { return score_; } else { return Score_DefaultValue; } }
      set {
        _hasBits0 |= 2;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore_ {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore_() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "score_details" field.</summary>
    public const int ScoreDetailsFieldNumber = 8;
    private global::SC2APIProtocol.ScoreDetails scoreDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ScoreDetails ScoreDetails {
      get { return scoreDetails_; }
      set {
        scoreDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Score);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Score other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScoreType != other.ScoreType) return false;
      if (Score_ != other.Score_) return false;
      if (!object.Equals(ScoreDetails, other.ScoreDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasScoreType) hash ^= ScoreType.GetHashCode();
      if (HasScore_) hash ^= Score_.GetHashCode();
      if (scoreDetails_ != null) hash ^= ScoreDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasScoreType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ScoreType);
      }
      if (HasScore_) {
        output.WriteRawTag(56);
        output.WriteInt32(Score_);
      }
      if (scoreDetails_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ScoreDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasScoreType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ScoreType);
      }
      if (HasScore_) {
        output.WriteRawTag(56);
        output.WriteInt32(Score_);
      }
      if (scoreDetails_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ScoreDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasScoreType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScoreType);
      }
      if (HasScore_) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score_);
      }
      if (scoreDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScoreDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Score other) {
      if (other == null) {
        return;
      }
      if (other.HasScoreType) {
        ScoreType = other.ScoreType;
      }
      if (other.HasScore_) {
        Score_ = other.Score_;
      }
      if (other.scoreDetails_ != null) {
        if (scoreDetails_ == null) {
          ScoreDetails = new global::SC2APIProtocol.ScoreDetails();
        }
        ScoreDetails.MergeFrom(other.ScoreDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 48: {
            ScoreType = (global::SC2APIProtocol.Score.Types.ScoreType) input.ReadEnum();
            break;
          }
          case 56: {
            Score_ = input.ReadInt32();
            break;
          }
          case 66: {
            if (scoreDetails_ == null) {
              ScoreDetails = new global::SC2APIProtocol.ScoreDetails();
            }
            input.ReadMessage(ScoreDetails);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 48: {
            ScoreType = (global::SC2APIProtocol.Score.Types.ScoreType) input.ReadEnum();
            break;
          }
          case 56: {
            Score_ = input.ReadInt32();
            break;
          }
          case 66: {
            if (scoreDetails_ == null) {
              ScoreDetails = new global::SC2APIProtocol.ScoreDetails();
            }
            input.ReadMessage(ScoreDetails);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Score message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ScoreType {
        /// <summary>
        /// map generated score (from curriculum maps with special scoring)
        /// </summary>
        [pbr::OriginalName("Curriculum")] Curriculum = 1,
        /// <summary>
        /// summation of in-progress and current units/buildings value + minerals + vespene
        /// </summary>
        [pbr::OriginalName("Melee")] Melee = 2,
      }

    }
    #endregion

  }

  public sealed partial class CategoryScoreDetails : pb::IMessage<CategoryScoreDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CategoryScoreDetails> _parser = new pb::MessageParser<CategoryScoreDetails>(() => new CategoryScoreDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CategoryScoreDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.ScoreReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CategoryScoreDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CategoryScoreDetails(CategoryScoreDetails other) : this() {
      _hasBits0 = other._hasBits0;
      none_ = other.none_;
      army_ = other.army_;
      economy_ = other.economy_;
      technology_ = other.technology_;
      upgrade_ = other.upgrade_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CategoryScoreDetails Clone() {
      return new CategoryScoreDetails(this);
    }

    /// <summary>Field number for the "none" field.</summary>
    public const int NoneFieldNumber = 1;
    private readonly static float NoneDefaultValue = 0F;

    private float none_;
    /// <summary>
    /// Used when no other category is configured in game data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float None {
      get { if ((_hasBits0 & 1) != 0) { return none_; } else { return NoneDefaultValue; } }
      set {
        _hasBits0 |= 1;
        none_ = value;
      }
    }
    /// <summary>Gets whether the "none" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNone {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "none" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNone() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "army" field.</summary>
    public const int ArmyFieldNumber = 2;
    private readonly static float ArmyDefaultValue = 0F;

    private float army_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Army {
      get { if ((_hasBits0 & 2) != 0) { return army_; } else { return ArmyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        army_ = value;
      }
    }
    /// <summary>Gets whether the "army" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArmy {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "army" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArmy() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "economy" field.</summary>
    public const int EconomyFieldNumber = 3;
    private readonly static float EconomyDefaultValue = 0F;

    private float economy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Economy {
      get { if ((_hasBits0 & 4) != 0) { return economy_; } else { return EconomyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        economy_ = value;
      }
    }
    /// <summary>Gets whether the "economy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEconomy {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "economy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEconomy() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "technology" field.</summary>
    public const int TechnologyFieldNumber = 4;
    private readonly static float TechnologyDefaultValue = 0F;

    private float technology_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Technology {
      get { if ((_hasBits0 & 8) != 0) { return technology_; } else { return TechnologyDefaultValue; } }
      set {
        _hasBits0 |= 8;
        technology_ = value;
      }
    }
    /// <summary>Gets whether the "technology" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTechnology {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "technology" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTechnology() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "upgrade" field.</summary>
    public const int UpgradeFieldNumber = 5;
    private readonly static float UpgradeDefaultValue = 0F;

    private float upgrade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Upgrade {
      get { if ((_hasBits0 & 16) != 0) { return upgrade_; } else { return UpgradeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        upgrade_ = value;
      }
    }
    /// <summary>Gets whether the "upgrade" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpgrade {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "upgrade" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpgrade() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CategoryScoreDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CategoryScoreDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(None, other.None)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Army, other.Army)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Economy, other.Economy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Technology, other.Technology)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Upgrade, other.Upgrade)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNone) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(None);
      if (HasArmy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Army);
      if (HasEconomy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Economy);
      if (HasTechnology) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Technology);
      if (HasUpgrade) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Upgrade);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNone) {
        output.WriteRawTag(13);
        output.WriteFloat(None);
      }
      if (HasArmy) {
        output.WriteRawTag(21);
        output.WriteFloat(Army);
      }
      if (HasEconomy) {
        output.WriteRawTag(29);
        output.WriteFloat(Economy);
      }
      if (HasTechnology) {
        output.WriteRawTag(37);
        output.WriteFloat(Technology);
      }
      if (HasUpgrade) {
        output.WriteRawTag(45);
        output.WriteFloat(Upgrade);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNone) {
        output.WriteRawTag(13);
        output.WriteFloat(None);
      }
      if (HasArmy) {
        output.WriteRawTag(21);
        output.WriteFloat(Army);
      }
      if (HasEconomy) {
        output.WriteRawTag(29);
        output.WriteFloat(Economy);
      }
      if (HasTechnology) {
        output.WriteRawTag(37);
        output.WriteFloat(Technology);
      }
      if (HasUpgrade) {
        output.WriteRawTag(45);
        output.WriteFloat(Upgrade);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNone) {
        size += 1 + 4;
      }
      if (HasArmy) {
        size += 1 + 4;
      }
      if (HasEconomy) {
        size += 1 + 4;
      }
      if (HasTechnology) {
        size += 1 + 4;
      }
      if (HasUpgrade) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CategoryScoreDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasNone) {
        None = other.None;
      }
      if (other.HasArmy) {
        Army = other.Army;
      }
      if (other.HasEconomy) {
        Economy = other.Economy;
      }
      if (other.HasTechnology) {
        Technology = other.Technology;
      }
      if (other.HasUpgrade) {
        Upgrade = other.Upgrade;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            None = input.ReadFloat();
            break;
          }
          case 21: {
            Army = input.ReadFloat();
            break;
          }
          case 29: {
            Economy = input.ReadFloat();
            break;
          }
          case 37: {
            Technology = input.ReadFloat();
            break;
          }
          case 45: {
            Upgrade = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            None = input.ReadFloat();
            break;
          }
          case 21: {
            Army = input.ReadFloat();
            break;
          }
          case 29: {
            Economy = input.ReadFloat();
            break;
          }
          case 37: {
            Technology = input.ReadFloat();
            break;
          }
          case 45: {
            Upgrade = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VitalScoreDetails : pb::IMessage<VitalScoreDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VitalScoreDetails> _parser = new pb::MessageParser<VitalScoreDetails>(() => new VitalScoreDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VitalScoreDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.ScoreReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VitalScoreDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VitalScoreDetails(VitalScoreDetails other) : this() {
      _hasBits0 = other._hasBits0;
      life_ = other.life_;
      shields_ = other.shields_;
      energy_ = other.energy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VitalScoreDetails Clone() {
      return new VitalScoreDetails(this);
    }

    /// <summary>Field number for the "life" field.</summary>
    public const int LifeFieldNumber = 1;
    private readonly static float LifeDefaultValue = 0F;

    private float life_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Life {
      get { if ((_hasBits0 & 1) != 0) { return life_; } else { return LifeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        life_ = value;
      }
    }
    /// <summary>Gets whether the "life" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLife {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "life" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLife() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "shields" field.</summary>
    public const int ShieldsFieldNumber = 2;
    private readonly static float ShieldsDefaultValue = 0F;

    private float shields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Shields {
      get { if ((_hasBits0 & 2) != 0) { return shields_; } else { return ShieldsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        shields_ = value;
      }
    }
    /// <summary>Gets whether the "shields" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShields {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "shields" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShields() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 3;
    private readonly static float EnergyDefaultValue = 0F;

    private float energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Energy {
      get { if ((_hasBits0 & 4) != 0) { return energy_; } else { return EnergyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        energy_ = value;
      }
    }
    /// <summary>Gets whether the "energy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnergy {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "energy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnergy() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VitalScoreDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VitalScoreDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Life, other.Life)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Shields, other.Shields)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Energy, other.Energy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLife) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Life);
      if (HasShields) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Shields);
      if (HasEnergy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Energy);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLife) {
        output.WriteRawTag(13);
        output.WriteFloat(Life);
      }
      if (HasShields) {
        output.WriteRawTag(21);
        output.WriteFloat(Shields);
      }
      if (HasEnergy) {
        output.WriteRawTag(29);
        output.WriteFloat(Energy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLife) {
        output.WriteRawTag(13);
        output.WriteFloat(Life);
      }
      if (HasShields) {
        output.WriteRawTag(21);
        output.WriteFloat(Shields);
      }
      if (HasEnergy) {
        output.WriteRawTag(29);
        output.WriteFloat(Energy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLife) {
        size += 1 + 4;
      }
      if (HasShields) {
        size += 1 + 4;
      }
      if (HasEnergy) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VitalScoreDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasLife) {
        Life = other.Life;
      }
      if (other.HasShields) {
        Shields = other.Shields;
      }
      if (other.HasEnergy) {
        Energy = other.Energy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Life = input.ReadFloat();
            break;
          }
          case 21: {
            Shields = input.ReadFloat();
            break;
          }
          case 29: {
            Energy = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Life = input.ReadFloat();
            break;
          }
          case 21: {
            Shields = input.ReadFloat();
            break;
          }
          case 29: {
            Energy = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScoreDetails : pb::IMessage<ScoreDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScoreDetails> _parser = new pb::MessageParser<ScoreDetails>(() => new ScoreDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScoreDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.ScoreReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScoreDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScoreDetails(ScoreDetails other) : this() {
      _hasBits0 = other._hasBits0;
      idleProductionTime_ = other.idleProductionTime_;
      idleWorkerTime_ = other.idleWorkerTime_;
      totalValueUnits_ = other.totalValueUnits_;
      totalValueStructures_ = other.totalValueStructures_;
      killedValueUnits_ = other.killedValueUnits_;
      killedValueStructures_ = other.killedValueStructures_;
      collectedMinerals_ = other.collectedMinerals_;
      collectedVespene_ = other.collectedVespene_;
      collectionRateMinerals_ = other.collectionRateMinerals_;
      collectionRateVespene_ = other.collectionRateVespene_;
      spentMinerals_ = other.spentMinerals_;
      spentVespene_ = other.spentVespene_;
      foodUsed_ = other.foodUsed_ != null ? other.foodUsed_.Clone() : null;
      killedMinerals_ = other.killedMinerals_ != null ? other.killedMinerals_.Clone() : null;
      killedVespene_ = other.killedVespene_ != null ? other.killedVespene_.Clone() : null;
      lostMinerals_ = other.lostMinerals_ != null ? other.lostMinerals_.Clone() : null;
      lostVespene_ = other.lostVespene_ != null ? other.lostVespene_.Clone() : null;
      friendlyFireMinerals_ = other.friendlyFireMinerals_ != null ? other.friendlyFireMinerals_.Clone() : null;
      friendlyFireVespene_ = other.friendlyFireVespene_ != null ? other.friendlyFireVespene_.Clone() : null;
      usedMinerals_ = other.usedMinerals_ != null ? other.usedMinerals_.Clone() : null;
      usedVespene_ = other.usedVespene_ != null ? other.usedVespene_.Clone() : null;
      totalUsedMinerals_ = other.totalUsedMinerals_ != null ? other.totalUsedMinerals_.Clone() : null;
      totalUsedVespene_ = other.totalUsedVespene_ != null ? other.totalUsedVespene_.Clone() : null;
      totalDamageDealt_ = other.totalDamageDealt_ != null ? other.totalDamageDealt_.Clone() : null;
      totalDamageTaken_ = other.totalDamageTaken_ != null ? other.totalDamageTaken_.Clone() : null;
      totalHealed_ = other.totalHealed_ != null ? other.totalHealed_.Clone() : null;
      currentApm_ = other.currentApm_;
      currentEffectiveApm_ = other.currentEffectiveApm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScoreDetails Clone() {
      return new ScoreDetails(this);
    }

    /// <summary>Field number for the "idle_production_time" field.</summary>
    public const int IdleProductionTimeFieldNumber = 1;
    private readonly static float IdleProductionTimeDefaultValue = 0F;

    private float idleProductionTime_;
    /// <summary>
    /// Sum of time any available structure able to produce a unit is not. The time stacks, as in, three idle barracks will increase idle_production_time three times quicker than just one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IdleProductionTime {
      get { if ((_hasBits0 & 1) != 0) { return idleProductionTime_; } else { return IdleProductionTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        idleProductionTime_ = value;
      }
    }
    /// <summary>Gets whether the "idle_production_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdleProductionTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "idle_production_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdleProductionTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "idle_worker_time" field.</summary>
    public const int IdleWorkerTimeFieldNumber = 2;
    private readonly static float IdleWorkerTimeDefaultValue = 0F;

    private float idleWorkerTime_;
    /// <summary>
    /// Sum of time any worker is not mining. Note a worker building is not idle and three idle workers will increase this value three times quicker than just one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float IdleWorkerTime {
      get { if ((_hasBits0 & 2) != 0) { return idleWorkerTime_; } else { return IdleWorkerTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        idleWorkerTime_ = value;
      }
    }
    /// <summary>Gets whether the "idle_worker_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdleWorkerTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "idle_worker_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdleWorkerTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "total_value_units" field.</summary>
    public const int TotalValueUnitsFieldNumber = 3;
    private readonly static float TotalValueUnitsDefaultValue = 0F;

    private float totalValueUnits_;
    /// <summary>
    /// Sum of minerals and vespene spent on completed units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TotalValueUnits {
      get { if ((_hasBits0 & 4) != 0) { return totalValueUnits_; } else { return TotalValueUnitsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        totalValueUnits_ = value;
      }
    }
    /// <summary>Gets whether the "total_value_units" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalValueUnits {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "total_value_units" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalValueUnits() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "total_value_structures" field.</summary>
    public const int TotalValueStructuresFieldNumber = 4;
    private readonly static float TotalValueStructuresDefaultValue = 0F;

    private float totalValueStructures_;
    /// <summary>
    /// Sum of minerals and vespene spent on completed structures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TotalValueStructures {
      get { if ((_hasBits0 & 8) != 0) { return totalValueStructures_; } else { return TotalValueStructuresDefaultValue; } }
      set {
        _hasBits0 |= 8;
        totalValueStructures_ = value;
      }
    }
    /// <summary>Gets whether the "total_value_structures" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalValueStructures {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "total_value_structures" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalValueStructures() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "killed_value_units" field.</summary>
    public const int KilledValueUnitsFieldNumber = 5;
    private readonly static float KilledValueUnitsDefaultValue = 0F;

    private float killedValueUnits_;
    /// <summary>
    /// Sum of minerals and vespene of units, belonging to the opponent, that the player has destroyed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float KilledValueUnits {
      get { if ((_hasBits0 & 16) != 0) { return killedValueUnits_; } else { return KilledValueUnitsDefaultValue; } }
      set {
        _hasBits0 |= 16;
        killedValueUnits_ = value;
      }
    }
    /// <summary>Gets whether the "killed_value_units" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKilledValueUnits {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "killed_value_units" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKilledValueUnits() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "killed_value_structures" field.</summary>
    public const int KilledValueStructuresFieldNumber = 6;
    private readonly static float KilledValueStructuresDefaultValue = 0F;

    private float killedValueStructures_;
    /// <summary>
    /// Sum of minerals and vespene of structures, belonging to the opponent, that the player has destroyed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float KilledValueStructures {
      get { if ((_hasBits0 & 32) != 0) { return killedValueStructures_; } else { return KilledValueStructuresDefaultValue; } }
      set {
        _hasBits0 |= 32;
        killedValueStructures_ = value;
      }
    }
    /// <summary>Gets whether the "killed_value_structures" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKilledValueStructures {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "killed_value_structures" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKilledValueStructures() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "collected_minerals" field.</summary>
    public const int CollectedMineralsFieldNumber = 7;
    private readonly static float CollectedMineralsDefaultValue = 0F;

    private float collectedMinerals_;
    /// <summary>
    /// Sum of minerals collected by the player.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CollectedMinerals {
      get { if ((_hasBits0 & 64) != 0) { return collectedMinerals_; } else { return CollectedMineralsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        collectedMinerals_ = value;
      }
    }
    /// <summary>Gets whether the "collected_minerals" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCollectedMinerals {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "collected_minerals" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCollectedMinerals() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "collected_vespene" field.</summary>
    public const int CollectedVespeneFieldNumber = 8;
    private readonly static float CollectedVespeneDefaultValue = 0F;

    private float collectedVespene_;
    /// <summary>
    /// Sum of vespene collected by the player.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CollectedVespene {
      get { if ((_hasBits0 & 128) != 0) { return collectedVespene_; } else { return CollectedVespeneDefaultValue; } }
      set {
        _hasBits0 |= 128;
        collectedVespene_ = value;
      }
    }
    /// <summary>Gets whether the "collected_vespene" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCollectedVespene {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "collected_vespene" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCollectedVespene() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "collection_rate_minerals" field.</summary>
    public const int CollectionRateMineralsFieldNumber = 9;
    private readonly static float CollectionRateMineralsDefaultValue = 0F;

    private float collectionRateMinerals_;
    /// <summary>
    /// Estimated income of minerals over the next minute based on the players current income. The unit is minerals per minute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CollectionRateMinerals {
      get { if ((_hasBits0 & 256) != 0) { return collectionRateMinerals_; } else { return CollectionRateMineralsDefaultValue; } }
      set {
        _hasBits0 |= 256;
        collectionRateMinerals_ = value;
      }
    }
    /// <summary>Gets whether the "collection_rate_minerals" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCollectionRateMinerals {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "collection_rate_minerals" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCollectionRateMinerals() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "collection_rate_vespene" field.</summary>
    public const int CollectionRateVespeneFieldNumber = 10;
    private readonly static float CollectionRateVespeneDefaultValue = 0F;

    private float collectionRateVespene_;
    /// <summary>
    /// Estimated income of vespene over the next minute based on the players current income. The unit is vespene per minute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CollectionRateVespene {
      get { if ((_hasBits0 & 512) != 0) { return collectionRateVespene_; } else { return CollectionRateVespeneDefaultValue; } }
      set {
        _hasBits0 |= 512;
        collectionRateVespene_ = value;
      }
    }
    /// <summary>Gets whether the "collection_rate_vespene" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCollectionRateVespene {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "collection_rate_vespene" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCollectionRateVespene() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "spent_minerals" field.</summary>
    public const int SpentMineralsFieldNumber = 11;
    private readonly static float SpentMineralsDefaultValue = 0F;

    private float spentMinerals_;
    /// <summary>
    /// Sum of spent minerals at the moment it is spent. For example, this number is incremented by 50 the moment an scv is queued in a command center.  It is decremented by 50 if that unit is canceled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpentMinerals {
      get { if ((_hasBits0 & 1024) != 0) { return spentMinerals_; } else { return SpentMineralsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        spentMinerals_ = value;
      }
    }
    /// <summary>Gets whether the "spent_minerals" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpentMinerals {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "spent_minerals" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpentMinerals() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "spent_vespene" field.</summary>
    public const int SpentVespeneFieldNumber = 12;
    private readonly static float SpentVespeneDefaultValue = 0F;

    private float spentVespene_;
    /// <summary>
    /// Sum of spent vespene at the moment it is spent. For example, this number is incremented by 50 when a reaper is queued but decremented by 50 if it is canceled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpentVespene {
      get { if ((_hasBits0 & 2048) != 0) { return spentVespene_; } else { return SpentVespeneDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        spentVespene_ = value;
      }
    }
    /// <summary>Gets whether the "spent_vespene" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpentVespene {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "spent_vespene" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpentVespene() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "food_used" field.</summary>
    public const int FoodUsedFieldNumber = 13;
    private global::SC2APIProtocol.CategoryScoreDetails foodUsed_;
    /// <summary>
    /// Sum of food, or supply, utilized in the categories above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails FoodUsed {
      get { return foodUsed_; }
      set {
        foodUsed_ = value;
      }
    }

    /// <summary>Field number for the "killed_minerals" field.</summary>
    public const int KilledMineralsFieldNumber = 14;
    private global::SC2APIProtocol.CategoryScoreDetails killedMinerals_;
    /// <summary>
    /// Sum of enemies catagories destroyed in minerals.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails KilledMinerals {
      get { return killedMinerals_; }
      set {
        killedMinerals_ = value;
      }
    }

    /// <summary>Field number for the "killed_vespene" field.</summary>
    public const int KilledVespeneFieldNumber = 15;
    private global::SC2APIProtocol.CategoryScoreDetails killedVespene_;
    /// <summary>
    /// Sum of enemies catagories destroyed in vespene.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails KilledVespene {
      get { return killedVespene_; }
      set {
        killedVespene_ = value;
      }
    }

    /// <summary>Field number for the "lost_minerals" field.</summary>
    public const int LostMineralsFieldNumber = 16;
    private global::SC2APIProtocol.CategoryScoreDetails lostMinerals_;
    /// <summary>
    ///  Sum of lost minerals for the player in each category.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails LostMinerals {
      get { return lostMinerals_; }
      set {
        lostMinerals_ = value;
      }
    }

    /// <summary>Field number for the "lost_vespene" field.</summary>
    public const int LostVespeneFieldNumber = 17;
    private global::SC2APIProtocol.CategoryScoreDetails lostVespene_;
    /// <summary>
    /// Sum of lost vespene for the player in each category.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails LostVespene {
      get { return lostVespene_; }
      set {
        lostVespene_ = value;
      }
    }

    /// <summary>Field number for the "friendly_fire_minerals" field.</summary>
    public const int FriendlyFireMineralsFieldNumber = 18;
    private global::SC2APIProtocol.CategoryScoreDetails friendlyFireMinerals_;
    /// <summary>
    /// Sum of the lost minerals via destroying the players own units/buildings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails FriendlyFireMinerals {
      get { return friendlyFireMinerals_; }
      set {
        friendlyFireMinerals_ = value;
      }
    }

    /// <summary>Field number for the "friendly_fire_vespene" field.</summary>
    public const int FriendlyFireVespeneFieldNumber = 19;
    private global::SC2APIProtocol.CategoryScoreDetails friendlyFireVespene_;
    /// <summary>
    /// Sum of the lost vespene via destroying the players own units/buildings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails FriendlyFireVespene {
      get { return friendlyFireVespene_; }
      set {
        friendlyFireVespene_ = value;
      }
    }

    /// <summary>Field number for the "used_minerals" field.</summary>
    public const int UsedMineralsFieldNumber = 20;
    private global::SC2APIProtocol.CategoryScoreDetails usedMinerals_;
    /// <summary>
    /// Sum of used minerals for the player in each category for each existing unit or upgrade. Therefore if a unit died worth 50 mierals this number will be decremented by 50.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails UsedMinerals {
      get { return usedMinerals_; }
      set {
        usedMinerals_ = value;
      }
    }

    /// <summary>Field number for the "used_vespene" field.</summary>
    public const int UsedVespeneFieldNumber = 21;
    private global::SC2APIProtocol.CategoryScoreDetails usedVespene_;
    /// <summary>
    /// Sum of used vespene for the player in each category. Therefore if a unit died worth 50 vespene this number will be decremented by 50.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails UsedVespene {
      get { return usedVespene_; }
      set {
        usedVespene_ = value;
      }
    }

    /// <summary>Field number for the "total_used_minerals" field.</summary>
    public const int TotalUsedMineralsFieldNumber = 22;
    private global::SC2APIProtocol.CategoryScoreDetails totalUsedMinerals_;
    /// <summary>
    /// Sum of used minerals throughout the entire game for each category. Unliked used_minerals, this value is never decremented.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails TotalUsedMinerals {
      get { return totalUsedMinerals_; }
      set {
        totalUsedMinerals_ = value;
      }
    }

    /// <summary>Field number for the "total_used_vespene" field.</summary>
    public const int TotalUsedVespeneFieldNumber = 23;
    private global::SC2APIProtocol.CategoryScoreDetails totalUsedVespene_;
    /// <summary>
    /// Sum of used vespene throughout the entire game for each category. Unliked used_vespene, this value is never decremented.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CategoryScoreDetails TotalUsedVespene {
      get { return totalUsedVespene_; }
      set {
        totalUsedVespene_ = value;
      }
    }

    /// <summary>Field number for the "total_damage_dealt" field.</summary>
    public const int TotalDamageDealtFieldNumber = 24;
    private global::SC2APIProtocol.VitalScoreDetails totalDamageDealt_;
    /// <summary>
    /// Sum of damage dealt to the player's opponent for each category.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.VitalScoreDetails TotalDamageDealt {
      get { return totalDamageDealt_; }
      set {
        totalDamageDealt_ = value;
      }
    }

    /// <summary>Field number for the "total_damage_taken" field.</summary>
    public const int TotalDamageTakenFieldNumber = 25;
    private global::SC2APIProtocol.VitalScoreDetails totalDamageTaken_;
    /// <summary>
    /// Sum of damage taken by the player for each category.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.VitalScoreDetails TotalDamageTaken {
      get { return totalDamageTaken_; }
      set {
        totalDamageTaken_ = value;
      }
    }

    /// <summary>Field number for the "total_healed" field.</summary>
    public const int TotalHealedFieldNumber = 26;
    private global::SC2APIProtocol.VitalScoreDetails totalHealed_;
    /// <summary>
    /// Sum of health healed by the player. Note that technology can be healed (by queens) or repaired (by scvs).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.VitalScoreDetails TotalHealed {
      get { return totalHealed_; }
      set {
        totalHealed_ = value;
      }
    }

    /// <summary>Field number for the "current_apm" field.</summary>
    public const int CurrentApmFieldNumber = 27;
    private readonly static float CurrentApmDefaultValue = 0F;

    private float currentApm_;
    /// <summary>
    /// Recent raw APM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CurrentApm {
      get { if ((_hasBits0 & 4096) != 0) { return currentApm_; } else { return CurrentApmDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        currentApm_ = value;
      }
    }
    /// <summary>Gets whether the "current_apm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentApm {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "current_apm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentApm() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "current_effective_apm" field.</summary>
    public const int CurrentEffectiveApmFieldNumber = 28;
    private readonly static float CurrentEffectiveApmDefaultValue = 0F;

    private float currentEffectiveApm_;
    /// <summary>
    /// Recent effective APM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CurrentEffectiveApm {
      get { if ((_hasBits0 & 8192) != 0) { return currentEffectiveApm_; } else { return CurrentEffectiveApmDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        currentEffectiveApm_ = value;
      }
    }
    /// <summary>Gets whether the "current_effective_apm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrentEffectiveApm {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "current_effective_apm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrentEffectiveApm() {
      _hasBits0 &= ~8192;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScoreDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScoreDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IdleProductionTime, other.IdleProductionTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IdleWorkerTime, other.IdleWorkerTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TotalValueUnits, other.TotalValueUnits)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TotalValueStructures, other.TotalValueStructures)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(KilledValueUnits, other.KilledValueUnits)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(KilledValueStructures, other.KilledValueStructures)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CollectedMinerals, other.CollectedMinerals)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CollectedVespene, other.CollectedVespene)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CollectionRateMinerals, other.CollectionRateMinerals)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CollectionRateVespene, other.CollectionRateVespene)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpentMinerals, other.SpentMinerals)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpentVespene, other.SpentVespene)) return false;
      if (!object.Equals(FoodUsed, other.FoodUsed)) return false;
      if (!object.Equals(KilledMinerals, other.KilledMinerals)) return false;
      if (!object.Equals(KilledVespene, other.KilledVespene)) return false;
      if (!object.Equals(LostMinerals, other.LostMinerals)) return false;
      if (!object.Equals(LostVespene, other.LostVespene)) return false;
      if (!object.Equals(FriendlyFireMinerals, other.FriendlyFireMinerals)) return false;
      if (!object.Equals(FriendlyFireVespene, other.FriendlyFireVespene)) return false;
      if (!object.Equals(UsedMinerals, other.UsedMinerals)) return false;
      if (!object.Equals(UsedVespene, other.UsedVespene)) return false;
      if (!object.Equals(TotalUsedMinerals, other.TotalUsedMinerals)) return false;
      if (!object.Equals(TotalUsedVespene, other.TotalUsedVespene)) return false;
      if (!object.Equals(TotalDamageDealt, other.TotalDamageDealt)) return false;
      if (!object.Equals(TotalDamageTaken, other.TotalDamageTaken)) return false;
      if (!object.Equals(TotalHealed, other.TotalHealed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentApm, other.CurrentApm)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CurrentEffectiveApm, other.CurrentEffectiveApm)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIdleProductionTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IdleProductionTime);
      if (HasIdleWorkerTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IdleWorkerTime);
      if (HasTotalValueUnits) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TotalValueUnits);
      if (HasTotalValueStructures) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TotalValueStructures);
      if (HasKilledValueUnits) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(KilledValueUnits);
      if (HasKilledValueStructures) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(KilledValueStructures);
      if (HasCollectedMinerals) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CollectedMinerals);
      if (HasCollectedVespene) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CollectedVespene);
      if (HasCollectionRateMinerals) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CollectionRateMinerals);
      if (HasCollectionRateVespene) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CollectionRateVespene);
      if (HasSpentMinerals) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpentMinerals);
      if (HasSpentVespene) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpentVespene);
      if (foodUsed_ != null) hash ^= FoodUsed.GetHashCode();
      if (killedMinerals_ != null) hash ^= KilledMinerals.GetHashCode();
      if (killedVespene_ != null) hash ^= KilledVespene.GetHashCode();
      if (lostMinerals_ != null) hash ^= LostMinerals.GetHashCode();
      if (lostVespene_ != null) hash ^= LostVespene.GetHashCode();
      if (friendlyFireMinerals_ != null) hash ^= FriendlyFireMinerals.GetHashCode();
      if (friendlyFireVespene_ != null) hash ^= FriendlyFireVespene.GetHashCode();
      if (usedMinerals_ != null) hash ^= UsedMinerals.GetHashCode();
      if (usedVespene_ != null) hash ^= UsedVespene.GetHashCode();
      if (totalUsedMinerals_ != null) hash ^= TotalUsedMinerals.GetHashCode();
      if (totalUsedVespene_ != null) hash ^= TotalUsedVespene.GetHashCode();
      if (totalDamageDealt_ != null) hash ^= TotalDamageDealt.GetHashCode();
      if (totalDamageTaken_ != null) hash ^= TotalDamageTaken.GetHashCode();
      if (totalHealed_ != null) hash ^= TotalHealed.GetHashCode();
      if (HasCurrentApm) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentApm);
      if (HasCurrentEffectiveApm) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CurrentEffectiveApm);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIdleProductionTime) {
        output.WriteRawTag(13);
        output.WriteFloat(IdleProductionTime);
      }
      if (HasIdleWorkerTime) {
        output.WriteRawTag(21);
        output.WriteFloat(IdleWorkerTime);
      }
      if (HasTotalValueUnits) {
        output.WriteRawTag(29);
        output.WriteFloat(TotalValueUnits);
      }
      if (HasTotalValueStructures) {
        output.WriteRawTag(37);
        output.WriteFloat(TotalValueStructures);
      }
      if (HasKilledValueUnits) {
        output.WriteRawTag(45);
        output.WriteFloat(KilledValueUnits);
      }
      if (HasKilledValueStructures) {
        output.WriteRawTag(53);
        output.WriteFloat(KilledValueStructures);
      }
      if (HasCollectedMinerals) {
        output.WriteRawTag(61);
        output.WriteFloat(CollectedMinerals);
      }
      if (HasCollectedVespene) {
        output.WriteRawTag(69);
        output.WriteFloat(CollectedVespene);
      }
      if (HasCollectionRateMinerals) {
        output.WriteRawTag(77);
        output.WriteFloat(CollectionRateMinerals);
      }
      if (HasCollectionRateVespene) {
        output.WriteRawTag(85);
        output.WriteFloat(CollectionRateVespene);
      }
      if (HasSpentMinerals) {
        output.WriteRawTag(93);
        output.WriteFloat(SpentMinerals);
      }
      if (HasSpentVespene) {
        output.WriteRawTag(101);
        output.WriteFloat(SpentVespene);
      }
      if (foodUsed_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(FoodUsed);
      }
      if (killedMinerals_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(KilledMinerals);
      }
      if (killedVespene_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(KilledVespene);
      }
      if (lostMinerals_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LostMinerals);
      }
      if (lostVespene_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LostVespene);
      }
      if (friendlyFireMinerals_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(FriendlyFireMinerals);
      }
      if (friendlyFireVespene_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(FriendlyFireVespene);
      }
      if (usedMinerals_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(UsedMinerals);
      }
      if (usedVespene_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UsedVespene);
      }
      if (totalUsedMinerals_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(TotalUsedMinerals);
      }
      if (totalUsedVespene_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(TotalUsedVespene);
      }
      if (totalDamageDealt_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(TotalDamageDealt);
      }
      if (totalDamageTaken_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TotalDamageTaken);
      }
      if (totalHealed_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(TotalHealed);
      }
      if (HasCurrentApm) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(CurrentApm);
      }
      if (HasCurrentEffectiveApm) {
        output.WriteRawTag(229, 1);
        output.WriteFloat(CurrentEffectiveApm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIdleProductionTime) {
        output.WriteRawTag(13);
        output.WriteFloat(IdleProductionTime);
      }
      if (HasIdleWorkerTime) {
        output.WriteRawTag(21);
        output.WriteFloat(IdleWorkerTime);
      }
      if (HasTotalValueUnits) {
        output.WriteRawTag(29);
        output.WriteFloat(TotalValueUnits);
      }
      if (HasTotalValueStructures) {
        output.WriteRawTag(37);
        output.WriteFloat(TotalValueStructures);
      }
      if (HasKilledValueUnits) {
        output.WriteRawTag(45);
        output.WriteFloat(KilledValueUnits);
      }
      if (HasKilledValueStructures) {
        output.WriteRawTag(53);
        output.WriteFloat(KilledValueStructures);
      }
      if (HasCollectedMinerals) {
        output.WriteRawTag(61);
        output.WriteFloat(CollectedMinerals);
      }
      if (HasCollectedVespene) {
        output.WriteRawTag(69);
        output.WriteFloat(CollectedVespene);
      }
      if (HasCollectionRateMinerals) {
        output.WriteRawTag(77);
        output.WriteFloat(CollectionRateMinerals);
      }
      if (HasCollectionRateVespene) {
        output.WriteRawTag(85);
        output.WriteFloat(CollectionRateVespene);
      }
      if (HasSpentMinerals) {
        output.WriteRawTag(93);
        output.WriteFloat(SpentMinerals);
      }
      if (HasSpentVespene) {
        output.WriteRawTag(101);
        output.WriteFloat(SpentVespene);
      }
      if (foodUsed_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(FoodUsed);
      }
      if (killedMinerals_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(KilledMinerals);
      }
      if (killedVespene_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(KilledVespene);
      }
      if (lostMinerals_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LostMinerals);
      }
      if (lostVespene_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(LostVespene);
      }
      if (friendlyFireMinerals_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(FriendlyFireMinerals);
      }
      if (friendlyFireVespene_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(FriendlyFireVespene);
      }
      if (usedMinerals_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(UsedMinerals);
      }
      if (usedVespene_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UsedVespene);
      }
      if (totalUsedMinerals_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(TotalUsedMinerals);
      }
      if (totalUsedVespene_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(TotalUsedVespene);
      }
      if (totalDamageDealt_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(TotalDamageDealt);
      }
      if (totalDamageTaken_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TotalDamageTaken);
      }
      if (totalHealed_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(TotalHealed);
      }
      if (HasCurrentApm) {
        output.WriteRawTag(221, 1);
        output.WriteFloat(CurrentApm);
      }
      if (HasCurrentEffectiveApm) {
        output.WriteRawTag(229, 1);
        output.WriteFloat(CurrentEffectiveApm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIdleProductionTime) {
        size += 1 + 4;
      }
      if (HasIdleWorkerTime) {
        size += 1 + 4;
      }
      if (HasTotalValueUnits) {
        size += 1 + 4;
      }
      if (HasTotalValueStructures) {
        size += 1 + 4;
      }
      if (HasKilledValueUnits) {
        size += 1 + 4;
      }
      if (HasKilledValueStructures) {
        size += 1 + 4;
      }
      if (HasCollectedMinerals) {
        size += 1 + 4;
      }
      if (HasCollectedVespene) {
        size += 1 + 4;
      }
      if (HasCollectionRateMinerals) {
        size += 1 + 4;
      }
      if (HasCollectionRateVespene) {
        size += 1 + 4;
      }
      if (HasSpentMinerals) {
        size += 1 + 4;
      }
      if (HasSpentVespene) {
        size += 1 + 4;
      }
      if (foodUsed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FoodUsed);
      }
      if (killedMinerals_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KilledMinerals);
      }
      if (killedVespene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KilledVespene);
      }
      if (lostMinerals_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LostMinerals);
      }
      if (lostVespene_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LostVespene);
      }
      if (friendlyFireMinerals_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendlyFireMinerals);
      }
      if (friendlyFireVespene_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendlyFireVespene);
      }
      if (usedMinerals_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UsedMinerals);
      }
      if (usedVespene_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UsedVespene);
      }
      if (totalUsedMinerals_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalUsedMinerals);
      }
      if (totalUsedVespene_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalUsedVespene);
      }
      if (totalDamageDealt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalDamageDealt);
      }
      if (totalDamageTaken_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalDamageTaken);
      }
      if (totalHealed_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalHealed);
      }
      if (HasCurrentApm) {
        size += 2 + 4;
      }
      if (HasCurrentEffectiveApm) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScoreDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasIdleProductionTime) {
        IdleProductionTime = other.IdleProductionTime;
      }
      if (other.HasIdleWorkerTime) {
        IdleWorkerTime = other.IdleWorkerTime;
      }
      if (other.HasTotalValueUnits) {
        TotalValueUnits = other.TotalValueUnits;
      }
      if (other.HasTotalValueStructures) {
        TotalValueStructures = other.TotalValueStructures;
      }
      if (other.HasKilledValueUnits) {
        KilledValueUnits = other.KilledValueUnits;
      }
      if (other.HasKilledValueStructures) {
        KilledValueStructures = other.KilledValueStructures;
      }
      if (other.HasCollectedMinerals) {
        CollectedMinerals = other.CollectedMinerals;
      }
      if (other.HasCollectedVespene) {
        CollectedVespene = other.CollectedVespene;
      }
      if (other.HasCollectionRateMinerals) {
        CollectionRateMinerals = other.CollectionRateMinerals;
      }
      if (other.HasCollectionRateVespene) {
        CollectionRateVespene = other.CollectionRateVespene;
      }
      if (other.HasSpentMinerals) {
        SpentMinerals = other.SpentMinerals;
      }
      if (other.HasSpentVespene) {
        SpentVespene = other.SpentVespene;
      }
      if (other.foodUsed_ != null) {
        if (foodUsed_ == null) {
          FoodUsed = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        FoodUsed.MergeFrom(other.FoodUsed);
      }
      if (other.killedMinerals_ != null) {
        if (killedMinerals_ == null) {
          KilledMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        KilledMinerals.MergeFrom(other.KilledMinerals);
      }
      if (other.killedVespene_ != null) {
        if (killedVespene_ == null) {
          KilledVespene = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        KilledVespene.MergeFrom(other.KilledVespene);
      }
      if (other.lostMinerals_ != null) {
        if (lostMinerals_ == null) {
          LostMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        LostMinerals.MergeFrom(other.LostMinerals);
      }
      if (other.lostVespene_ != null) {
        if (lostVespene_ == null) {
          LostVespene = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        LostVespene.MergeFrom(other.LostVespene);
      }
      if (other.friendlyFireMinerals_ != null) {
        if (friendlyFireMinerals_ == null) {
          FriendlyFireMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        FriendlyFireMinerals.MergeFrom(other.FriendlyFireMinerals);
      }
      if (other.friendlyFireVespene_ != null) {
        if (friendlyFireVespene_ == null) {
          FriendlyFireVespene = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        FriendlyFireVespene.MergeFrom(other.FriendlyFireVespene);
      }
      if (other.usedMinerals_ != null) {
        if (usedMinerals_ == null) {
          UsedMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        UsedMinerals.MergeFrom(other.UsedMinerals);
      }
      if (other.usedVespene_ != null) {
        if (usedVespene_ == null) {
          UsedVespene = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        UsedVespene.MergeFrom(other.UsedVespene);
      }
      if (other.totalUsedMinerals_ != null) {
        if (totalUsedMinerals_ == null) {
          TotalUsedMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        TotalUsedMinerals.MergeFrom(other.TotalUsedMinerals);
      }
      if (other.totalUsedVespene_ != null) {
        if (totalUsedVespene_ == null) {
          TotalUsedVespene = new global::SC2APIProtocol.CategoryScoreDetails();
        }
        TotalUsedVespene.MergeFrom(other.TotalUsedVespene);
      }
      if (other.totalDamageDealt_ != null) {
        if (totalDamageDealt_ == null) {
          TotalDamageDealt = new global::SC2APIProtocol.VitalScoreDetails();
        }
        TotalDamageDealt.MergeFrom(other.TotalDamageDealt);
      }
      if (other.totalDamageTaken_ != null) {
        if (totalDamageTaken_ == null) {
          TotalDamageTaken = new global::SC2APIProtocol.VitalScoreDetails();
        }
        TotalDamageTaken.MergeFrom(other.TotalDamageTaken);
      }
      if (other.totalHealed_ != null) {
        if (totalHealed_ == null) {
          TotalHealed = new global::SC2APIProtocol.VitalScoreDetails();
        }
        TotalHealed.MergeFrom(other.TotalHealed);
      }
      if (other.HasCurrentApm) {
        CurrentApm = other.CurrentApm;
      }
      if (other.HasCurrentEffectiveApm) {
        CurrentEffectiveApm = other.CurrentEffectiveApm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            IdleProductionTime = input.ReadFloat();
            break;
          }
          case 21: {
            IdleWorkerTime = input.ReadFloat();
            break;
          }
          case 29: {
            TotalValueUnits = input.ReadFloat();
            break;
          }
          case 37: {
            TotalValueStructures = input.ReadFloat();
            break;
          }
          case 45: {
            KilledValueUnits = input.ReadFloat();
            break;
          }
          case 53: {
            KilledValueStructures = input.ReadFloat();
            break;
          }
          case 61: {
            CollectedMinerals = input.ReadFloat();
            break;
          }
          case 69: {
            CollectedVespene = input.ReadFloat();
            break;
          }
          case 77: {
            CollectionRateMinerals = input.ReadFloat();
            break;
          }
          case 85: {
            CollectionRateVespene = input.ReadFloat();
            break;
          }
          case 93: {
            SpentMinerals = input.ReadFloat();
            break;
          }
          case 101: {
            SpentVespene = input.ReadFloat();
            break;
          }
          case 106: {
            if (foodUsed_ == null) {
              FoodUsed = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(FoodUsed);
            break;
          }
          case 114: {
            if (killedMinerals_ == null) {
              KilledMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(KilledMinerals);
            break;
          }
          case 122: {
            if (killedVespene_ == null) {
              KilledVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(KilledVespene);
            break;
          }
          case 130: {
            if (lostMinerals_ == null) {
              LostMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(LostMinerals);
            break;
          }
          case 138: {
            if (lostVespene_ == null) {
              LostVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(LostVespene);
            break;
          }
          case 146: {
            if (friendlyFireMinerals_ == null) {
              FriendlyFireMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(FriendlyFireMinerals);
            break;
          }
          case 154: {
            if (friendlyFireVespene_ == null) {
              FriendlyFireVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(FriendlyFireVespene);
            break;
          }
          case 162: {
            if (usedMinerals_ == null) {
              UsedMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(UsedMinerals);
            break;
          }
          case 170: {
            if (usedVespene_ == null) {
              UsedVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(UsedVespene);
            break;
          }
          case 178: {
            if (totalUsedMinerals_ == null) {
              TotalUsedMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(TotalUsedMinerals);
            break;
          }
          case 186: {
            if (totalUsedVespene_ == null) {
              TotalUsedVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(TotalUsedVespene);
            break;
          }
          case 194: {
            if (totalDamageDealt_ == null) {
              TotalDamageDealt = new global::SC2APIProtocol.VitalScoreDetails();
            }
            input.ReadMessage(TotalDamageDealt);
            break;
          }
          case 202: {
            if (totalDamageTaken_ == null) {
              TotalDamageTaken = new global::SC2APIProtocol.VitalScoreDetails();
            }
            input.ReadMessage(TotalDamageTaken);
            break;
          }
          case 210: {
            if (totalHealed_ == null) {
              TotalHealed = new global::SC2APIProtocol.VitalScoreDetails();
            }
            input.ReadMessage(TotalHealed);
            break;
          }
          case 221: {
            CurrentApm = input.ReadFloat();
            break;
          }
          case 229: {
            CurrentEffectiveApm = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            IdleProductionTime = input.ReadFloat();
            break;
          }
          case 21: {
            IdleWorkerTime = input.ReadFloat();
            break;
          }
          case 29: {
            TotalValueUnits = input.ReadFloat();
            break;
          }
          case 37: {
            TotalValueStructures = input.ReadFloat();
            break;
          }
          case 45: {
            KilledValueUnits = input.ReadFloat();
            break;
          }
          case 53: {
            KilledValueStructures = input.ReadFloat();
            break;
          }
          case 61: {
            CollectedMinerals = input.ReadFloat();
            break;
          }
          case 69: {
            CollectedVespene = input.ReadFloat();
            break;
          }
          case 77: {
            CollectionRateMinerals = input.ReadFloat();
            break;
          }
          case 85: {
            CollectionRateVespene = input.ReadFloat();
            break;
          }
          case 93: {
            SpentMinerals = input.ReadFloat();
            break;
          }
          case 101: {
            SpentVespene = input.ReadFloat();
            break;
          }
          case 106: {
            if (foodUsed_ == null) {
              FoodUsed = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(FoodUsed);
            break;
          }
          case 114: {
            if (killedMinerals_ == null) {
              KilledMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(KilledMinerals);
            break;
          }
          case 122: {
            if (killedVespene_ == null) {
              KilledVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(KilledVespene);
            break;
          }
          case 130: {
            if (lostMinerals_ == null) {
              LostMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(LostMinerals);
            break;
          }
          case 138: {
            if (lostVespene_ == null) {
              LostVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(LostVespene);
            break;
          }
          case 146: {
            if (friendlyFireMinerals_ == null) {
              FriendlyFireMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(FriendlyFireMinerals);
            break;
          }
          case 154: {
            if (friendlyFireVespene_ == null) {
              FriendlyFireVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(FriendlyFireVespene);
            break;
          }
          case 162: {
            if (usedMinerals_ == null) {
              UsedMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(UsedMinerals);
            break;
          }
          case 170: {
            if (usedVespene_ == null) {
              UsedVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(UsedVespene);
            break;
          }
          case 178: {
            if (totalUsedMinerals_ == null) {
              TotalUsedMinerals = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(TotalUsedMinerals);
            break;
          }
          case 186: {
            if (totalUsedVespene_ == null) {
              TotalUsedVespene = new global::SC2APIProtocol.CategoryScoreDetails();
            }
            input.ReadMessage(TotalUsedVespene);
            break;
          }
          case 194: {
            if (totalDamageDealt_ == null) {
              TotalDamageDealt = new global::SC2APIProtocol.VitalScoreDetails();
            }
            input.ReadMessage(TotalDamageDealt);
            break;
          }
          case 202: {
            if (totalDamageTaken_ == null) {
              TotalDamageTaken = new global::SC2APIProtocol.VitalScoreDetails();
            }
            input.ReadMessage(TotalDamageTaken);
            break;
          }
          case 210: {
            if (totalHealed_ == null) {
              TotalHealed = new global::SC2APIProtocol.VitalScoreDetails();
            }
            input.ReadMessage(TotalHealed);
            break;
          }
          case 221: {
            CurrentApm = input.ReadFloat();
            break;
          }
          case 229: {
            CurrentEffectiveApm = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
