// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: s2clientprotocol/raw.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SC2APIProtocol {

  /// <summary>Holder for reflection information generated from s2clientprotocol/raw.proto</summary>
  public static partial class RawReflection {

    #region Descriptor
    /// <summary>File descriptor for s2clientprotocol/raw.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RawReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpzMmNsaWVudHByb3RvY29sL3Jhdy5wcm90bxIOU0MyQVBJUHJvdG9jb2wa",
            "HXMyY2xpZW50cHJvdG9jb2wvY29tbW9uLnByb3RvIrECCghTdGFydFJhdxIp",
            "CghtYXBfc2l6ZRgBIAEoCzIXLlNDMkFQSVByb3RvY29sLlNpemUyREkSLwoM",
            "cGF0aGluZ19ncmlkGAIgASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1hZ2VEYXRh",
            "EjEKDnRlcnJhaW5faGVpZ2h0GAMgASgLMhkuU0MyQVBJUHJvdG9jb2wuSW1h",
            "Z2VEYXRhEjEKDnBsYWNlbWVudF9ncmlkGAQgASgLMhkuU0MyQVBJUHJvdG9j",
            "b2wuSW1hZ2VEYXRhEjEKDXBsYXlhYmxlX2FyZWEYBSABKAsyGi5TQzJBUElQ",
            "cm90b2NvbC5SZWN0YW5nbGVJEjAKD3N0YXJ0X2xvY2F0aW9ucxgGIAMoCzIX",
            "LlNDMkFQSVByb3RvY29sLlBvaW50MkQihgIKDk9ic2VydmF0aW9uUmF3EikK",
            "BnBsYXllchgBIAEoCzIZLlNDMkFQSVByb3RvY29sLlBsYXllclJhdxIjCgV1",
            "bml0cxgCIAMoCzIULlNDMkFQSVByb3RvY29sLlVuaXQSKwoJbWFwX3N0YXRl",
            "GAMgASgLMhguU0MyQVBJUHJvdG9jb2wuTWFwU3RhdGUSJAoFZXZlbnQYBCAB",
            "KAsyFS5TQzJBUElQcm90b2NvbC5FdmVudBInCgdlZmZlY3RzGAUgAygLMhYu",
            "U0MyQVBJUHJvdG9jb2wuRWZmZWN0EigKBXJhZGFyGAYgAygLMhkuU0MyQVBJ",
            "UHJvdG9jb2wuUmFkYXJSaW5nIj8KCVJhZGFyUmluZxIiCgNwb3MYASABKAsy",
            "FS5TQzJBUElQcm90b2NvbC5Qb2ludBIOCgZyYWRpdXMYAiABKAIiTgoLUG93",
            "ZXJTb3VyY2USIgoDcG9zGAEgASgLMhUuU0MyQVBJUHJvdG9jb2wuUG9pbnQS",
            "DgoGcmFkaXVzGAIgASgCEgsKA3RhZxgDIAEoBCJ7CglQbGF5ZXJSYXcSMgoN",
            "cG93ZXJfc291cmNlcxgBIAMoCzIbLlNDMkFQSVByb3RvY29sLlBvd2VyU291",
            "cmNlEiUKBmNhbWVyYRgCIAEoCzIVLlNDMkFQSVByb3RvY29sLlBvaW50EhMK",
            "C3VwZ3JhZGVfaWRzGAMgAygNIo8BCglVbml0T3JkZXISEgoKYWJpbGl0eV9p",
            "ZBgBIAEoDRI3ChZ0YXJnZXRfd29ybGRfc3BhY2VfcG9zGAIgASgLMhUuU0My",
            "QVBJUHJvdG9jb2wuUG9pbnRIABIZCg90YXJnZXRfdW5pdF90YWcYAyABKARI",
            "ABIQCghwcm9ncmVzcxgEIAEoAkIICgZ0YXJnZXQimwEKDVBhc3NlbmdlclVu",
            "aXQSCwoDdGFnGAEgASgEEg4KBmhlYWx0aBgCIAEoAhISCgpoZWFsdGhfbWF4",
            "GAMgASgCEg4KBnNoaWVsZBgEIAEoAhISCgpzaGllbGRfbWF4GAcgASgCEg4K",
            "BmVuZXJneRgFIAEoAhISCgplbmVyZ3lfbWF4GAggASgCEhEKCXVuaXRfdHlw",
            "ZRgGIAEoDSJACgtSYWxseVRhcmdldBIkCgVwb2ludBgBIAEoCzIVLlNDMkFQ",
            "SVByb3RvY29sLlBvaW50EgsKA3RhZxgCIAEoBCL1CAoEVW5pdBIxCgxkaXNw",
            "bGF5X3R5cGUYASABKA4yGy5TQzJBUElQcm90b2NvbC5EaXNwbGF5VHlwZRIq",
            "CghhbGxpYW5jZRgCIAEoDjIYLlNDMkFQSVByb3RvY29sLkFsbGlhbmNlEgsK",
            "A3RhZxgDIAEoBBIRCgl1bml0X3R5cGUYBCABKA0SDQoFb3duZXIYBSABKAUS",
            "IgoDcG9zGAYgASgLMhUuU0MyQVBJUHJvdG9jb2wuUG9pbnQSDgoGZmFjaW5n",
            "GAcgASgCEg4KBnJhZGl1cxgIIAEoAhIWCg5idWlsZF9wcm9ncmVzcxgJIAEo",
            "AhIpCgVjbG9haxgKIAEoDjIaLlNDMkFQSVByb3RvY29sLkNsb2FrU3RhdGUS",
            "EAoIYnVmZl9pZHMYGyADKA0SFAoMZGV0ZWN0X3JhbmdlGB8gASgCEhMKC3Jh",
            "ZGFyX3JhbmdlGCAgASgCEhMKC2lzX3NlbGVjdGVkGAsgASgIEhQKDGlzX29u",
            "X3NjcmVlbhgMIAEoCBIPCgdpc19ibGlwGA0gASgIEhIKCmlzX3Bvd2VyZWQY",
            "IyABKAgSEQoJaXNfYWN0aXZlGCcgASgIEhwKFGF0dGFja191cGdyYWRlX2xl",
            "dmVsGCggASgFEhsKE2FybW9yX3VwZ3JhZGVfbGV2ZWwYKSABKAUSHAoUc2hp",
            "ZWxkX3VwZ3JhZGVfbGV2ZWwYKiABKAUSDgoGaGVhbHRoGA4gASgCEhIKCmhl",
            "YWx0aF9tYXgYDyABKAISDgoGc2hpZWxkGBAgASgCEhIKCnNoaWVsZF9tYXgY",
            "JCABKAISDgoGZW5lcmd5GBEgASgCEhIKCmVuZXJneV9tYXgYJSABKAISGAoQ",
            "bWluZXJhbF9jb250ZW50cxgSIAEoBRIYChB2ZXNwZW5lX2NvbnRlbnRzGBMg",
            "ASgFEhEKCWlzX2ZseWluZxgUIAEoCBITCgtpc19idXJyb3dlZBgVIAEoCBIY",
            "ChBpc19oYWxsdWNpbmF0aW9uGCYgASgIEikKBm9yZGVycxgWIAMoCzIZLlND",
            "MkFQSVByb3RvY29sLlVuaXRPcmRlchISCgphZGRfb25fdGFnGBcgASgEEjEK",
            "CnBhc3NlbmdlcnMYGCADKAsyHS5TQzJBUElQcm90b2NvbC5QYXNzZW5nZXJV",
            "bml0EhkKEWNhcmdvX3NwYWNlX3Rha2VuGBkgASgFEhcKD2NhcmdvX3NwYWNl",
            "X21heBgaIAEoBRIbChNhc3NpZ25lZF9oYXJ2ZXN0ZXJzGBwgASgFEhgKEGlk",
            "ZWFsX2hhcnZlc3RlcnMYHSABKAUSFwoPd2VhcG9uX2Nvb2xkb3duGB4gASgC",
            "EhoKEmVuZ2FnZWRfdGFyZ2V0X3RhZxgiIAEoBBIcChRidWZmX2R1cmF0aW9u",
            "X3JlbWFpbhgrIAEoBRIZChFidWZmX2R1cmF0aW9uX21heBgsIAEoBRIyCg1y",
            "YWxseV90YXJnZXRzGC0gAygLMhsuU0MyQVBJUHJvdG9jb2wuUmFsbHlUYXJn",
            "ZXQiYwoITWFwU3RhdGUSLQoKdmlzaWJpbGl0eRgBIAEoCzIZLlNDMkFQSVBy",
            "b3RvY29sLkltYWdlRGF0YRIoCgVjcmVlcBgCIAEoCzIZLlNDMkFQSVByb3Rv",
            "Y29sLkltYWdlRGF0YSIbCgVFdmVudBISCgpkZWFkX3VuaXRzGAEgAygEIowB",
            "CgZFZmZlY3QSEQoJZWZmZWN0X2lkGAEgASgNEiQKA3BvcxgCIAMoCzIXLlND",
            "MkFQSVByb3RvY29sLlBvaW50MkQSKgoIYWxsaWFuY2UYAyABKA4yGC5TQzJB",
            "UElQcm90b2NvbC5BbGxpYW5jZRINCgVvd25lchgEIAEoBRIOCgZyYWRpdXMY",
            "BSABKAIi0wEKCUFjdGlvblJhdxI8Cgx1bml0X2NvbW1hbmQYASABKAsyJC5T",
            "QzJBUElQcm90b2NvbC5BY3Rpb25SYXdVbml0Q29tbWFuZEgAEjoKC2NhbWVy",
            "YV9tb3ZlGAIgASgLMiMuU0MyQVBJUHJvdG9jb2wuQWN0aW9uUmF3Q2FtZXJh",
            "TW92ZUgAEkIKD3RvZ2dsZV9hdXRvY2FzdBgDIAEoCzInLlNDMkFQSVByb3Rv",
            "Y29sLkFjdGlvblJhd1RvZ2dsZUF1dG9jYXN0SABCCAoGYWN0aW9uIrQBChRB",
            "Y3Rpb25SYXdVbml0Q29tbWFuZBISCgphYmlsaXR5X2lkGAEgASgFEjkKFnRh",
            "cmdldF93b3JsZF9zcGFjZV9wb3MYAiABKAsyFy5TQzJBUElQcm90b2NvbC5Q",
            "b2ludDJESAASGQoPdGFyZ2V0X3VuaXRfdGFnGAMgASgESAASEQoJdW5pdF90",
            "YWdzGAQgAygEEhUKDXF1ZXVlX2NvbW1hbmQYBSABKAhCCAoGdGFyZ2V0IkgK",
            "E0FjdGlvblJhd0NhbWVyYU1vdmUSMQoSY2VudGVyX3dvcmxkX3NwYWNlGAEg",
            "ASgLMhUuU0MyQVBJUHJvdG9jb2wuUG9pbnQiQAoXQWN0aW9uUmF3VG9nZ2xl",
            "QXV0b2Nhc3QSEgoKYWJpbGl0eV9pZBgBIAEoBRIRCgl1bml0X3RhZ3MYAiAD",
            "KAQqRQoLRGlzcGxheVR5cGUSCwoHVmlzaWJsZRABEgwKCFNuYXBzaG90EAIS",
            "CgoGSGlkZGVuEAMSDwoLUGxhY2Vob2xkZXIQBCo2CghBbGxpYW5jZRIICgRT",
            "ZWxmEAESCAoEQWxseRACEgsKB05ldXRyYWwQAxIJCgVFbmVteRAEKmUKCkNs",
            "b2FrU3RhdGUSEgoOQ2xvYWtlZFVua25vd24QABILCgdDbG9ha2VkEAESEwoP",
            "Q2xvYWtlZERldGVjdGVkEAISDgoKTm90Q2xvYWtlZBADEhEKDUNsb2FrZWRB",
            "bGxpZWQQBA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SC2APIProtocol.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SC2APIProtocol.DisplayType), typeof(global::SC2APIProtocol.Alliance), typeof(global::SC2APIProtocol.CloakState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.StartRaw), global::SC2APIProtocol.StartRaw.Parser, new[]{ "MapSize", "PathingGrid", "TerrainHeight", "PlacementGrid", "PlayableArea", "StartLocations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ObservationRaw), global::SC2APIProtocol.ObservationRaw.Parser, new[]{ "Player", "Units", "MapState", "Event", "Effects", "Radar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.RadarRing), global::SC2APIProtocol.RadarRing.Parser, new[]{ "Pos", "Radius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.PowerSource), global::SC2APIProtocol.PowerSource.Parser, new[]{ "Pos", "Radius", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.PlayerRaw), global::SC2APIProtocol.PlayerRaw.Parser, new[]{ "PowerSources", "Camera", "UpgradeIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.UnitOrder), global::SC2APIProtocol.UnitOrder.Parser, new[]{ "AbilityId", "TargetWorldSpacePos", "TargetUnitTag", "Progress" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.PassengerUnit), global::SC2APIProtocol.PassengerUnit.Parser, new[]{ "Tag", "Health", "HealthMax", "Shield", "ShieldMax", "Energy", "EnergyMax", "UnitType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.RallyTarget), global::SC2APIProtocol.RallyTarget.Parser, new[]{ "Point", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.Unit), global::SC2APIProtocol.Unit.Parser, new[]{ "DisplayType", "Alliance", "Tag", "UnitType", "Owner", "Pos", "Facing", "Radius", "BuildProgress", "Cloak", "BuffIds", "DetectRange", "RadarRange", "IsSelected", "IsOnScreen", "IsBlip", "IsPowered", "IsActive", "AttackUpgradeLevel", "ArmorUpgradeLevel", "ShieldUpgradeLevel", "Health", "HealthMax", "Shield", "ShieldMax", "Energy", "EnergyMax", "MineralContents", "VespeneContents", "IsFlying", "IsBurrowed", "IsHallucination", "Orders", "AddOnTag", "Passengers", "CargoSpaceTaken", "CargoSpaceMax", "AssignedHarvesters", "IdealHarvesters", "WeaponCooldown", "EngagedTargetTag", "BuffDurationRemain", "BuffDurationMax", "RallyTargets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.MapState), global::SC2APIProtocol.MapState.Parser, new[]{ "Visibility", "Creep" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.Event), global::SC2APIProtocol.Event.Parser, new[]{ "DeadUnits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.Effect), global::SC2APIProtocol.Effect.Parser, new[]{ "EffectId", "Pos", "Alliance", "Owner", "Radius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionRaw), global::SC2APIProtocol.ActionRaw.Parser, new[]{ "UnitCommand", "CameraMove", "ToggleAutocast" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionRawUnitCommand), global::SC2APIProtocol.ActionRawUnitCommand.Parser, new[]{ "AbilityId", "TargetWorldSpacePos", "TargetUnitTag", "UnitTags", "QueueCommand" }, new[]{ "Target" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionRawCameraMove), global::SC2APIProtocol.ActionRawCameraMove.Parser, new[]{ "CenterWorldSpace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SC2APIProtocol.ActionRawToggleAutocast), global::SC2APIProtocol.ActionRawToggleAutocast.Parser, new[]{ "AbilityId", "UnitTags" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum DisplayType {
    /// <summary>
    /// Fully visible
    /// </summary>
    [pbr::OriginalName("Visible")] Visible = 1,
    /// <summary>
    /// Dimmed version of unit left behind after entering fog of war
    /// </summary>
    [pbr::OriginalName("Snapshot")] Snapshot = 2,
    /// <summary>
    /// Fully hidden
    /// </summary>
    [pbr::OriginalName("Hidden")] Hidden = 3,
    /// <summary>
    /// Building that hasn't started construction.
    /// </summary>
    [pbr::OriginalName("Placeholder")] Placeholder = 4,
  }

  public enum Alliance {
    [pbr::OriginalName("Self")] Self = 1,
    [pbr::OriginalName("Ally")] Ally = 2,
    [pbr::OriginalName("Neutral")] Neutral = 3,
    [pbr::OriginalName("Enemy")] Enemy = 4,
  }

  public enum CloakState {
    /// <summary>
    /// Under the fog, so unknown whether it's cloaked or not.
    /// </summary>
    [pbr::OriginalName("CloakedUnknown")] CloakedUnknown = 0,
    [pbr::OriginalName("Cloaked")] Cloaked = 1,
    [pbr::OriginalName("CloakedDetected")] CloakedDetected = 2,
    [pbr::OriginalName("NotCloaked")] NotCloaked = 3,
    [pbr::OriginalName("CloakedAllied")] CloakedAllied = 4,
  }

  #endregion

  #region Messages
  public sealed partial class StartRaw : pb::IMessage<StartRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartRaw> _parser = new pb::MessageParser<StartRaw>(() => new StartRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartRaw(StartRaw other) : this() {
      mapSize_ = other.mapSize_ != null ? other.mapSize_.Clone() : null;
      pathingGrid_ = other.pathingGrid_ != null ? other.pathingGrid_.Clone() : null;
      terrainHeight_ = other.terrainHeight_ != null ? other.terrainHeight_.Clone() : null;
      placementGrid_ = other.placementGrid_ != null ? other.placementGrid_.Clone() : null;
      playableArea_ = other.playableArea_ != null ? other.playableArea_.Clone() : null;
      startLocations_ = other.startLocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartRaw Clone() {
      return new StartRaw(this);
    }

    /// <summary>Field number for the "map_size" field.</summary>
    public const int MapSizeFieldNumber = 1;
    private global::SC2APIProtocol.Size2DI mapSize_;
    /// <summary>
    /// Width and height of the map.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Size2DI MapSize {
      get { return mapSize_; }
      set {
        mapSize_ = value;
      }
    }

    /// <summary>Field number for the "pathing_grid" field.</summary>
    public const int PathingGridFieldNumber = 2;
    private global::SC2APIProtocol.ImageData pathingGrid_;
    /// <summary>
    /// 1 bit bitmap of the pathing grid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData PathingGrid {
      get { return pathingGrid_; }
      set {
        pathingGrid_ = value;
      }
    }

    /// <summary>Field number for the "terrain_height" field.</summary>
    public const int TerrainHeightFieldNumber = 3;
    private global::SC2APIProtocol.ImageData terrainHeight_;
    /// <summary>
    /// 1 byte bitmap of the terrain height.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData TerrainHeight {
      get { return terrainHeight_; }
      set {
        terrainHeight_ = value;
      }
    }

    /// <summary>Field number for the "placement_grid" field.</summary>
    public const int PlacementGridFieldNumber = 4;
    private global::SC2APIProtocol.ImageData placementGrid_;
    /// <summary>
    /// 1 bit bitmap of the building placement grid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData PlacementGrid {
      get { return placementGrid_; }
      set {
        placementGrid_ = value;
      }
    }

    /// <summary>Field number for the "playable_area" field.</summary>
    public const int PlayableAreaFieldNumber = 5;
    private global::SC2APIProtocol.RectangleI playableArea_;
    /// <summary>
    /// The playable cells.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.RectangleI PlayableArea {
      get { return playableArea_; }
      set {
        playableArea_ = value;
      }
    }

    /// <summary>Field number for the "start_locations" field.</summary>
    public const int StartLocationsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.Point2D> _repeated_startLocations_codec
        = pb::FieldCodec.ForMessage(50, global::SC2APIProtocol.Point2D.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.Point2D> startLocations_ = new pbc::RepeatedField<global::SC2APIProtocol.Point2D>();
    /// <summary>
    /// Possible start locations for players.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.Point2D> StartLocations {
      get { return startLocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MapSize, other.MapSize)) return false;
      if (!object.Equals(PathingGrid, other.PathingGrid)) return false;
      if (!object.Equals(TerrainHeight, other.TerrainHeight)) return false;
      if (!object.Equals(PlacementGrid, other.PlacementGrid)) return false;
      if (!object.Equals(PlayableArea, other.PlayableArea)) return false;
      if(!startLocations_.Equals(other.startLocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (mapSize_ != null) hash ^= MapSize.GetHashCode();
      if (pathingGrid_ != null) hash ^= PathingGrid.GetHashCode();
      if (terrainHeight_ != null) hash ^= TerrainHeight.GetHashCode();
      if (placementGrid_ != null) hash ^= PlacementGrid.GetHashCode();
      if (playableArea_ != null) hash ^= PlayableArea.GetHashCode();
      hash ^= startLocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mapSize_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MapSize);
      }
      if (pathingGrid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PathingGrid);
      }
      if (terrainHeight_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TerrainHeight);
      }
      if (placementGrid_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlacementGrid);
      }
      if (playableArea_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayableArea);
      }
      startLocations_.WriteTo(output, _repeated_startLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mapSize_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MapSize);
      }
      if (pathingGrid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PathingGrid);
      }
      if (terrainHeight_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TerrainHeight);
      }
      if (placementGrid_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlacementGrid);
      }
      if (playableArea_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayableArea);
      }
      startLocations_.WriteTo(ref output, _repeated_startLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (mapSize_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapSize);
      }
      if (pathingGrid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PathingGrid);
      }
      if (terrainHeight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TerrainHeight);
      }
      if (placementGrid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlacementGrid);
      }
      if (playableArea_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayableArea);
      }
      size += startLocations_.CalculateSize(_repeated_startLocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartRaw other) {
      if (other == null) {
        return;
      }
      if (other.mapSize_ != null) {
        if (mapSize_ == null) {
          MapSize = new global::SC2APIProtocol.Size2DI();
        }
        MapSize.MergeFrom(other.MapSize);
      }
      if (other.pathingGrid_ != null) {
        if (pathingGrid_ == null) {
          PathingGrid = new global::SC2APIProtocol.ImageData();
        }
        PathingGrid.MergeFrom(other.PathingGrid);
      }
      if (other.terrainHeight_ != null) {
        if (terrainHeight_ == null) {
          TerrainHeight = new global::SC2APIProtocol.ImageData();
        }
        TerrainHeight.MergeFrom(other.TerrainHeight);
      }
      if (other.placementGrid_ != null) {
        if (placementGrid_ == null) {
          PlacementGrid = new global::SC2APIProtocol.ImageData();
        }
        PlacementGrid.MergeFrom(other.PlacementGrid);
      }
      if (other.playableArea_ != null) {
        if (playableArea_ == null) {
          PlayableArea = new global::SC2APIProtocol.RectangleI();
        }
        PlayableArea.MergeFrom(other.PlayableArea);
      }
      startLocations_.Add(other.startLocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mapSize_ == null) {
              MapSize = new global::SC2APIProtocol.Size2DI();
            }
            input.ReadMessage(MapSize);
            break;
          }
          case 18: {
            if (pathingGrid_ == null) {
              PathingGrid = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PathingGrid);
            break;
          }
          case 26: {
            if (terrainHeight_ == null) {
              TerrainHeight = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(TerrainHeight);
            break;
          }
          case 34: {
            if (placementGrid_ == null) {
              PlacementGrid = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlacementGrid);
            break;
          }
          case 42: {
            if (playableArea_ == null) {
              PlayableArea = new global::SC2APIProtocol.RectangleI();
            }
            input.ReadMessage(PlayableArea);
            break;
          }
          case 50: {
            startLocations_.AddEntriesFrom(input, _repeated_startLocations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mapSize_ == null) {
              MapSize = new global::SC2APIProtocol.Size2DI();
            }
            input.ReadMessage(MapSize);
            break;
          }
          case 18: {
            if (pathingGrid_ == null) {
              PathingGrid = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PathingGrid);
            break;
          }
          case 26: {
            if (terrainHeight_ == null) {
              TerrainHeight = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(TerrainHeight);
            break;
          }
          case 34: {
            if (placementGrid_ == null) {
              PlacementGrid = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(PlacementGrid);
            break;
          }
          case 42: {
            if (playableArea_ == null) {
              PlayableArea = new global::SC2APIProtocol.RectangleI();
            }
            input.ReadMessage(PlayableArea);
            break;
          }
          case 50: {
            startLocations_.AddEntriesFrom(ref input, _repeated_startLocations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObservationRaw : pb::IMessage<ObservationRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObservationRaw> _parser = new pb::MessageParser<ObservationRaw>(() => new ObservationRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObservationRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationRaw(ObservationRaw other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      units_ = other.units_.Clone();
      mapState_ = other.mapState_ != null ? other.mapState_.Clone() : null;
      event_ = other.event_ != null ? other.event_.Clone() : null;
      effects_ = other.effects_.Clone();
      radar_ = other.radar_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObservationRaw Clone() {
      return new ObservationRaw(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::SC2APIProtocol.PlayerRaw player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.PlayerRaw Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.Unit> _repeated_units_codec
        = pb::FieldCodec.ForMessage(18, global::SC2APIProtocol.Unit.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.Unit> units_ = new pbc::RepeatedField<global::SC2APIProtocol.Unit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.Unit> Units {
      get { return units_; }
    }

    /// <summary>Field number for the "map_state" field.</summary>
    public const int MapStateFieldNumber = 3;
    private global::SC2APIProtocol.MapState mapState_;
    /// <summary>
    /// Fog of war, creep and so on. Board stuff that changes per frame.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.MapState MapState {
      get { return mapState_; }
      set {
        mapState_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 4;
    private global::SC2APIProtocol.Event event_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Event Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "effects" field.</summary>
    public const int EffectsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.Effect> _repeated_effects_codec
        = pb::FieldCodec.ForMessage(42, global::SC2APIProtocol.Effect.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.Effect> effects_ = new pbc::RepeatedField<global::SC2APIProtocol.Effect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.Effect> Effects {
      get { return effects_; }
    }

    /// <summary>Field number for the "radar" field.</summary>
    public const int RadarFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.RadarRing> _repeated_radar_codec
        = pb::FieldCodec.ForMessage(50, global::SC2APIProtocol.RadarRing.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.RadarRing> radar_ = new pbc::RepeatedField<global::SC2APIProtocol.RadarRing>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.RadarRing> Radar {
      get { return radar_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObservationRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObservationRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if(!units_.Equals(other.units_)) return false;
      if (!object.Equals(MapState, other.MapState)) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if(!effects_.Equals(other.effects_)) return false;
      if(!radar_.Equals(other.radar_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      hash ^= units_.GetHashCode();
      if (mapState_ != null) hash ^= MapState.GetHashCode();
      if (event_ != null) hash ^= Event.GetHashCode();
      hash ^= effects_.GetHashCode();
      hash ^= radar_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      units_.WriteTo(output, _repeated_units_codec);
      if (mapState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MapState);
      }
      if (event_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Event);
      }
      effects_.WriteTo(output, _repeated_effects_codec);
      radar_.WriteTo(output, _repeated_radar_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      units_.WriteTo(ref output, _repeated_units_codec);
      if (mapState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MapState);
      }
      if (event_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Event);
      }
      effects_.WriteTo(ref output, _repeated_effects_codec);
      radar_.WriteTo(ref output, _repeated_radar_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      size += units_.CalculateSize(_repeated_units_codec);
      if (mapState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapState);
      }
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      size += effects_.CalculateSize(_repeated_effects_codec);
      size += radar_.CalculateSize(_repeated_radar_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObservationRaw other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::SC2APIProtocol.PlayerRaw();
        }
        Player.MergeFrom(other.Player);
      }
      units_.Add(other.units_);
      if (other.mapState_ != null) {
        if (mapState_ == null) {
          MapState = new global::SC2APIProtocol.MapState();
        }
        MapState.MergeFrom(other.MapState);
      }
      if (other.event_ != null) {
        if (event_ == null) {
          Event = new global::SC2APIProtocol.Event();
        }
        Event.MergeFrom(other.Event);
      }
      effects_.Add(other.effects_);
      radar_.Add(other.radar_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::SC2APIProtocol.PlayerRaw();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            units_.AddEntriesFrom(input, _repeated_units_codec);
            break;
          }
          case 26: {
            if (mapState_ == null) {
              MapState = new global::SC2APIProtocol.MapState();
            }
            input.ReadMessage(MapState);
            break;
          }
          case 34: {
            if (event_ == null) {
              Event = new global::SC2APIProtocol.Event();
            }
            input.ReadMessage(Event);
            break;
          }
          case 42: {
            effects_.AddEntriesFrom(input, _repeated_effects_codec);
            break;
          }
          case 50: {
            radar_.AddEntriesFrom(input, _repeated_radar_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::SC2APIProtocol.PlayerRaw();
            }
            input.ReadMessage(Player);
            break;
          }
          case 18: {
            units_.AddEntriesFrom(ref input, _repeated_units_codec);
            break;
          }
          case 26: {
            if (mapState_ == null) {
              MapState = new global::SC2APIProtocol.MapState();
            }
            input.ReadMessage(MapState);
            break;
          }
          case 34: {
            if (event_ == null) {
              Event = new global::SC2APIProtocol.Event();
            }
            input.ReadMessage(Event);
            break;
          }
          case 42: {
            effects_.AddEntriesFrom(ref input, _repeated_effects_codec);
            break;
          }
          case 50: {
            radar_.AddEntriesFrom(ref input, _repeated_radar_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RadarRing : pb::IMessage<RadarRing>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RadarRing> _parser = new pb::MessageParser<RadarRing>(() => new RadarRing());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RadarRing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RadarRing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RadarRing(RadarRing other) : this() {
      _hasBits0 = other._hasBits0;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      radius_ = other.radius_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RadarRing Clone() {
      return new RadarRing(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private global::SC2APIProtocol.Point pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 2;
    private readonly static float RadiusDefaultValue = 0F;

    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 1) != 0) { return radius_; } else { return RadiusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RadarRing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RadarRing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (HasRadius) {
        output.WriteRawTag(21);
        output.WriteFloat(Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (HasRadius) {
        output.WriteRawTag(21);
        output.WriteFloat(Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RadarRing other) {
      if (other == null) {
        return;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::SC2APIProtocol.Point();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 21: {
            Radius = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 21: {
            Radius = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PowerSource : pb::IMessage<PowerSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PowerSource> _parser = new pb::MessageParser<PowerSource>(() => new PowerSource());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PowerSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PowerSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PowerSource(PowerSource other) : this() {
      _hasBits0 = other._hasBits0;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      radius_ = other.radius_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PowerSource Clone() {
      return new PowerSource(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private global::SC2APIProtocol.Point pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 2;
    private readonly static float RadiusDefaultValue = 0F;

    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 1) != 0) { return radius_; } else { return RadiusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 3;
    private readonly static ulong TagDefaultValue = 0UL;

    private ulong tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Tag {
      get { if ((_hasBits0 & 2) != 0) { return tag_; } else { return TagDefaultValue; } }
      set {
        _hasBits0 |= 2;
        tag_ = value;
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTag {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTag() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PowerSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PowerSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (HasTag) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (HasRadius) {
        output.WriteRawTag(21);
        output.WriteFloat(Radius);
      }
      if (HasTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (HasRadius) {
        output.WriteRawTag(21);
        output.WriteFloat(Radius);
      }
      if (HasTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PowerSource other) {
      if (other == null) {
        return;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::SC2APIProtocol.Point();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 21: {
            Radius = input.ReadFloat();
            break;
          }
          case 24: {
            Tag = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 21: {
            Radius = input.ReadFloat();
            break;
          }
          case 24: {
            Tag = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerRaw : pb::IMessage<PlayerRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerRaw> _parser = new pb::MessageParser<PlayerRaw>(() => new PlayerRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerRaw(PlayerRaw other) : this() {
      powerSources_ = other.powerSources_.Clone();
      camera_ = other.camera_ != null ? other.camera_.Clone() : null;
      upgradeIds_ = other.upgradeIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerRaw Clone() {
      return new PlayerRaw(this);
    }

    /// <summary>Field number for the "power_sources" field.</summary>
    public const int PowerSourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.PowerSource> _repeated_powerSources_codec
        = pb::FieldCodec.ForMessage(10, global::SC2APIProtocol.PowerSource.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.PowerSource> powerSources_ = new pbc::RepeatedField<global::SC2APIProtocol.PowerSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.PowerSource> PowerSources {
      get { return powerSources_; }
    }

    /// <summary>Field number for the "camera" field.</summary>
    public const int CameraFieldNumber = 2;
    private global::SC2APIProtocol.Point camera_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point Camera {
      get { return camera_; }
      set {
        camera_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_ids" field.</summary>
    public const int UpgradeIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_upgradeIds_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> upgradeIds_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// TODO: Add to UI observation?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> UpgradeIds {
      get { return upgradeIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!powerSources_.Equals(other.powerSources_)) return false;
      if (!object.Equals(Camera, other.Camera)) return false;
      if(!upgradeIds_.Equals(other.upgradeIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= powerSources_.GetHashCode();
      if (camera_ != null) hash ^= Camera.GetHashCode();
      hash ^= upgradeIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      powerSources_.WriteTo(output, _repeated_powerSources_codec);
      if (camera_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Camera);
      }
      upgradeIds_.WriteTo(output, _repeated_upgradeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      powerSources_.WriteTo(ref output, _repeated_powerSources_codec);
      if (camera_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Camera);
      }
      upgradeIds_.WriteTo(ref output, _repeated_upgradeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += powerSources_.CalculateSize(_repeated_powerSources_codec);
      if (camera_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
      }
      size += upgradeIds_.CalculateSize(_repeated_upgradeIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerRaw other) {
      if (other == null) {
        return;
      }
      powerSources_.Add(other.powerSources_);
      if (other.camera_ != null) {
        if (camera_ == null) {
          Camera = new global::SC2APIProtocol.Point();
        }
        Camera.MergeFrom(other.Camera);
      }
      upgradeIds_.Add(other.upgradeIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            powerSources_.AddEntriesFrom(input, _repeated_powerSources_codec);
            break;
          }
          case 18: {
            if (camera_ == null) {
              Camera = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Camera);
            break;
          }
          case 26:
          case 24: {
            upgradeIds_.AddEntriesFrom(input, _repeated_upgradeIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            powerSources_.AddEntriesFrom(ref input, _repeated_powerSources_codec);
            break;
          }
          case 18: {
            if (camera_ == null) {
              Camera = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Camera);
            break;
          }
          case 26:
          case 24: {
            upgradeIds_.AddEntriesFrom(ref input, _repeated_upgradeIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitOrder : pb::IMessage<UnitOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitOrder> _parser = new pb::MessageParser<UnitOrder>(() => new UnitOrder());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitOrder(UnitOrder other) : this() {
      _hasBits0 = other._hasBits0;
      abilityId_ = other.abilityId_;
      progress_ = other.progress_;
      switch (other.TargetCase) {
        case TargetOneofCase.TargetWorldSpacePos:
          TargetWorldSpacePos = other.TargetWorldSpacePos.Clone();
          break;
        case TargetOneofCase.TargetUnitTag:
          TargetUnitTag = other.TargetUnitTag;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitOrder Clone() {
      return new UnitOrder(this);
    }

    /// <summary>Field number for the "ability_id" field.</summary>
    public const int AbilityIdFieldNumber = 1;
    private readonly static uint AbilityIdDefaultValue = 0;

    private uint abilityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AbilityId {
      get { if ((_hasBits0 & 1) != 0) { return abilityId_; } else { return AbilityIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        abilityId_ = value;
      }
    }
    /// <summary>Gets whether the "ability_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAbilityId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ability_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAbilityId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_world_space_pos" field.</summary>
    public const int TargetWorldSpacePosFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point TargetWorldSpacePos {
      get { return targetCase_ == TargetOneofCase.TargetWorldSpacePos ? (global::SC2APIProtocol.Point) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.TargetWorldSpacePos;
      }
    }

    /// <summary>Field number for the "target_unit_tag" field.</summary>
    public const int TargetUnitTagFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TargetUnitTag {
      get { return HasTargetUnitTag ? (ulong) target_ : 0UL; }
      set {
        target_ = value;
        targetCase_ = TargetOneofCase.TargetUnitTag;
      }
    }
    /// <summary>Gets whether the "target_unit_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetUnitTag {
      get { return targetCase_ == TargetOneofCase.TargetUnitTag; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "target_unit_tag" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetUnitTag() {
      if (HasTargetUnitTag) {
        ClearTarget();
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 4;
    private readonly static float ProgressDefaultValue = 0F;

    private float progress_;
    /// <summary>
    /// Progress of train abilities. Range: [0.0, 1.0]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Progress {
      get { if ((_hasBits0 & 2) != 0) { return progress_; } else { return ProgressDefaultValue; } }
      set {
        _hasBits0 |= 2;
        progress_ = value;
      }
    }
    /// <summary>Gets whether the "progress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProgress {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "progress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProgress() {
      _hasBits0 &= ~2;
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      TargetWorldSpacePos = 2,
      TargetUnitTag = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityId != other.AbilityId) return false;
      if (!object.Equals(TargetWorldSpacePos, other.TargetWorldSpacePos)) return false;
      if (TargetUnitTag != other.TargetUnitTag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAbilityId) hash ^= AbilityId.GetHashCode();
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) hash ^= TargetWorldSpacePos.GetHashCode();
      if (HasTargetUnitTag) hash ^= TargetUnitTag.GetHashCode();
      if (HasProgress) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetWorldSpacePos);
      }
      if (HasTargetUnitTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(TargetUnitTag);
      }
      if (HasProgress) {
        output.WriteRawTag(37);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetWorldSpacePos);
      }
      if (HasTargetUnitTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(TargetUnitTag);
      }
      if (HasProgress) {
        output.WriteRawTag(37);
        output.WriteFloat(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAbilityId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetWorldSpacePos);
      }
      if (HasTargetUnitTag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetUnitTag);
      }
      if (HasProgress) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitOrder other) {
      if (other == null) {
        return;
      }
      if (other.HasAbilityId) {
        AbilityId = other.AbilityId;
      }
      if (other.HasProgress) {
        Progress = other.Progress;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.TargetWorldSpacePos:
          if (TargetWorldSpacePos == null) {
            TargetWorldSpacePos = new global::SC2APIProtocol.Point();
          }
          TargetWorldSpacePos.MergeFrom(other.TargetWorldSpacePos);
          break;
        case TargetOneofCase.TargetUnitTag:
          TargetUnitTag = other.TargetUnitTag;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AbilityId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::SC2APIProtocol.Point subBuilder = new global::SC2APIProtocol.Point();
            if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
              subBuilder.MergeFrom(TargetWorldSpacePos);
            }
            input.ReadMessage(subBuilder);
            TargetWorldSpacePos = subBuilder;
            break;
          }
          case 24: {
            TargetUnitTag = input.ReadUInt64();
            break;
          }
          case 37: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AbilityId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::SC2APIProtocol.Point subBuilder = new global::SC2APIProtocol.Point();
            if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
              subBuilder.MergeFrom(TargetWorldSpacePos);
            }
            input.ReadMessage(subBuilder);
            TargetWorldSpacePos = subBuilder;
            break;
          }
          case 24: {
            TargetUnitTag = input.ReadUInt64();
            break;
          }
          case 37: {
            Progress = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PassengerUnit : pb::IMessage<PassengerUnit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PassengerUnit> _parser = new pb::MessageParser<PassengerUnit>(() => new PassengerUnit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PassengerUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassengerUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassengerUnit(PassengerUnit other) : this() {
      _hasBits0 = other._hasBits0;
      tag_ = other.tag_;
      health_ = other.health_;
      healthMax_ = other.healthMax_;
      shield_ = other.shield_;
      shieldMax_ = other.shieldMax_;
      energy_ = other.energy_;
      energyMax_ = other.energyMax_;
      unitType_ = other.unitType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PassengerUnit Clone() {
      return new PassengerUnit(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private readonly static ulong TagDefaultValue = 0UL;

    private ulong tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Tag {
      get { if ((_hasBits0 & 1) != 0) { return tag_; } else { return TagDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tag_ = value;
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTag {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTag() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 2;
    private readonly static float HealthDefaultValue = 0F;

    private float health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Health {
      get { if ((_hasBits0 & 2) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "health_max" field.</summary>
    public const int HealthMaxFieldNumber = 3;
    private readonly static float HealthMaxDefaultValue = 0F;

    private float healthMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HealthMax {
      get { if ((_hasBits0 & 4) != 0) { return healthMax_; } else { return HealthMaxDefaultValue; } }
      set {
        _hasBits0 |= 4;
        healthMax_ = value;
      }
    }
    /// <summary>Gets whether the "health_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealthMax {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "health_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealthMax() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "shield" field.</summary>
    public const int ShieldFieldNumber = 4;
    private readonly static float ShieldDefaultValue = 0F;

    private float shield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Shield {
      get { if ((_hasBits0 & 8) != 0) { return shield_; } else { return ShieldDefaultValue; } }
      set {
        _hasBits0 |= 8;
        shield_ = value;
      }
    }
    /// <summary>Gets whether the "shield" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShield {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "shield" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShield() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "shield_max" field.</summary>
    public const int ShieldMaxFieldNumber = 7;
    private readonly static float ShieldMaxDefaultValue = 0F;

    private float shieldMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShieldMax {
      get { if ((_hasBits0 & 64) != 0) { return shieldMax_; } else { return ShieldMaxDefaultValue; } }
      set {
        _hasBits0 |= 64;
        shieldMax_ = value;
      }
    }
    /// <summary>Gets whether the "shield_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShieldMax {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "shield_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShieldMax() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 5;
    private readonly static float EnergyDefaultValue = 0F;

    private float energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Energy {
      get { if ((_hasBits0 & 16) != 0) { return energy_; } else { return EnergyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        energy_ = value;
      }
    }
    /// <summary>Gets whether the "energy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnergy {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "energy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnergy() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "energy_max" field.</summary>
    public const int EnergyMaxFieldNumber = 8;
    private readonly static float EnergyMaxDefaultValue = 0F;

    private float energyMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EnergyMax {
      get { if ((_hasBits0 & 128) != 0) { return energyMax_; } else { return EnergyMaxDefaultValue; } }
      set {
        _hasBits0 |= 128;
        energyMax_ = value;
      }
    }
    /// <summary>Gets whether the "energy_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnergyMax {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "energy_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnergyMax() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "unit_type" field.</summary>
    public const int UnitTypeFieldNumber = 6;
    private readonly static uint UnitTypeDefaultValue = 0;

    private uint unitType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitType {
      get { if ((_hasBits0 & 32) != 0) { return unitType_; } else { return UnitTypeDefaultValue; } }
      set {
        _hasBits0 |= 32;
        unitType_ = value;
      }
    }
    /// <summary>Gets whether the "unit_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnitType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "unit_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnitType() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PassengerUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PassengerUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Health, other.Health)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HealthMax, other.HealthMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Shield, other.Shield)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShieldMax, other.ShieldMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Energy, other.Energy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EnergyMax, other.EnergyMax)) return false;
      if (UnitType != other.UnitType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTag) hash ^= Tag.GetHashCode();
      if (HasHealth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Health);
      if (HasHealthMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HealthMax);
      if (HasShield) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Shield);
      if (HasShieldMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShieldMax);
      if (HasEnergy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Energy);
      if (HasEnergyMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EnergyMax);
      if (HasUnitType) hash ^= UnitType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTag) {
        output.WriteRawTag(8);
        output.WriteUInt64(Tag);
      }
      if (HasHealth) {
        output.WriteRawTag(21);
        output.WriteFloat(Health);
      }
      if (HasHealthMax) {
        output.WriteRawTag(29);
        output.WriteFloat(HealthMax);
      }
      if (HasShield) {
        output.WriteRawTag(37);
        output.WriteFloat(Shield);
      }
      if (HasEnergy) {
        output.WriteRawTag(45);
        output.WriteFloat(Energy);
      }
      if (HasUnitType) {
        output.WriteRawTag(48);
        output.WriteUInt32(UnitType);
      }
      if (HasShieldMax) {
        output.WriteRawTag(61);
        output.WriteFloat(ShieldMax);
      }
      if (HasEnergyMax) {
        output.WriteRawTag(69);
        output.WriteFloat(EnergyMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTag) {
        output.WriteRawTag(8);
        output.WriteUInt64(Tag);
      }
      if (HasHealth) {
        output.WriteRawTag(21);
        output.WriteFloat(Health);
      }
      if (HasHealthMax) {
        output.WriteRawTag(29);
        output.WriteFloat(HealthMax);
      }
      if (HasShield) {
        output.WriteRawTag(37);
        output.WriteFloat(Shield);
      }
      if (HasEnergy) {
        output.WriteRawTag(45);
        output.WriteFloat(Energy);
      }
      if (HasUnitType) {
        output.WriteRawTag(48);
        output.WriteUInt32(UnitType);
      }
      if (HasShieldMax) {
        output.WriteRawTag(61);
        output.WriteFloat(ShieldMax);
      }
      if (HasEnergyMax) {
        output.WriteRawTag(69);
        output.WriteFloat(EnergyMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tag);
      }
      if (HasHealth) {
        size += 1 + 4;
      }
      if (HasHealthMax) {
        size += 1 + 4;
      }
      if (HasShield) {
        size += 1 + 4;
      }
      if (HasShieldMax) {
        size += 1 + 4;
      }
      if (HasEnergy) {
        size += 1 + 4;
      }
      if (HasEnergyMax) {
        size += 1 + 4;
      }
      if (HasUnitType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PassengerUnit other) {
      if (other == null) {
        return;
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasHealthMax) {
        HealthMax = other.HealthMax;
      }
      if (other.HasShield) {
        Shield = other.Shield;
      }
      if (other.HasShieldMax) {
        ShieldMax = other.ShieldMax;
      }
      if (other.HasEnergy) {
        Energy = other.Energy;
      }
      if (other.HasEnergyMax) {
        EnergyMax = other.EnergyMax;
      }
      if (other.HasUnitType) {
        UnitType = other.UnitType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Tag = input.ReadUInt64();
            break;
          }
          case 21: {
            Health = input.ReadFloat();
            break;
          }
          case 29: {
            HealthMax = input.ReadFloat();
            break;
          }
          case 37: {
            Shield = input.ReadFloat();
            break;
          }
          case 45: {
            Energy = input.ReadFloat();
            break;
          }
          case 48: {
            UnitType = input.ReadUInt32();
            break;
          }
          case 61: {
            ShieldMax = input.ReadFloat();
            break;
          }
          case 69: {
            EnergyMax = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Tag = input.ReadUInt64();
            break;
          }
          case 21: {
            Health = input.ReadFloat();
            break;
          }
          case 29: {
            HealthMax = input.ReadFloat();
            break;
          }
          case 37: {
            Shield = input.ReadFloat();
            break;
          }
          case 45: {
            Energy = input.ReadFloat();
            break;
          }
          case 48: {
            UnitType = input.ReadUInt32();
            break;
          }
          case 61: {
            ShieldMax = input.ReadFloat();
            break;
          }
          case 69: {
            EnergyMax = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RallyTarget : pb::IMessage<RallyTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RallyTarget> _parser = new pb::MessageParser<RallyTarget>(() => new RallyTarget());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RallyTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RallyTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RallyTarget(RallyTarget other) : this() {
      _hasBits0 = other._hasBits0;
      point_ = other.point_ != null ? other.point_.Clone() : null;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RallyTarget Clone() {
      return new RallyTarget(this);
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 1;
    private global::SC2APIProtocol.Point point_;
    /// <summary>
    /// Will always be filled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private readonly static ulong TagDefaultValue = 0UL;

    private ulong tag_;
    /// <summary>
    /// Only if it's targeting a unit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Tag {
      get { if ((_hasBits0 & 1) != 0) { return tag_; } else { return TagDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tag_ = value;
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTag {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTag() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RallyTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RallyTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Point, other.Point)) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (point_ != null) hash ^= Point.GetHashCode();
      if (HasTag) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (point_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Point);
      }
      if (HasTag) {
        output.WriteRawTag(16);
        output.WriteUInt64(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (point_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Point);
      }
      if (HasTag) {
        output.WriteRawTag(16);
        output.WriteUInt64(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (point_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Point);
      }
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RallyTarget other) {
      if (other == null) {
        return;
      }
      if (other.point_ != null) {
        if (point_ == null) {
          Point = new global::SC2APIProtocol.Point();
        }
        Point.MergeFrom(other.Point);
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (point_ == null) {
              Point = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Point);
            break;
          }
          case 16: {
            Tag = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (point_ == null) {
              Point = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Point);
            break;
          }
          case 16: {
            Tag = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Unit : pb::IMessage<Unit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unit> _parser = new pb::MessageParser<Unit>(() => new Unit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Unit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unit(Unit other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      displayType_ = other.displayType_;
      alliance_ = other.alliance_;
      tag_ = other.tag_;
      unitType_ = other.unitType_;
      owner_ = other.owner_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      facing_ = other.facing_;
      radius_ = other.radius_;
      buildProgress_ = other.buildProgress_;
      cloak_ = other.cloak_;
      buffIds_ = other.buffIds_.Clone();
      detectRange_ = other.detectRange_;
      radarRange_ = other.radarRange_;
      isSelected_ = other.isSelected_;
      isOnScreen_ = other.isOnScreen_;
      isBlip_ = other.isBlip_;
      isPowered_ = other.isPowered_;
      isActive_ = other.isActive_;
      attackUpgradeLevel_ = other.attackUpgradeLevel_;
      armorUpgradeLevel_ = other.armorUpgradeLevel_;
      shieldUpgradeLevel_ = other.shieldUpgradeLevel_;
      health_ = other.health_;
      healthMax_ = other.healthMax_;
      shield_ = other.shield_;
      shieldMax_ = other.shieldMax_;
      energy_ = other.energy_;
      energyMax_ = other.energyMax_;
      mineralContents_ = other.mineralContents_;
      vespeneContents_ = other.vespeneContents_;
      isFlying_ = other.isFlying_;
      isBurrowed_ = other.isBurrowed_;
      isHallucination_ = other.isHallucination_;
      orders_ = other.orders_.Clone();
      addOnTag_ = other.addOnTag_;
      passengers_ = other.passengers_.Clone();
      cargoSpaceTaken_ = other.cargoSpaceTaken_;
      cargoSpaceMax_ = other.cargoSpaceMax_;
      assignedHarvesters_ = other.assignedHarvesters_;
      idealHarvesters_ = other.idealHarvesters_;
      weaponCooldown_ = other.weaponCooldown_;
      engagedTargetTag_ = other.engagedTargetTag_;
      buffDurationRemain_ = other.buffDurationRemain_;
      buffDurationMax_ = other.buffDurationMax_;
      rallyTargets_ = other.rallyTargets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unit Clone() {
      return new Unit(this);
    }

    /// <summary>Field number for the "display_type" field.</summary>
    public const int DisplayTypeFieldNumber = 1;
    private readonly static global::SC2APIProtocol.DisplayType DisplayTypeDefaultValue = global::SC2APIProtocol.DisplayType.Visible;

    private global::SC2APIProtocol.DisplayType displayType_;
    /// <summary>
    /// Fields are populated based on type/alliance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.DisplayType DisplayType {
      get { if ((_hasBits0 & 1) != 0) { return displayType_; } else { return DisplayTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        displayType_ = value;
      }
    }
    /// <summary>Gets whether the "display_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "display_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "alliance" field.</summary>
    public const int AllianceFieldNumber = 2;
    private readonly static global::SC2APIProtocol.Alliance AllianceDefaultValue = global::SC2APIProtocol.Alliance.Self;

    private global::SC2APIProtocol.Alliance alliance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Alliance Alliance {
      get { if ((_hasBits0 & 2) != 0) { return alliance_; } else { return AllianceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        alliance_ = value;
      }
    }
    /// <summary>Gets whether the "alliance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlliance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "alliance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlliance() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 3;
    private readonly static ulong TagDefaultValue = 0UL;

    private ulong tag_;
    /// <summary>
    /// Unique identifier for a unit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Tag {
      get { if ((_hasBits0 & 4) != 0) { return tag_; } else { return TagDefaultValue; } }
      set {
        _hasBits0 |= 4;
        tag_ = value;
      }
    }
    /// <summary>Gets whether the "tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTag {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTag() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "unit_type" field.</summary>
    public const int UnitTypeFieldNumber = 4;
    private readonly static uint UnitTypeDefaultValue = 0;

    private uint unitType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnitType {
      get { if ((_hasBits0 & 8) != 0) { return unitType_; } else { return UnitTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        unitType_ = value;
      }
    }
    /// <summary>Gets whether the "unit_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUnitType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "unit_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUnitType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private readonly static int OwnerDefaultValue = 0;

    private int owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Owner {
      get { if ((_hasBits0 & 16) != 0) { return owner_; } else { return OwnerDefaultValue; } }
      set {
        _hasBits0 |= 16;
        owner_ = value;
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwner {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwner() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 6;
    private global::SC2APIProtocol.Point pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "facing" field.</summary>
    public const int FacingFieldNumber = 7;
    private readonly static float FacingDefaultValue = 0F;

    private float facing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Facing {
      get { if ((_hasBits0 & 32) != 0) { return facing_; } else { return FacingDefaultValue; } }
      set {
        _hasBits0 |= 32;
        facing_ = value;
      }
    }
    /// <summary>Gets whether the "facing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFacing {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "facing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFacing() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 8;
    private readonly static float RadiusDefaultValue = 0F;

    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 64) != 0) { return radius_; } else { return RadiusDefaultValue; } }
      set {
        _hasBits0 |= 64;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "build_progress" field.</summary>
    public const int BuildProgressFieldNumber = 9;
    private readonly static float BuildProgressDefaultValue = 0F;

    private float buildProgress_;
    /// <summary>
    /// Range: [0.0, 1.0]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BuildProgress {
      get { if ((_hasBits0 & 128) != 0) { return buildProgress_; } else { return BuildProgressDefaultValue; } }
      set {
        _hasBits0 |= 128;
        buildProgress_ = value;
      }
    }
    /// <summary>Gets whether the "build_progress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuildProgress {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "build_progress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuildProgress() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "cloak" field.</summary>
    public const int CloakFieldNumber = 10;
    private readonly static global::SC2APIProtocol.CloakState CloakDefaultValue = global::SC2APIProtocol.CloakState.CloakedUnknown;

    private global::SC2APIProtocol.CloakState cloak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.CloakState Cloak {
      get { if ((_hasBits0 & 256) != 0) { return cloak_; } else { return CloakDefaultValue; } }
      set {
        _hasBits0 |= 256;
        cloak_ = value;
      }
    }
    /// <summary>Gets whether the "cloak" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCloak {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "cloak" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCloak() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "buff_ids" field.</summary>
    public const int BuffIdsFieldNumber = 27;
    private static readonly pb::FieldCodec<uint> _repeated_buffIds_codec
        = pb::FieldCodec.ForUInt32(216);
    private readonly pbc::RepeatedField<uint> buffIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> BuffIds {
      get { return buffIds_; }
    }

    /// <summary>Field number for the "detect_range" field.</summary>
    public const int DetectRangeFieldNumber = 31;
    private readonly static float DetectRangeDefaultValue = 0F;

    private float detectRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DetectRange {
      get { if ((_hasBits0 & 67108864) != 0) { return detectRange_; } else { return DetectRangeDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        detectRange_ = value;
      }
    }
    /// <summary>Gets whether the "detect_range" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDetectRange {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "detect_range" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDetectRange() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "radar_range" field.</summary>
    public const int RadarRangeFieldNumber = 32;
    private readonly static float RadarRangeDefaultValue = 0F;

    private float radarRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RadarRange {
      get { if ((_hasBits0 & 134217728) != 0) { return radarRange_; } else { return RadarRangeDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        radarRange_ = value;
      }
    }
    /// <summary>Gets whether the "radar_range" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadarRange {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "radar_range" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadarRange() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "is_selected" field.</summary>
    public const int IsSelectedFieldNumber = 11;
    private readonly static bool IsSelectedDefaultValue = false;

    private bool isSelected_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSelected {
      get { if ((_hasBits0 & 512) != 0) { return isSelected_; } else { return IsSelectedDefaultValue; } }
      set {
        _hasBits0 |= 512;
        isSelected_ = value;
      }
    }
    /// <summary>Gets whether the "is_selected" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSelected {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "is_selected" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSelected() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "is_on_screen" field.</summary>
    public const int IsOnScreenFieldNumber = 12;
    private readonly static bool IsOnScreenDefaultValue = false;

    private bool isOnScreen_;
    /// <summary>
    /// Visible and within the camera frustrum.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOnScreen {
      get { if ((_hasBits0 & 1024) != 0) { return isOnScreen_; } else { return IsOnScreenDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        isOnScreen_ = value;
      }
    }
    /// <summary>Gets whether the "is_on_screen" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsOnScreen {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "is_on_screen" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsOnScreen() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "is_blip" field.</summary>
    public const int IsBlipFieldNumber = 13;
    private readonly static bool IsBlipDefaultValue = false;

    private bool isBlip_;
    /// <summary>
    /// Detected by sensor tower
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBlip {
      get { if ((_hasBits0 & 2048) != 0) { return isBlip_; } else { return IsBlipDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        isBlip_ = value;
      }
    }
    /// <summary>Gets whether the "is_blip" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBlip {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "is_blip" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBlip() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "is_powered" field.</summary>
    public const int IsPoweredFieldNumber = 35;
    private readonly static bool IsPoweredDefaultValue = false;

    private bool isPowered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPowered {
      get { if ((_hasBits0 & 536870912) != 0) { return isPowered_; } else { return IsPoweredDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        isPowered_ = value;
      }
    }
    /// <summary>Gets whether the "is_powered" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPowered {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "is_powered" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPowered() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 39;
    private readonly static bool IsActiveDefaultValue = false;

    private bool isActive_;
    /// <summary>
    /// Building is training/researching (ie animated).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { if ((_hasBits1 & 2) != 0) { return isActive_; } else { return IsActiveDefaultValue; } }
      set {
        _hasBits1 |= 2;
        isActive_ = value;
      }
    }
    /// <summary>Gets whether the "is_active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsActive {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsActive() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "attack_upgrade_level" field.</summary>
    public const int AttackUpgradeLevelFieldNumber = 40;
    private readonly static int AttackUpgradeLevelDefaultValue = 0;

    private int attackUpgradeLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttackUpgradeLevel {
      get { if ((_hasBits1 & 4) != 0) { return attackUpgradeLevel_; } else { return AttackUpgradeLevelDefaultValue; } }
      set {
        _hasBits1 |= 4;
        attackUpgradeLevel_ = value;
      }
    }
    /// <summary>Gets whether the "attack_upgrade_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAttackUpgradeLevel {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "attack_upgrade_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAttackUpgradeLevel() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "armor_upgrade_level" field.</summary>
    public const int ArmorUpgradeLevelFieldNumber = 41;
    private readonly static int ArmorUpgradeLevelDefaultValue = 0;

    private int armorUpgradeLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ArmorUpgradeLevel {
      get { if ((_hasBits1 & 8) != 0) { return armorUpgradeLevel_; } else { return ArmorUpgradeLevelDefaultValue; } }
      set {
        _hasBits1 |= 8;
        armorUpgradeLevel_ = value;
      }
    }
    /// <summary>Gets whether the "armor_upgrade_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArmorUpgradeLevel {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "armor_upgrade_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArmorUpgradeLevel() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "shield_upgrade_level" field.</summary>
    public const int ShieldUpgradeLevelFieldNumber = 42;
    private readonly static int ShieldUpgradeLevelDefaultValue = 0;

    private int shieldUpgradeLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShieldUpgradeLevel {
      get { if ((_hasBits1 & 16) != 0) { return shieldUpgradeLevel_; } else { return ShieldUpgradeLevelDefaultValue; } }
      set {
        _hasBits1 |= 16;
        shieldUpgradeLevel_ = value;
      }
    }
    /// <summary>Gets whether the "shield_upgrade_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShieldUpgradeLevel {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "shield_upgrade_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShieldUpgradeLevel() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 14;
    private readonly static float HealthDefaultValue = 0F;

    private float health_;
    /// <summary>
    /// Not populated for snapshots
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Health {
      get { if ((_hasBits0 & 4096) != 0) { return health_; } else { return HealthDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        health_ = value;
      }
    }
    /// <summary>Gets whether the "health" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealth {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "health" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealth() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "health_max" field.</summary>
    public const int HealthMaxFieldNumber = 15;
    private readonly static float HealthMaxDefaultValue = 0F;

    private float healthMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float HealthMax {
      get { if ((_hasBits0 & 8192) != 0) { return healthMax_; } else { return HealthMaxDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        healthMax_ = value;
      }
    }
    /// <summary>Gets whether the "health_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHealthMax {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "health_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHealthMax() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "shield" field.</summary>
    public const int ShieldFieldNumber = 16;
    private readonly static float ShieldDefaultValue = 0F;

    private float shield_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Shield {
      get { if ((_hasBits0 & 16384) != 0) { return shield_; } else { return ShieldDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        shield_ = value;
      }
    }
    /// <summary>Gets whether the "shield" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShield {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "shield" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShield() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "shield_max" field.</summary>
    public const int ShieldMaxFieldNumber = 36;
    private readonly static float ShieldMaxDefaultValue = 0F;

    private float shieldMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShieldMax {
      get { if ((_hasBits0 & 1073741824) != 0) { return shieldMax_; } else { return ShieldMaxDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        shieldMax_ = value;
      }
    }
    /// <summary>Gets whether the "shield_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShieldMax {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "shield_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShieldMax() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 17;
    private readonly static float EnergyDefaultValue = 0F;

    private float energy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Energy {
      get { if ((_hasBits0 & 32768) != 0) { return energy_; } else { return EnergyDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        energy_ = value;
      }
    }
    /// <summary>Gets whether the "energy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnergy {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "energy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnergy() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "energy_max" field.</summary>
    public const int EnergyMaxFieldNumber = 37;
    private readonly static float EnergyMaxDefaultValue = 0F;

    private float energyMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EnergyMax {
      get { if ((_hasBits0 & -2147483648) != 0) { return energyMax_; } else { return EnergyMaxDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        energyMax_ = value;
      }
    }
    /// <summary>Gets whether the "energy_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnergyMax {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "energy_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnergyMax() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "mineral_contents" field.</summary>
    public const int MineralContentsFieldNumber = 18;
    private readonly static int MineralContentsDefaultValue = 0;

    private int mineralContents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MineralContents {
      get { if ((_hasBits0 & 65536) != 0) { return mineralContents_; } else { return MineralContentsDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        mineralContents_ = value;
      }
    }
    /// <summary>Gets whether the "mineral_contents" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMineralContents {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "mineral_contents" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMineralContents() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "vespene_contents" field.</summary>
    public const int VespeneContentsFieldNumber = 19;
    private readonly static int VespeneContentsDefaultValue = 0;

    private int vespeneContents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VespeneContents {
      get { if ((_hasBits0 & 131072) != 0) { return vespeneContents_; } else { return VespeneContentsDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        vespeneContents_ = value;
      }
    }
    /// <summary>Gets whether the "vespene_contents" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVespeneContents {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "vespene_contents" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVespeneContents() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "is_flying" field.</summary>
    public const int IsFlyingFieldNumber = 20;
    private readonly static bool IsFlyingDefaultValue = false;

    private bool isFlying_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFlying {
      get { if ((_hasBits0 & 262144) != 0) { return isFlying_; } else { return IsFlyingDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        isFlying_ = value;
      }
    }
    /// <summary>Gets whether the "is_flying" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsFlying {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "is_flying" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsFlying() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "is_burrowed" field.</summary>
    public const int IsBurrowedFieldNumber = 21;
    private readonly static bool IsBurrowedDefaultValue = false;

    private bool isBurrowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsBurrowed {
      get { if ((_hasBits0 & 524288) != 0) { return isBurrowed_; } else { return IsBurrowedDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        isBurrowed_ = value;
      }
    }
    /// <summary>Gets whether the "is_burrowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsBurrowed {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "is_burrowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsBurrowed() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "is_hallucination" field.</summary>
    public const int IsHallucinationFieldNumber = 38;
    private readonly static bool IsHallucinationDefaultValue = false;

    private bool isHallucination_;
    /// <summary>
    /// Unit is your own or detected as a hallucination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHallucination {
      get { if ((_hasBits1 & 1) != 0) { return isHallucination_; } else { return IsHallucinationDefaultValue; } }
      set {
        _hasBits1 |= 1;
        isHallucination_ = value;
      }
    }
    /// <summary>Gets whether the "is_hallucination" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsHallucination {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_hallucination" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsHallucination() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 22;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.UnitOrder> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(178, global::SC2APIProtocol.UnitOrder.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.UnitOrder> orders_ = new pbc::RepeatedField<global::SC2APIProtocol.UnitOrder>();
    /// <summary>
    /// Not populated for enemies
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.UnitOrder> Orders {
      get { return orders_; }
    }

    /// <summary>Field number for the "add_on_tag" field.</summary>
    public const int AddOnTagFieldNumber = 23;
    private readonly static ulong AddOnTagDefaultValue = 0UL;

    private ulong addOnTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong AddOnTag {
      get { if ((_hasBits0 & 1048576) != 0) { return addOnTag_; } else { return AddOnTagDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        addOnTag_ = value;
      }
    }
    /// <summary>Gets whether the "add_on_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddOnTag {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "add_on_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddOnTag() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "passengers" field.</summary>
    public const int PassengersFieldNumber = 24;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.PassengerUnit> _repeated_passengers_codec
        = pb::FieldCodec.ForMessage(194, global::SC2APIProtocol.PassengerUnit.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.PassengerUnit> passengers_ = new pbc::RepeatedField<global::SC2APIProtocol.PassengerUnit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.PassengerUnit> Passengers {
      get { return passengers_; }
    }

    /// <summary>Field number for the "cargo_space_taken" field.</summary>
    public const int CargoSpaceTakenFieldNumber = 25;
    private readonly static int CargoSpaceTakenDefaultValue = 0;

    private int cargoSpaceTaken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CargoSpaceTaken {
      get { if ((_hasBits0 & 2097152) != 0) { return cargoSpaceTaken_; } else { return CargoSpaceTakenDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        cargoSpaceTaken_ = value;
      }
    }
    /// <summary>Gets whether the "cargo_space_taken" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCargoSpaceTaken {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "cargo_space_taken" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCargoSpaceTaken() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "cargo_space_max" field.</summary>
    public const int CargoSpaceMaxFieldNumber = 26;
    private readonly static int CargoSpaceMaxDefaultValue = 0;

    private int cargoSpaceMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CargoSpaceMax {
      get { if ((_hasBits0 & 4194304) != 0) { return cargoSpaceMax_; } else { return CargoSpaceMaxDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        cargoSpaceMax_ = value;
      }
    }
    /// <summary>Gets whether the "cargo_space_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCargoSpaceMax {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "cargo_space_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCargoSpaceMax() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "assigned_harvesters" field.</summary>
    public const int AssignedHarvestersFieldNumber = 28;
    private readonly static int AssignedHarvestersDefaultValue = 0;

    private int assignedHarvesters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AssignedHarvesters {
      get { if ((_hasBits0 & 8388608) != 0) { return assignedHarvesters_; } else { return AssignedHarvestersDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        assignedHarvesters_ = value;
      }
    }
    /// <summary>Gets whether the "assigned_harvesters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAssignedHarvesters {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "assigned_harvesters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAssignedHarvesters() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "ideal_harvesters" field.</summary>
    public const int IdealHarvestersFieldNumber = 29;
    private readonly static int IdealHarvestersDefaultValue = 0;

    private int idealHarvesters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IdealHarvesters {
      get { if ((_hasBits0 & 16777216) != 0) { return idealHarvesters_; } else { return IdealHarvestersDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        idealHarvesters_ = value;
      }
    }
    /// <summary>Gets whether the "ideal_harvesters" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdealHarvesters {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "ideal_harvesters" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdealHarvesters() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "weapon_cooldown" field.</summary>
    public const int WeaponCooldownFieldNumber = 30;
    private readonly static float WeaponCooldownDefaultValue = 0F;

    private float weaponCooldown_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float WeaponCooldown {
      get { if ((_hasBits0 & 33554432) != 0) { return weaponCooldown_; } else { return WeaponCooldownDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        weaponCooldown_ = value;
      }
    }
    /// <summary>Gets whether the "weapon_cooldown" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWeaponCooldown {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "weapon_cooldown" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWeaponCooldown() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "engaged_target_tag" field.</summary>
    public const int EngagedTargetTagFieldNumber = 34;
    private readonly static ulong EngagedTargetTagDefaultValue = 0UL;

    private ulong engagedTargetTag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EngagedTargetTag {
      get { if ((_hasBits0 & 268435456) != 0) { return engagedTargetTag_; } else { return EngagedTargetTagDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        engagedTargetTag_ = value;
      }
    }
    /// <summary>Gets whether the "engaged_target_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEngagedTargetTag {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "engaged_target_tag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEngagedTargetTag() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "buff_duration_remain" field.</summary>
    public const int BuffDurationRemainFieldNumber = 43;
    private readonly static int BuffDurationRemainDefaultValue = 0;

    private int buffDurationRemain_;
    /// <summary>
    /// How long a buff or unit is still around (eg mule, broodling, chronoboost).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffDurationRemain {
      get { if ((_hasBits1 & 32) != 0) { return buffDurationRemain_; } else { return BuffDurationRemainDefaultValue; } }
      set {
        _hasBits1 |= 32;
        buffDurationRemain_ = value;
      }
    }
    /// <summary>Gets whether the "buff_duration_remain" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuffDurationRemain {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "buff_duration_remain" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuffDurationRemain() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "buff_duration_max" field.</summary>
    public const int BuffDurationMaxFieldNumber = 44;
    private readonly static int BuffDurationMaxDefaultValue = 0;

    private int buffDurationMax_;
    /// <summary>
    /// How long the buff or unit is still around (eg mule, broodling, chronoboost).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffDurationMax {
      get { if ((_hasBits1 & 64) != 0) { return buffDurationMax_; } else { return BuffDurationMaxDefaultValue; } }
      set {
        _hasBits1 |= 64;
        buffDurationMax_ = value;
      }
    }
    /// <summary>Gets whether the "buff_duration_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBuffDurationMax {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "buff_duration_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBuffDurationMax() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "rally_targets" field.</summary>
    public const int RallyTargetsFieldNumber = 45;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.RallyTarget> _repeated_rallyTargets_codec
        = pb::FieldCodec.ForMessage(362, global::SC2APIProtocol.RallyTarget.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.RallyTarget> rallyTargets_ = new pbc::RepeatedField<global::SC2APIProtocol.RallyTarget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.RallyTarget> RallyTargets {
      get { return rallyTargets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Unit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Unit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayType != other.DisplayType) return false;
      if (Alliance != other.Alliance) return false;
      if (Tag != other.Tag) return false;
      if (UnitType != other.UnitType) return false;
      if (Owner != other.Owner) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Facing, other.Facing)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BuildProgress, other.BuildProgress)) return false;
      if (Cloak != other.Cloak) return false;
      if(!buffIds_.Equals(other.buffIds_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DetectRange, other.DetectRange)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadarRange, other.RadarRange)) return false;
      if (IsSelected != other.IsSelected) return false;
      if (IsOnScreen != other.IsOnScreen) return false;
      if (IsBlip != other.IsBlip) return false;
      if (IsPowered != other.IsPowered) return false;
      if (IsActive != other.IsActive) return false;
      if (AttackUpgradeLevel != other.AttackUpgradeLevel) return false;
      if (ArmorUpgradeLevel != other.ArmorUpgradeLevel) return false;
      if (ShieldUpgradeLevel != other.ShieldUpgradeLevel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Health, other.Health)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HealthMax, other.HealthMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Shield, other.Shield)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShieldMax, other.ShieldMax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Energy, other.Energy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EnergyMax, other.EnergyMax)) return false;
      if (MineralContents != other.MineralContents) return false;
      if (VespeneContents != other.VespeneContents) return false;
      if (IsFlying != other.IsFlying) return false;
      if (IsBurrowed != other.IsBurrowed) return false;
      if (IsHallucination != other.IsHallucination) return false;
      if(!orders_.Equals(other.orders_)) return false;
      if (AddOnTag != other.AddOnTag) return false;
      if(!passengers_.Equals(other.passengers_)) return false;
      if (CargoSpaceTaken != other.CargoSpaceTaken) return false;
      if (CargoSpaceMax != other.CargoSpaceMax) return false;
      if (AssignedHarvesters != other.AssignedHarvesters) return false;
      if (IdealHarvesters != other.IdealHarvesters) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WeaponCooldown, other.WeaponCooldown)) return false;
      if (EngagedTargetTag != other.EngagedTargetTag) return false;
      if (BuffDurationRemain != other.BuffDurationRemain) return false;
      if (BuffDurationMax != other.BuffDurationMax) return false;
      if(!rallyTargets_.Equals(other.rallyTargets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDisplayType) hash ^= DisplayType.GetHashCode();
      if (HasAlliance) hash ^= Alliance.GetHashCode();
      if (HasTag) hash ^= Tag.GetHashCode();
      if (HasUnitType) hash ^= UnitType.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (HasFacing) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Facing);
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (HasBuildProgress) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BuildProgress);
      if (HasCloak) hash ^= Cloak.GetHashCode();
      hash ^= buffIds_.GetHashCode();
      if (HasDetectRange) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DetectRange);
      if (HasRadarRange) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadarRange);
      if (HasIsSelected) hash ^= IsSelected.GetHashCode();
      if (HasIsOnScreen) hash ^= IsOnScreen.GetHashCode();
      if (HasIsBlip) hash ^= IsBlip.GetHashCode();
      if (HasIsPowered) hash ^= IsPowered.GetHashCode();
      if (HasIsActive) hash ^= IsActive.GetHashCode();
      if (HasAttackUpgradeLevel) hash ^= AttackUpgradeLevel.GetHashCode();
      if (HasArmorUpgradeLevel) hash ^= ArmorUpgradeLevel.GetHashCode();
      if (HasShieldUpgradeLevel) hash ^= ShieldUpgradeLevel.GetHashCode();
      if (HasHealth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Health);
      if (HasHealthMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HealthMax);
      if (HasShield) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Shield);
      if (HasShieldMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShieldMax);
      if (HasEnergy) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Energy);
      if (HasEnergyMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EnergyMax);
      if (HasMineralContents) hash ^= MineralContents.GetHashCode();
      if (HasVespeneContents) hash ^= VespeneContents.GetHashCode();
      if (HasIsFlying) hash ^= IsFlying.GetHashCode();
      if (HasIsBurrowed) hash ^= IsBurrowed.GetHashCode();
      if (HasIsHallucination) hash ^= IsHallucination.GetHashCode();
      hash ^= orders_.GetHashCode();
      if (HasAddOnTag) hash ^= AddOnTag.GetHashCode();
      hash ^= passengers_.GetHashCode();
      if (HasCargoSpaceTaken) hash ^= CargoSpaceTaken.GetHashCode();
      if (HasCargoSpaceMax) hash ^= CargoSpaceMax.GetHashCode();
      if (HasAssignedHarvesters) hash ^= AssignedHarvesters.GetHashCode();
      if (HasIdealHarvesters) hash ^= IdealHarvesters.GetHashCode();
      if (HasWeaponCooldown) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WeaponCooldown);
      if (HasEngagedTargetTag) hash ^= EngagedTargetTag.GetHashCode();
      if (HasBuffDurationRemain) hash ^= BuffDurationRemain.GetHashCode();
      if (HasBuffDurationMax) hash ^= BuffDurationMax.GetHashCode();
      hash ^= rallyTargets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDisplayType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DisplayType);
      }
      if (HasAlliance) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Alliance);
      }
      if (HasTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(Tag);
      }
      if (HasUnitType) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnitType);
      }
      if (HasOwner) {
        output.WriteRawTag(40);
        output.WriteInt32(Owner);
      }
      if (pos_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Pos);
      }
      if (HasFacing) {
        output.WriteRawTag(61);
        output.WriteFloat(Facing);
      }
      if (HasRadius) {
        output.WriteRawTag(69);
        output.WriteFloat(Radius);
      }
      if (HasBuildProgress) {
        output.WriteRawTag(77);
        output.WriteFloat(BuildProgress);
      }
      if (HasCloak) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Cloak);
      }
      if (HasIsSelected) {
        output.WriteRawTag(88);
        output.WriteBool(IsSelected);
      }
      if (HasIsOnScreen) {
        output.WriteRawTag(96);
        output.WriteBool(IsOnScreen);
      }
      if (HasIsBlip) {
        output.WriteRawTag(104);
        output.WriteBool(IsBlip);
      }
      if (HasHealth) {
        output.WriteRawTag(117);
        output.WriteFloat(Health);
      }
      if (HasHealthMax) {
        output.WriteRawTag(125);
        output.WriteFloat(HealthMax);
      }
      if (HasShield) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Shield);
      }
      if (HasEnergy) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Energy);
      }
      if (HasMineralContents) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MineralContents);
      }
      if (HasVespeneContents) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(VespeneContents);
      }
      if (HasIsFlying) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsFlying);
      }
      if (HasIsBurrowed) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsBurrowed);
      }
      orders_.WriteTo(output, _repeated_orders_codec);
      if (HasAddOnTag) {
        output.WriteRawTag(184, 1);
        output.WriteUInt64(AddOnTag);
      }
      passengers_.WriteTo(output, _repeated_passengers_codec);
      if (HasCargoSpaceTaken) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(CargoSpaceTaken);
      }
      if (HasCargoSpaceMax) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(CargoSpaceMax);
      }
      buffIds_.WriteTo(output, _repeated_buffIds_codec);
      if (HasAssignedHarvesters) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(AssignedHarvesters);
      }
      if (HasIdealHarvesters) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(IdealHarvesters);
      }
      if (HasWeaponCooldown) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(WeaponCooldown);
      }
      if (HasDetectRange) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(DetectRange);
      }
      if (HasRadarRange) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(RadarRange);
      }
      if (HasEngagedTargetTag) {
        output.WriteRawTag(144, 2);
        output.WriteUInt64(EngagedTargetTag);
      }
      if (HasIsPowered) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsPowered);
      }
      if (HasShieldMax) {
        output.WriteRawTag(165, 2);
        output.WriteFloat(ShieldMax);
      }
      if (HasEnergyMax) {
        output.WriteRawTag(173, 2);
        output.WriteFloat(EnergyMax);
      }
      if (HasIsHallucination) {
        output.WriteRawTag(176, 2);
        output.WriteBool(IsHallucination);
      }
      if (HasIsActive) {
        output.WriteRawTag(184, 2);
        output.WriteBool(IsActive);
      }
      if (HasAttackUpgradeLevel) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(AttackUpgradeLevel);
      }
      if (HasArmorUpgradeLevel) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(ArmorUpgradeLevel);
      }
      if (HasShieldUpgradeLevel) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(ShieldUpgradeLevel);
      }
      if (HasBuffDurationRemain) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(BuffDurationRemain);
      }
      if (HasBuffDurationMax) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(BuffDurationMax);
      }
      rallyTargets_.WriteTo(output, _repeated_rallyTargets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDisplayType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DisplayType);
      }
      if (HasAlliance) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Alliance);
      }
      if (HasTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(Tag);
      }
      if (HasUnitType) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnitType);
      }
      if (HasOwner) {
        output.WriteRawTag(40);
        output.WriteInt32(Owner);
      }
      if (pos_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Pos);
      }
      if (HasFacing) {
        output.WriteRawTag(61);
        output.WriteFloat(Facing);
      }
      if (HasRadius) {
        output.WriteRawTag(69);
        output.WriteFloat(Radius);
      }
      if (HasBuildProgress) {
        output.WriteRawTag(77);
        output.WriteFloat(BuildProgress);
      }
      if (HasCloak) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Cloak);
      }
      if (HasIsSelected) {
        output.WriteRawTag(88);
        output.WriteBool(IsSelected);
      }
      if (HasIsOnScreen) {
        output.WriteRawTag(96);
        output.WriteBool(IsOnScreen);
      }
      if (HasIsBlip) {
        output.WriteRawTag(104);
        output.WriteBool(IsBlip);
      }
      if (HasHealth) {
        output.WriteRawTag(117);
        output.WriteFloat(Health);
      }
      if (HasHealthMax) {
        output.WriteRawTag(125);
        output.WriteFloat(HealthMax);
      }
      if (HasShield) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Shield);
      }
      if (HasEnergy) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Energy);
      }
      if (HasMineralContents) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MineralContents);
      }
      if (HasVespeneContents) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(VespeneContents);
      }
      if (HasIsFlying) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsFlying);
      }
      if (HasIsBurrowed) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsBurrowed);
      }
      orders_.WriteTo(ref output, _repeated_orders_codec);
      if (HasAddOnTag) {
        output.WriteRawTag(184, 1);
        output.WriteUInt64(AddOnTag);
      }
      passengers_.WriteTo(ref output, _repeated_passengers_codec);
      if (HasCargoSpaceTaken) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(CargoSpaceTaken);
      }
      if (HasCargoSpaceMax) {
        output.WriteRawTag(208, 1);
        output.WriteInt32(CargoSpaceMax);
      }
      buffIds_.WriteTo(ref output, _repeated_buffIds_codec);
      if (HasAssignedHarvesters) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(AssignedHarvesters);
      }
      if (HasIdealHarvesters) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(IdealHarvesters);
      }
      if (HasWeaponCooldown) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(WeaponCooldown);
      }
      if (HasDetectRange) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(DetectRange);
      }
      if (HasRadarRange) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(RadarRange);
      }
      if (HasEngagedTargetTag) {
        output.WriteRawTag(144, 2);
        output.WriteUInt64(EngagedTargetTag);
      }
      if (HasIsPowered) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsPowered);
      }
      if (HasShieldMax) {
        output.WriteRawTag(165, 2);
        output.WriteFloat(ShieldMax);
      }
      if (HasEnergyMax) {
        output.WriteRawTag(173, 2);
        output.WriteFloat(EnergyMax);
      }
      if (HasIsHallucination) {
        output.WriteRawTag(176, 2);
        output.WriteBool(IsHallucination);
      }
      if (HasIsActive) {
        output.WriteRawTag(184, 2);
        output.WriteBool(IsActive);
      }
      if (HasAttackUpgradeLevel) {
        output.WriteRawTag(192, 2);
        output.WriteInt32(AttackUpgradeLevel);
      }
      if (HasArmorUpgradeLevel) {
        output.WriteRawTag(200, 2);
        output.WriteInt32(ArmorUpgradeLevel);
      }
      if (HasShieldUpgradeLevel) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(ShieldUpgradeLevel);
      }
      if (HasBuffDurationRemain) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(BuffDurationRemain);
      }
      if (HasBuffDurationMax) {
        output.WriteRawTag(224, 2);
        output.WriteInt32(BuffDurationMax);
      }
      rallyTargets_.WriteTo(ref output, _repeated_rallyTargets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDisplayType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DisplayType);
      }
      if (HasAlliance) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Alliance);
      }
      if (HasTag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Tag);
      }
      if (HasUnitType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnitType);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Owner);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (HasFacing) {
        size += 1 + 4;
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (HasBuildProgress) {
        size += 1 + 4;
      }
      if (HasCloak) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cloak);
      }
      size += buffIds_.CalculateSize(_repeated_buffIds_codec);
      if (HasDetectRange) {
        size += 2 + 4;
      }
      if (HasRadarRange) {
        size += 2 + 4;
      }
      if (HasIsSelected) {
        size += 1 + 1;
      }
      if (HasIsOnScreen) {
        size += 1 + 1;
      }
      if (HasIsBlip) {
        size += 1 + 1;
      }
      if (HasIsPowered) {
        size += 2 + 1;
      }
      if (HasIsActive) {
        size += 2 + 1;
      }
      if (HasAttackUpgradeLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AttackUpgradeLevel);
      }
      if (HasArmorUpgradeLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ArmorUpgradeLevel);
      }
      if (HasShieldUpgradeLevel) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShieldUpgradeLevel);
      }
      if (HasHealth) {
        size += 1 + 4;
      }
      if (HasHealthMax) {
        size += 1 + 4;
      }
      if (HasShield) {
        size += 2 + 4;
      }
      if (HasShieldMax) {
        size += 2 + 4;
      }
      if (HasEnergy) {
        size += 2 + 4;
      }
      if (HasEnergyMax) {
        size += 2 + 4;
      }
      if (HasMineralContents) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MineralContents);
      }
      if (HasVespeneContents) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VespeneContents);
      }
      if (HasIsFlying) {
        size += 2 + 1;
      }
      if (HasIsBurrowed) {
        size += 2 + 1;
      }
      if (HasIsHallucination) {
        size += 2 + 1;
      }
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (HasAddOnTag) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(AddOnTag);
      }
      size += passengers_.CalculateSize(_repeated_passengers_codec);
      if (HasCargoSpaceTaken) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CargoSpaceTaken);
      }
      if (HasCargoSpaceMax) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CargoSpaceMax);
      }
      if (HasAssignedHarvesters) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AssignedHarvesters);
      }
      if (HasIdealHarvesters) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IdealHarvesters);
      }
      if (HasWeaponCooldown) {
        size += 2 + 4;
      }
      if (HasEngagedTargetTag) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(EngagedTargetTag);
      }
      if (HasBuffDurationRemain) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BuffDurationRemain);
      }
      if (HasBuffDurationMax) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BuffDurationMax);
      }
      size += rallyTargets_.CalculateSize(_repeated_rallyTargets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Unit other) {
      if (other == null) {
        return;
      }
      if (other.HasDisplayType) {
        DisplayType = other.DisplayType;
      }
      if (other.HasAlliance) {
        Alliance = other.Alliance;
      }
      if (other.HasTag) {
        Tag = other.Tag;
      }
      if (other.HasUnitType) {
        UnitType = other.UnitType;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::SC2APIProtocol.Point();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.HasFacing) {
        Facing = other.Facing;
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      if (other.HasBuildProgress) {
        BuildProgress = other.BuildProgress;
      }
      if (other.HasCloak) {
        Cloak = other.Cloak;
      }
      buffIds_.Add(other.buffIds_);
      if (other.HasDetectRange) {
        DetectRange = other.DetectRange;
      }
      if (other.HasRadarRange) {
        RadarRange = other.RadarRange;
      }
      if (other.HasIsSelected) {
        IsSelected = other.IsSelected;
      }
      if (other.HasIsOnScreen) {
        IsOnScreen = other.IsOnScreen;
      }
      if (other.HasIsBlip) {
        IsBlip = other.IsBlip;
      }
      if (other.HasIsPowered) {
        IsPowered = other.IsPowered;
      }
      if (other.HasIsActive) {
        IsActive = other.IsActive;
      }
      if (other.HasAttackUpgradeLevel) {
        AttackUpgradeLevel = other.AttackUpgradeLevel;
      }
      if (other.HasArmorUpgradeLevel) {
        ArmorUpgradeLevel = other.ArmorUpgradeLevel;
      }
      if (other.HasShieldUpgradeLevel) {
        ShieldUpgradeLevel = other.ShieldUpgradeLevel;
      }
      if (other.HasHealth) {
        Health = other.Health;
      }
      if (other.HasHealthMax) {
        HealthMax = other.HealthMax;
      }
      if (other.HasShield) {
        Shield = other.Shield;
      }
      if (other.HasShieldMax) {
        ShieldMax = other.ShieldMax;
      }
      if (other.HasEnergy) {
        Energy = other.Energy;
      }
      if (other.HasEnergyMax) {
        EnergyMax = other.EnergyMax;
      }
      if (other.HasMineralContents) {
        MineralContents = other.MineralContents;
      }
      if (other.HasVespeneContents) {
        VespeneContents = other.VespeneContents;
      }
      if (other.HasIsFlying) {
        IsFlying = other.IsFlying;
      }
      if (other.HasIsBurrowed) {
        IsBurrowed = other.IsBurrowed;
      }
      if (other.HasIsHallucination) {
        IsHallucination = other.IsHallucination;
      }
      orders_.Add(other.orders_);
      if (other.HasAddOnTag) {
        AddOnTag = other.AddOnTag;
      }
      passengers_.Add(other.passengers_);
      if (other.HasCargoSpaceTaken) {
        CargoSpaceTaken = other.CargoSpaceTaken;
      }
      if (other.HasCargoSpaceMax) {
        CargoSpaceMax = other.CargoSpaceMax;
      }
      if (other.HasAssignedHarvesters) {
        AssignedHarvesters = other.AssignedHarvesters;
      }
      if (other.HasIdealHarvesters) {
        IdealHarvesters = other.IdealHarvesters;
      }
      if (other.HasWeaponCooldown) {
        WeaponCooldown = other.WeaponCooldown;
      }
      if (other.HasEngagedTargetTag) {
        EngagedTargetTag = other.EngagedTargetTag;
      }
      if (other.HasBuffDurationRemain) {
        BuffDurationRemain = other.BuffDurationRemain;
      }
      if (other.HasBuffDurationMax) {
        BuffDurationMax = other.BuffDurationMax;
      }
      rallyTargets_.Add(other.rallyTargets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DisplayType = (global::SC2APIProtocol.DisplayType) input.ReadEnum();
            break;
          }
          case 16: {
            Alliance = (global::SC2APIProtocol.Alliance) input.ReadEnum();
            break;
          }
          case 24: {
            Tag = input.ReadUInt64();
            break;
          }
          case 32: {
            UnitType = input.ReadUInt32();
            break;
          }
          case 40: {
            Owner = input.ReadInt32();
            break;
          }
          case 50: {
            if (pos_ == null) {
              Pos = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 61: {
            Facing = input.ReadFloat();
            break;
          }
          case 69: {
            Radius = input.ReadFloat();
            break;
          }
          case 77: {
            BuildProgress = input.ReadFloat();
            break;
          }
          case 80: {
            Cloak = (global::SC2APIProtocol.CloakState) input.ReadEnum();
            break;
          }
          case 88: {
            IsSelected = input.ReadBool();
            break;
          }
          case 96: {
            IsOnScreen = input.ReadBool();
            break;
          }
          case 104: {
            IsBlip = input.ReadBool();
            break;
          }
          case 117: {
            Health = input.ReadFloat();
            break;
          }
          case 125: {
            HealthMax = input.ReadFloat();
            break;
          }
          case 133: {
            Shield = input.ReadFloat();
            break;
          }
          case 141: {
            Energy = input.ReadFloat();
            break;
          }
          case 144: {
            MineralContents = input.ReadInt32();
            break;
          }
          case 152: {
            VespeneContents = input.ReadInt32();
            break;
          }
          case 160: {
            IsFlying = input.ReadBool();
            break;
          }
          case 168: {
            IsBurrowed = input.ReadBool();
            break;
          }
          case 178: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
          case 184: {
            AddOnTag = input.ReadUInt64();
            break;
          }
          case 194: {
            passengers_.AddEntriesFrom(input, _repeated_passengers_codec);
            break;
          }
          case 200: {
            CargoSpaceTaken = input.ReadInt32();
            break;
          }
          case 208: {
            CargoSpaceMax = input.ReadInt32();
            break;
          }
          case 218:
          case 216: {
            buffIds_.AddEntriesFrom(input, _repeated_buffIds_codec);
            break;
          }
          case 224: {
            AssignedHarvesters = input.ReadInt32();
            break;
          }
          case 232: {
            IdealHarvesters = input.ReadInt32();
            break;
          }
          case 245: {
            WeaponCooldown = input.ReadFloat();
            break;
          }
          case 253: {
            DetectRange = input.ReadFloat();
            break;
          }
          case 261: {
            RadarRange = input.ReadFloat();
            break;
          }
          case 272: {
            EngagedTargetTag = input.ReadUInt64();
            break;
          }
          case 280: {
            IsPowered = input.ReadBool();
            break;
          }
          case 293: {
            ShieldMax = input.ReadFloat();
            break;
          }
          case 301: {
            EnergyMax = input.ReadFloat();
            break;
          }
          case 304: {
            IsHallucination = input.ReadBool();
            break;
          }
          case 312: {
            IsActive = input.ReadBool();
            break;
          }
          case 320: {
            AttackUpgradeLevel = input.ReadInt32();
            break;
          }
          case 328: {
            ArmorUpgradeLevel = input.ReadInt32();
            break;
          }
          case 336: {
            ShieldUpgradeLevel = input.ReadInt32();
            break;
          }
          case 344: {
            BuffDurationRemain = input.ReadInt32();
            break;
          }
          case 352: {
            BuffDurationMax = input.ReadInt32();
            break;
          }
          case 362: {
            rallyTargets_.AddEntriesFrom(input, _repeated_rallyTargets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DisplayType = (global::SC2APIProtocol.DisplayType) input.ReadEnum();
            break;
          }
          case 16: {
            Alliance = (global::SC2APIProtocol.Alliance) input.ReadEnum();
            break;
          }
          case 24: {
            Tag = input.ReadUInt64();
            break;
          }
          case 32: {
            UnitType = input.ReadUInt32();
            break;
          }
          case 40: {
            Owner = input.ReadInt32();
            break;
          }
          case 50: {
            if (pos_ == null) {
              Pos = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 61: {
            Facing = input.ReadFloat();
            break;
          }
          case 69: {
            Radius = input.ReadFloat();
            break;
          }
          case 77: {
            BuildProgress = input.ReadFloat();
            break;
          }
          case 80: {
            Cloak = (global::SC2APIProtocol.CloakState) input.ReadEnum();
            break;
          }
          case 88: {
            IsSelected = input.ReadBool();
            break;
          }
          case 96: {
            IsOnScreen = input.ReadBool();
            break;
          }
          case 104: {
            IsBlip = input.ReadBool();
            break;
          }
          case 117: {
            Health = input.ReadFloat();
            break;
          }
          case 125: {
            HealthMax = input.ReadFloat();
            break;
          }
          case 133: {
            Shield = input.ReadFloat();
            break;
          }
          case 141: {
            Energy = input.ReadFloat();
            break;
          }
          case 144: {
            MineralContents = input.ReadInt32();
            break;
          }
          case 152: {
            VespeneContents = input.ReadInt32();
            break;
          }
          case 160: {
            IsFlying = input.ReadBool();
            break;
          }
          case 168: {
            IsBurrowed = input.ReadBool();
            break;
          }
          case 178: {
            orders_.AddEntriesFrom(ref input, _repeated_orders_codec);
            break;
          }
          case 184: {
            AddOnTag = input.ReadUInt64();
            break;
          }
          case 194: {
            passengers_.AddEntriesFrom(ref input, _repeated_passengers_codec);
            break;
          }
          case 200: {
            CargoSpaceTaken = input.ReadInt32();
            break;
          }
          case 208: {
            CargoSpaceMax = input.ReadInt32();
            break;
          }
          case 218:
          case 216: {
            buffIds_.AddEntriesFrom(ref input, _repeated_buffIds_codec);
            break;
          }
          case 224: {
            AssignedHarvesters = input.ReadInt32();
            break;
          }
          case 232: {
            IdealHarvesters = input.ReadInt32();
            break;
          }
          case 245: {
            WeaponCooldown = input.ReadFloat();
            break;
          }
          case 253: {
            DetectRange = input.ReadFloat();
            break;
          }
          case 261: {
            RadarRange = input.ReadFloat();
            break;
          }
          case 272: {
            EngagedTargetTag = input.ReadUInt64();
            break;
          }
          case 280: {
            IsPowered = input.ReadBool();
            break;
          }
          case 293: {
            ShieldMax = input.ReadFloat();
            break;
          }
          case 301: {
            EnergyMax = input.ReadFloat();
            break;
          }
          case 304: {
            IsHallucination = input.ReadBool();
            break;
          }
          case 312: {
            IsActive = input.ReadBool();
            break;
          }
          case 320: {
            AttackUpgradeLevel = input.ReadInt32();
            break;
          }
          case 328: {
            ArmorUpgradeLevel = input.ReadInt32();
            break;
          }
          case 336: {
            ShieldUpgradeLevel = input.ReadInt32();
            break;
          }
          case 344: {
            BuffDurationRemain = input.ReadInt32();
            break;
          }
          case 352: {
            BuffDurationMax = input.ReadInt32();
            break;
          }
          case 362: {
            rallyTargets_.AddEntriesFrom(ref input, _repeated_rallyTargets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MapState : pb::IMessage<MapState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MapState> _parser = new pb::MessageParser<MapState>(() => new MapState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MapState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapState(MapState other) : this() {
      visibility_ = other.visibility_ != null ? other.visibility_.Clone() : null;
      creep_ = other.creep_ != null ? other.creep_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MapState Clone() {
      return new MapState(this);
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 1;
    private global::SC2APIProtocol.ImageData visibility_;
    /// <summary>
    /// 1 byte visibility layer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Visibility {
      get { return visibility_; }
      set {
        visibility_ = value;
      }
    }

    /// <summary>Field number for the "creep" field.</summary>
    public const int CreepFieldNumber = 2;
    private global::SC2APIProtocol.ImageData creep_;
    /// <summary>
    /// 1 bit creep layer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ImageData Creep {
      get { return creep_; }
      set {
        creep_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MapState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MapState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Visibility, other.Visibility)) return false;
      if (!object.Equals(Creep, other.Creep)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (visibility_ != null) hash ^= Visibility.GetHashCode();
      if (creep_ != null) hash ^= Creep.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (visibility_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Visibility);
      }
      if (creep_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Creep);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (visibility_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Visibility);
      }
      if (creep_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Creep);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (visibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Visibility);
      }
      if (creep_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Creep);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MapState other) {
      if (other == null) {
        return;
      }
      if (other.visibility_ != null) {
        if (visibility_ == null) {
          Visibility = new global::SC2APIProtocol.ImageData();
        }
        Visibility.MergeFrom(other.Visibility);
      }
      if (other.creep_ != null) {
        if (creep_ == null) {
          Creep = new global::SC2APIProtocol.ImageData();
        }
        Creep.MergeFrom(other.Creep);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (visibility_ == null) {
              Visibility = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Visibility);
            break;
          }
          case 18: {
            if (creep_ == null) {
              Creep = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Creep);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (visibility_ == null) {
              Visibility = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Visibility);
            break;
          }
          case 18: {
            if (creep_ == null) {
              Creep = new global::SC2APIProtocol.ImageData();
            }
            input.ReadMessage(Creep);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event(Event other) : this() {
      deadUnits_ = other.deadUnits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "dead_units" field.</summary>
    public const int DeadUnitsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_deadUnits_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> deadUnits_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> DeadUnits {
      get { return deadUnits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!deadUnits_.Equals(other.deadUnits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= deadUnits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      deadUnits_.WriteTo(output, _repeated_deadUnits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      deadUnits_.WriteTo(ref output, _repeated_deadUnits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += deadUnits_.CalculateSize(_repeated_deadUnits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      deadUnits_.Add(other.deadUnits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            deadUnits_.AddEntriesFrom(input, _repeated_deadUnits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            deadUnits_.AddEntriesFrom(ref input, _repeated_deadUnits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Effect : pb::IMessage<Effect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Effect> _parser = new pb::MessageParser<Effect>(() => new Effect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Effect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Effect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Effect(Effect other) : this() {
      _hasBits0 = other._hasBits0;
      effectId_ = other.effectId_;
      pos_ = other.pos_.Clone();
      alliance_ = other.alliance_;
      owner_ = other.owner_;
      radius_ = other.radius_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Effect Clone() {
      return new Effect(this);
    }

    /// <summary>Field number for the "effect_id" field.</summary>
    public const int EffectIdFieldNumber = 1;
    private readonly static uint EffectIdDefaultValue = 0;

    private uint effectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EffectId {
      get { if ((_hasBits0 & 1) != 0) { return effectId_; } else { return EffectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        effectId_ = value;
      }
    }
    /// <summary>Gets whether the "effect_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEffectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "effect_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEffectId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SC2APIProtocol.Point2D> _repeated_pos_codec
        = pb::FieldCodec.ForMessage(18, global::SC2APIProtocol.Point2D.Parser);
    private readonly pbc::RepeatedField<global::SC2APIProtocol.Point2D> pos_ = new pbc::RepeatedField<global::SC2APIProtocol.Point2D>();
    /// <summary>
    /// Effect may impact multiple locations. (eg. Lurker attack)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::SC2APIProtocol.Point2D> Pos {
      get { return pos_; }
    }

    /// <summary>Field number for the "alliance" field.</summary>
    public const int AllianceFieldNumber = 3;
    private readonly static global::SC2APIProtocol.Alliance AllianceDefaultValue = global::SC2APIProtocol.Alliance.Self;

    private global::SC2APIProtocol.Alliance alliance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Alliance Alliance {
      get { if ((_hasBits0 & 2) != 0) { return alliance_; } else { return AllianceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        alliance_ = value;
      }
    }
    /// <summary>Gets whether the "alliance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlliance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "alliance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlliance() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private readonly static int OwnerDefaultValue = 0;

    private int owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Owner {
      get { if ((_hasBits0 & 4) != 0) { return owner_; } else { return OwnerDefaultValue; } }
      set {
        _hasBits0 |= 4;
        owner_ = value;
      }
    }
    /// <summary>Gets whether the "owner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOwner {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "owner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOwner() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 5;
    private readonly static float RadiusDefaultValue = 0F;

    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 8) != 0) { return radius_; } else { return RadiusDefaultValue; } }
      set {
        _hasBits0 |= 8;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Effect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Effect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EffectId != other.EffectId) return false;
      if(!pos_.Equals(other.pos_)) return false;
      if (Alliance != other.Alliance) return false;
      if (Owner != other.Owner) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEffectId) hash ^= EffectId.GetHashCode();
      hash ^= pos_.GetHashCode();
      if (HasAlliance) hash ^= Alliance.GetHashCode();
      if (HasOwner) hash ^= Owner.GetHashCode();
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEffectId) {
        output.WriteRawTag(8);
        output.WriteUInt32(EffectId);
      }
      pos_.WriteTo(output, _repeated_pos_codec);
      if (HasAlliance) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Alliance);
      }
      if (HasOwner) {
        output.WriteRawTag(32);
        output.WriteInt32(Owner);
      }
      if (HasRadius) {
        output.WriteRawTag(45);
        output.WriteFloat(Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEffectId) {
        output.WriteRawTag(8);
        output.WriteUInt32(EffectId);
      }
      pos_.WriteTo(ref output, _repeated_pos_codec);
      if (HasAlliance) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Alliance);
      }
      if (HasOwner) {
        output.WriteRawTag(32);
        output.WriteInt32(Owner);
      }
      if (HasRadius) {
        output.WriteRawTag(45);
        output.WriteFloat(Radius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEffectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EffectId);
      }
      size += pos_.CalculateSize(_repeated_pos_codec);
      if (HasAlliance) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Alliance);
      }
      if (HasOwner) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Owner);
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Effect other) {
      if (other == null) {
        return;
      }
      if (other.HasEffectId) {
        EffectId = other.EffectId;
      }
      pos_.Add(other.pos_);
      if (other.HasAlliance) {
        Alliance = other.Alliance;
      }
      if (other.HasOwner) {
        Owner = other.Owner;
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EffectId = input.ReadUInt32();
            break;
          }
          case 18: {
            pos_.AddEntriesFrom(input, _repeated_pos_codec);
            break;
          }
          case 24: {
            Alliance = (global::SC2APIProtocol.Alliance) input.ReadEnum();
            break;
          }
          case 32: {
            Owner = input.ReadInt32();
            break;
          }
          case 45: {
            Radius = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EffectId = input.ReadUInt32();
            break;
          }
          case 18: {
            pos_.AddEntriesFrom(ref input, _repeated_pos_codec);
            break;
          }
          case 24: {
            Alliance = (global::SC2APIProtocol.Alliance) input.ReadEnum();
            break;
          }
          case 32: {
            Owner = input.ReadInt32();
            break;
          }
          case 45: {
            Radius = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionRaw : pb::IMessage<ActionRaw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionRaw> _parser = new pb::MessageParser<ActionRaw>(() => new ActionRaw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionRaw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRaw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRaw(ActionRaw other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.UnitCommand:
          UnitCommand = other.UnitCommand.Clone();
          break;
        case ActionOneofCase.CameraMove:
          CameraMove = other.CameraMove.Clone();
          break;
        case ActionOneofCase.ToggleAutocast:
          ToggleAutocast = other.ToggleAutocast.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRaw Clone() {
      return new ActionRaw(this);
    }

    /// <summary>Field number for the "unit_command" field.</summary>
    public const int UnitCommandFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionRawUnitCommand UnitCommand {
      get { return actionCase_ == ActionOneofCase.UnitCommand ? (global::SC2APIProtocol.ActionRawUnitCommand) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.UnitCommand;
      }
    }

    /// <summary>Field number for the "camera_move" field.</summary>
    public const int CameraMoveFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionRawCameraMove CameraMove {
      get { return actionCase_ == ActionOneofCase.CameraMove ? (global::SC2APIProtocol.ActionRawCameraMove) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.CameraMove;
      }
    }

    /// <summary>Field number for the "toggle_autocast" field.</summary>
    public const int ToggleAutocastFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.ActionRawToggleAutocast ToggleAutocast {
      get { return actionCase_ == ActionOneofCase.ToggleAutocast ? (global::SC2APIProtocol.ActionRawToggleAutocast) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.ToggleAutocast;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      UnitCommand = 1,
      CameraMove = 2,
      ToggleAutocast = 3,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionRaw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionRaw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UnitCommand, other.UnitCommand)) return false;
      if (!object.Equals(CameraMove, other.CameraMove)) return false;
      if (!object.Equals(ToggleAutocast, other.ToggleAutocast)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.UnitCommand) hash ^= UnitCommand.GetHashCode();
      if (actionCase_ == ActionOneofCase.CameraMove) hash ^= CameraMove.GetHashCode();
      if (actionCase_ == ActionOneofCase.ToggleAutocast) hash ^= ToggleAutocast.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (actionCase_ == ActionOneofCase.UnitCommand) {
        output.WriteRawTag(10);
        output.WriteMessage(UnitCommand);
      }
      if (actionCase_ == ActionOneofCase.CameraMove) {
        output.WriteRawTag(18);
        output.WriteMessage(CameraMove);
      }
      if (actionCase_ == ActionOneofCase.ToggleAutocast) {
        output.WriteRawTag(26);
        output.WriteMessage(ToggleAutocast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (actionCase_ == ActionOneofCase.UnitCommand) {
        output.WriteRawTag(10);
        output.WriteMessage(UnitCommand);
      }
      if (actionCase_ == ActionOneofCase.CameraMove) {
        output.WriteRawTag(18);
        output.WriteMessage(CameraMove);
      }
      if (actionCase_ == ActionOneofCase.ToggleAutocast) {
        output.WriteRawTag(26);
        output.WriteMessage(ToggleAutocast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.UnitCommand) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitCommand);
      }
      if (actionCase_ == ActionOneofCase.CameraMove) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CameraMove);
      }
      if (actionCase_ == ActionOneofCase.ToggleAutocast) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToggleAutocast);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionRaw other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.UnitCommand:
          if (UnitCommand == null) {
            UnitCommand = new global::SC2APIProtocol.ActionRawUnitCommand();
          }
          UnitCommand.MergeFrom(other.UnitCommand);
          break;
        case ActionOneofCase.CameraMove:
          if (CameraMove == null) {
            CameraMove = new global::SC2APIProtocol.ActionRawCameraMove();
          }
          CameraMove.MergeFrom(other.CameraMove);
          break;
        case ActionOneofCase.ToggleAutocast:
          if (ToggleAutocast == null) {
            ToggleAutocast = new global::SC2APIProtocol.ActionRawToggleAutocast();
          }
          ToggleAutocast.MergeFrom(other.ToggleAutocast);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::SC2APIProtocol.ActionRawUnitCommand subBuilder = new global::SC2APIProtocol.ActionRawUnitCommand();
            if (actionCase_ == ActionOneofCase.UnitCommand) {
              subBuilder.MergeFrom(UnitCommand);
            }
            input.ReadMessage(subBuilder);
            UnitCommand = subBuilder;
            break;
          }
          case 18: {
            global::SC2APIProtocol.ActionRawCameraMove subBuilder = new global::SC2APIProtocol.ActionRawCameraMove();
            if (actionCase_ == ActionOneofCase.CameraMove) {
              subBuilder.MergeFrom(CameraMove);
            }
            input.ReadMessage(subBuilder);
            CameraMove = subBuilder;
            break;
          }
          case 26: {
            global::SC2APIProtocol.ActionRawToggleAutocast subBuilder = new global::SC2APIProtocol.ActionRawToggleAutocast();
            if (actionCase_ == ActionOneofCase.ToggleAutocast) {
              subBuilder.MergeFrom(ToggleAutocast);
            }
            input.ReadMessage(subBuilder);
            ToggleAutocast = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::SC2APIProtocol.ActionRawUnitCommand subBuilder = new global::SC2APIProtocol.ActionRawUnitCommand();
            if (actionCase_ == ActionOneofCase.UnitCommand) {
              subBuilder.MergeFrom(UnitCommand);
            }
            input.ReadMessage(subBuilder);
            UnitCommand = subBuilder;
            break;
          }
          case 18: {
            global::SC2APIProtocol.ActionRawCameraMove subBuilder = new global::SC2APIProtocol.ActionRawCameraMove();
            if (actionCase_ == ActionOneofCase.CameraMove) {
              subBuilder.MergeFrom(CameraMove);
            }
            input.ReadMessage(subBuilder);
            CameraMove = subBuilder;
            break;
          }
          case 26: {
            global::SC2APIProtocol.ActionRawToggleAutocast subBuilder = new global::SC2APIProtocol.ActionRawToggleAutocast();
            if (actionCase_ == ActionOneofCase.ToggleAutocast) {
              subBuilder.MergeFrom(ToggleAutocast);
            }
            input.ReadMessage(subBuilder);
            ToggleAutocast = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionRawUnitCommand : pb::IMessage<ActionRawUnitCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionRawUnitCommand> _parser = new pb::MessageParser<ActionRawUnitCommand>(() => new ActionRawUnitCommand());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionRawUnitCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawUnitCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawUnitCommand(ActionRawUnitCommand other) : this() {
      _hasBits0 = other._hasBits0;
      abilityId_ = other.abilityId_;
      unitTags_ = other.unitTags_.Clone();
      queueCommand_ = other.queueCommand_;
      switch (other.TargetCase) {
        case TargetOneofCase.TargetWorldSpacePos:
          TargetWorldSpacePos = other.TargetWorldSpacePos.Clone();
          break;
        case TargetOneofCase.TargetUnitTag:
          TargetUnitTag = other.TargetUnitTag;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawUnitCommand Clone() {
      return new ActionRawUnitCommand(this);
    }

    /// <summary>Field number for the "ability_id" field.</summary>
    public const int AbilityIdFieldNumber = 1;
    private readonly static int AbilityIdDefaultValue = 0;

    private int abilityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AbilityId {
      get { if ((_hasBits0 & 1) != 0) { return abilityId_; } else { return AbilityIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        abilityId_ = value;
      }
    }
    /// <summary>Gets whether the "ability_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAbilityId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ability_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAbilityId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_world_space_pos" field.</summary>
    public const int TargetWorldSpacePosFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point2D TargetWorldSpacePos {
      get { return targetCase_ == TargetOneofCase.TargetWorldSpacePos ? (global::SC2APIProtocol.Point2D) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.TargetWorldSpacePos;
      }
    }

    /// <summary>Field number for the "target_unit_tag" field.</summary>
    public const int TargetUnitTagFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TargetUnitTag {
      get { return HasTargetUnitTag ? (ulong) target_ : 0UL; }
      set {
        target_ = value;
        targetCase_ = TargetOneofCase.TargetUnitTag;
      }
    }
    /// <summary>Gets whether the "target_unit_tag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTargetUnitTag {
      get { return targetCase_ == TargetOneofCase.TargetUnitTag; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "target_unit_tag" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTargetUnitTag() {
      if (HasTargetUnitTag) {
        ClearTarget();
      }
    }

    /// <summary>Field number for the "unit_tags" field.</summary>
    public const int UnitTagsFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_unitTags_codec
        = pb::FieldCodec.ForUInt64(32);
    private readonly pbc::RepeatedField<ulong> unitTags_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> UnitTags {
      get { return unitTags_; }
    }

    /// <summary>Field number for the "queue_command" field.</summary>
    public const int QueueCommandFieldNumber = 5;
    private readonly static bool QueueCommandDefaultValue = false;

    private bool queueCommand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool QueueCommand {
      get { if ((_hasBits0 & 2) != 0) { return queueCommand_; } else { return QueueCommandDefaultValue; } }
      set {
        _hasBits0 |= 2;
        queueCommand_ = value;
      }
    }
    /// <summary>Gets whether the "queue_command" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQueueCommand {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "queue_command" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQueueCommand() {
      _hasBits0 &= ~2;
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      TargetWorldSpacePos = 2,
      TargetUnitTag = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionRawUnitCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionRawUnitCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityId != other.AbilityId) return false;
      if (!object.Equals(TargetWorldSpacePos, other.TargetWorldSpacePos)) return false;
      if (TargetUnitTag != other.TargetUnitTag) return false;
      if(!unitTags_.Equals(other.unitTags_)) return false;
      if (QueueCommand != other.QueueCommand) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAbilityId) hash ^= AbilityId.GetHashCode();
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) hash ^= TargetWorldSpacePos.GetHashCode();
      if (HasTargetUnitTag) hash ^= TargetUnitTag.GetHashCode();
      hash ^= unitTags_.GetHashCode();
      if (HasQueueCommand) hash ^= QueueCommand.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteInt32(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetWorldSpacePos);
      }
      if (HasTargetUnitTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(TargetUnitTag);
      }
      unitTags_.WriteTo(output, _repeated_unitTags_codec);
      if (HasQueueCommand) {
        output.WriteRawTag(40);
        output.WriteBool(QueueCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteInt32(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetWorldSpacePos);
      }
      if (HasTargetUnitTag) {
        output.WriteRawTag(24);
        output.WriteUInt64(TargetUnitTag);
      }
      unitTags_.WriteTo(ref output, _repeated_unitTags_codec);
      if (HasQueueCommand) {
        output.WriteRawTag(40);
        output.WriteBool(QueueCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAbilityId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityId);
      }
      if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetWorldSpacePos);
      }
      if (HasTargetUnitTag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetUnitTag);
      }
      size += unitTags_.CalculateSize(_repeated_unitTags_codec);
      if (HasQueueCommand) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionRawUnitCommand other) {
      if (other == null) {
        return;
      }
      if (other.HasAbilityId) {
        AbilityId = other.AbilityId;
      }
      unitTags_.Add(other.unitTags_);
      if (other.HasQueueCommand) {
        QueueCommand = other.QueueCommand;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.TargetWorldSpacePos:
          if (TargetWorldSpacePos == null) {
            TargetWorldSpacePos = new global::SC2APIProtocol.Point2D();
          }
          TargetWorldSpacePos.MergeFrom(other.TargetWorldSpacePos);
          break;
        case TargetOneofCase.TargetUnitTag:
          TargetUnitTag = other.TargetUnitTag;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AbilityId = input.ReadInt32();
            break;
          }
          case 18: {
            global::SC2APIProtocol.Point2D subBuilder = new global::SC2APIProtocol.Point2D();
            if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
              subBuilder.MergeFrom(TargetWorldSpacePos);
            }
            input.ReadMessage(subBuilder);
            TargetWorldSpacePos = subBuilder;
            break;
          }
          case 24: {
            TargetUnitTag = input.ReadUInt64();
            break;
          }
          case 34:
          case 32: {
            unitTags_.AddEntriesFrom(input, _repeated_unitTags_codec);
            break;
          }
          case 40: {
            QueueCommand = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AbilityId = input.ReadInt32();
            break;
          }
          case 18: {
            global::SC2APIProtocol.Point2D subBuilder = new global::SC2APIProtocol.Point2D();
            if (targetCase_ == TargetOneofCase.TargetWorldSpacePos) {
              subBuilder.MergeFrom(TargetWorldSpacePos);
            }
            input.ReadMessage(subBuilder);
            TargetWorldSpacePos = subBuilder;
            break;
          }
          case 24: {
            TargetUnitTag = input.ReadUInt64();
            break;
          }
          case 34:
          case 32: {
            unitTags_.AddEntriesFrom(ref input, _repeated_unitTags_codec);
            break;
          }
          case 40: {
            QueueCommand = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionRawCameraMove : pb::IMessage<ActionRawCameraMove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionRawCameraMove> _parser = new pb::MessageParser<ActionRawCameraMove>(() => new ActionRawCameraMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionRawCameraMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawCameraMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawCameraMove(ActionRawCameraMove other) : this() {
      centerWorldSpace_ = other.centerWorldSpace_ != null ? other.centerWorldSpace_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawCameraMove Clone() {
      return new ActionRawCameraMove(this);
    }

    /// <summary>Field number for the "center_world_space" field.</summary>
    public const int CenterWorldSpaceFieldNumber = 1;
    private global::SC2APIProtocol.Point centerWorldSpace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::SC2APIProtocol.Point CenterWorldSpace {
      get { return centerWorldSpace_; }
      set {
        centerWorldSpace_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionRawCameraMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionRawCameraMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CenterWorldSpace, other.CenterWorldSpace)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (centerWorldSpace_ != null) hash ^= CenterWorldSpace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (centerWorldSpace_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CenterWorldSpace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (centerWorldSpace_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CenterWorldSpace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (centerWorldSpace_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CenterWorldSpace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionRawCameraMove other) {
      if (other == null) {
        return;
      }
      if (other.centerWorldSpace_ != null) {
        if (centerWorldSpace_ == null) {
          CenterWorldSpace = new global::SC2APIProtocol.Point();
        }
        CenterWorldSpace.MergeFrom(other.CenterWorldSpace);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (centerWorldSpace_ == null) {
              CenterWorldSpace = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(CenterWorldSpace);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (centerWorldSpace_ == null) {
              CenterWorldSpace = new global::SC2APIProtocol.Point();
            }
            input.ReadMessage(CenterWorldSpace);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ActionRawToggleAutocast : pb::IMessage<ActionRawToggleAutocast>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActionRawToggleAutocast> _parser = new pb::MessageParser<ActionRawToggleAutocast>(() => new ActionRawToggleAutocast());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActionRawToggleAutocast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SC2APIProtocol.RawReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawToggleAutocast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawToggleAutocast(ActionRawToggleAutocast other) : this() {
      _hasBits0 = other._hasBits0;
      abilityId_ = other.abilityId_;
      unitTags_ = other.unitTags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActionRawToggleAutocast Clone() {
      return new ActionRawToggleAutocast(this);
    }

    /// <summary>Field number for the "ability_id" field.</summary>
    public const int AbilityIdFieldNumber = 1;
    private readonly static int AbilityIdDefaultValue = 0;

    private int abilityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AbilityId {
      get { if ((_hasBits0 & 1) != 0) { return abilityId_; } else { return AbilityIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        abilityId_ = value;
      }
    }
    /// <summary>Gets whether the "ability_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAbilityId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ability_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAbilityId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unit_tags" field.</summary>
    public const int UnitTagsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_unitTags_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> unitTags_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> UnitTags {
      get { return unitTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActionRawToggleAutocast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActionRawToggleAutocast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityId != other.AbilityId) return false;
      if(!unitTags_.Equals(other.unitTags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAbilityId) hash ^= AbilityId.GetHashCode();
      hash ^= unitTags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteInt32(AbilityId);
      }
      unitTags_.WriteTo(output, _repeated_unitTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAbilityId) {
        output.WriteRawTag(8);
        output.WriteInt32(AbilityId);
      }
      unitTags_.WriteTo(ref output, _repeated_unitTags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAbilityId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityId);
      }
      size += unitTags_.CalculateSize(_repeated_unitTags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActionRawToggleAutocast other) {
      if (other == null) {
        return;
      }
      if (other.HasAbilityId) {
        AbilityId = other.AbilityId;
      }
      unitTags_.Add(other.unitTags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AbilityId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            unitTags_.AddEntriesFrom(input, _repeated_unitTags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AbilityId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            unitTags_.AddEntriesFrom(ref input, _repeated_unitTags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
